{"version":3,"sources":["lib/api.js","components/dashboard/CardMenu/index.js","components/dashboard/CardMenu/CardMenu.jsx","components/dashboard/DataFilter/DataFilter.jsx","components/dashboard/DataFilter/index.js","components/styled/Statistic.js","components/dashboard/FilteredStats/FilteredStats.jsx","components/dashboard/FilteredStats/index.js","components/dashboard/MonthlyStats.js","lib/transactions.js","components/dashboard/MonthlyOverview.js","lib/date.js","components/dashboard/RecentActivity/RecentActivity.jsx","components/SideBar.js","components/dashboard/TapList/TapList.jsx","components/dashboard/TapList/index.js","components/dashboard/TopTapOrigins/TopTapOrigins.jsx","components/dashboard/TopTapOrigins/index.js","lib/requestApi/sendRequest.js","lib/requestApi/user.js","lib/requestApi/presto.js","lib/requestApi/budget.js","lib/requestApi/me.js","lib/requestApi/index.js","components/AccountSettings.js","components/styled/SmallStatistic.js","components/PrestoSignin.js","components/dashboard/UpdatePresto.js","components/dashboard/User/User.jsx","components/dashboard/User/index.js","components/styled/HeaderBar.js","components/Index.js","components/AuthUser.js","components/Login.js","components/Page.js","components/dashboard/YearStats.js","components/dashboard/YearCostPerTap.js","components/dashboard/YearTransactionBreakdown.js","components/dashboard/YearOverview.js","components/Dashboard.js","routes/Dashboard.js","routes/Login.js","components/RegisterAccount.js","components/Register.js","routes/Register.js","App.js","index.js"],"names":["require","config","path","API","root","concat","send","body","reqMethod","arguments","length","undefined","sendData","method","credentials","headers","Content-Type","toLowerCase","JSON","stringify","currentUser","endpoint","login","logout","register","monthlyTransactions","cardNumber","year","month","searchMonth","searchYear","Date","getFullYear","toString","transactionRange","days","allTransactions","yearToDate","yearToDateData","updateBudget","prestoUsage","prestoLogin","prestoCheckLogin","CardMenu","props","cards","handleChange","currentSelection","options","map","card","index","key","text","value","unshift","makeCardMenuData","react_default","a","createElement","Dropdown","item","onChange","e","_ref","SEARCH_TYPE_RANGE","name","thisMonth","getMonth","thisYear","DataFilter","cardsArray","_this","state","activeSelection","activeSelectionValue","yearOrRange","monthOrUnit","searchType","modalOpen","selectedMonth","selectedYear","url","optionsMap","handleItemClick","event","history","target","textContent","console","log","route","push","handleCalChange","setState","Object","defineProperty","FilterMenu","option","Menu","Item","active","onClick","_this2","this","_this$state","_this$props","children","match","dist_default","_ref2","data","error","loading","Fragment","size","pointing","secondary","header","transactions","moment","date","format","position","dashboard_CardMenu","Icon","Modal","open","onClose","close","Header","Content","commonjs","inline","closable","dateFormat","maxDate","minDate","Actions","Button","negative","content","onclick","positive","icon","labelPosition","nextProps","prevState","parseInt","React","Component","defaultProps","Statistic","label","extra","extraIcon","iconName","iconColor","isCustomIcon","extraFooter","extraFooterIcon","Card","style","flex","minWidth","maxWidth","borderRadius","zIndex","paddingLeft","paddingRight","Description","Grid","columns","verticalAlign","Row","Column","textAlign","color","fontSize","minHeight","className","lineHeight","fontWeight","margin","FilteredStats","totalAmount","prevTotalAmount","totalTaps","prevTotalTaps","totalFares","prevTotalFares","totalTransfers","prevTotalTransfers","prevLastDate","now","lastYearTotalAmount","lastYearTotalTaps","lastYearTotalFares","lastYearTotalTransfers","hasLastYear","prevInterval","count","transfers","fares","utcOffset","lastYear","Group","centered","toFixed","Math","abs","TTContainer","styled","div","_templateObject","TTItem","_templateObject2","TTLocationList","ul","_templateObject3","LegendDot","_templateObject4","TTLocationItem","li","_templateObject5","CustomizedAxisTick","x","y","payload","stroke","transform","dy","textAnchor","fill","CustomTooltip","XAxis","YAxis","dayOfWeek","trips","amount","locations","location","time","MonthlyStats","breakdown","includeAmountInDomain","currDate","domain","dataset","start","stop","dateObj","currentDate","stopDate","transferLocations","fareLocations","add","getDates","forEach","parseFloat","type","keys","totalDailyTransactionBreakdown","es6","height","background","top","right","left","bottom","vertical","dataKey","strokeWidth","dot","r","allowDecimals","padding","tickLine","axisLine","tickSize","minTickGap","interval","tick","MonthlyStats_CustomizedAxisTick","wrapperStyle","MonthlyStats_CustomTooltip","iconType","Segment","placeholder","MonthlyOverview","num","boxShadow","border","Message","message","Timeline","RecentActivity_templateObject","TimelineLine","section","RecentActivity_templateObject2","TimelineItem","RecentActivity_templateObject3","TimelineContainer","RecentActivity_templateObject4","TimelineTime","RecentActivity_templateObject5","AM","TimelineHeader","_templateObject6","TimelineLocation","_templateObject7","TimelineInfoContainer","_templateObject8","TimelineInfo","_templateObject9","RecentActivity","transaction","groupByDate","sort","b","Label","toUpperCase","display","flexFlow","alignItems","justifyContent","round","nav","SideBar_templateObject","TapList","tapRows","slice","parse","Table","id","Cell","agency","as","Subheader","celled","HeaderCell","Body","COLORS","TopTapOrigins","range","result","prevLastVisited","lastVisited","currLastVisited","objectSpread","percent","filter","orderLocationByMostTaps","Divider","horizontal","width","entry","_callee","fetchHandler","opts","ROOT_URL","response","_args","regenerator_default","wrap","_context","prev","next","assign","sent","json","abrupt","sendRequestWrapper","fetch","sendRequest","requestHandler","request","username","password","_callee2","_context2","me","apiHandlerWrapper","prestoIsLoggedIn","AccountSettings","firstName","user","lastName","email","monthlyPassCost","budget","fareCost","handleFieldChange","_e$target","attached","piled","Form","widths","Field","htmlFor","asyncToGenerator","mark","requestApi","PropTypes","shape","SmallStatistic","footer","marginTop","PrestoSignin","inProgress","progressMessage","handleTextEntry","incrementSteps","update","closeModal","manual","from","Input","fluid","disabled","isLoggedIn","status","UpdatePresto","PrestoSignin_PrestoSignin","User","accountModalOpen","prestoModalOpen","handleAccountModalClose","handlePrestoModalClose","balance","lastActivity","since","activeItem","borderless","flexDirection","fromNow","updated_at","dashboard_UpdatePresto","components_AccountSettings","withRouter","Bar","HeaderBar_templateObject","HeaderBar","Flex","Index_templateObject","Container","Index_templateObject2","LinkDiv","Index_templateObject3","Index","maxHeight","FlexRow","justify","align","marginBottom","react_router_dom","to","AuthUser","Dimmer","Loader","Login","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","saveToState","UserContext","Consumer","ctx","react_router","iconPosition","marginRight","warning","createContext","Page_templateObject","main","Page_templateObject2","Page_templateObject3","Page","menuValue","updatePrestoOpen","accountSettingsOpen","redirect","loginRequired","components_AuthUser","components_Index","Provider","Login_Login","YearStats","marginLeft","tickMargin","YearCostPerTap","totalMonthlyPassCost","costPerTapIfPass","paymentTaps","transferTaps","costPerTap","YearTransactionBreakdown","numOfMonths","stackId","Dashboard","contextRef","createRef","_this$props$props$dat","_this$props$props$dat2","spent","Ref","innerRef","Sticky","context","dashboard_User","params","dashboard_DataFilter","MonthlyOverview_MonthlyOverview","dashboard_FilteredStats","dashboard_TopTapOrigins","Page_Page","components_Dashboard","Register","passwordAgain","NProgress","done","activeStep","completedSteps","_this$state2","Container_Container","basic","Step","ordered","completed","Title","RegisterAccount_Register","components_Register","App","exact","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d7e56404.chunk.js","sourcesContent":["require('dotenv').config({ path: '../../../.env' });\n\nconst API = {\n  root: `${process.env.NODE_ENV === 'development' ? 'http://localhost:3333' : ''}/api`,\n  send: (body, method = 'POST') => {\n    let reqMethod = method;\n\n    if (typeof body === 'string') {\n      reqMethod = body;\n    }\n\n    const sendData = {\n      method: reqMethod,\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    if (reqMethod.toLowerCase() !== 'get') {\n      sendData.body = JSON.stringify(body);\n    }\n\n    return sendData;\n  },\n\n  currentUser: {\n    method: 'GET',\n    endpoint: '/v1/user/me',\n  },\n  login: '/login',\n  logout: {\n    endpoint: '/logout',\n    method: 'GET',\n  },\n  register: '/signup',\n\n  monthlyTransactions: (cardNumber, year, month) => {\n    let searchMonth = month;\n    let searchYear = year;\n\n    if (year.length <= 2) {\n      searchYear = new Date().getFullYear().toString();\n      searchMonth = year;\n    }\n\n    return `/v1/transaction/${cardNumber}/monthly/${searchYear}/${searchMonth}`;\n  },\n  transactionRange: (cardNumber, days) => `/v1/transaction/${cardNumber}/range?days=${days}`,\n  allTransactions: {\n    method: 'GET',\n    endpoint: '/v1/transaction',\n  },\n  yearToDate: {\n    method: 'GET',\n    endpoint: '/v1/transaction/ytd',\n  },\n  yearToDateData: {\n    method: 'GET',\n    endpoint: '/v1/transaction/ytd/data',\n  },\n  updateBudget: {\n    method: 'POST',\n    endpoint: '/v1/budget/save',\n  },\n  prestoUsage: '/v1/presto/usage',\n  prestoLogin: { endpoint: '/v1/presto/login', method: 'POST' },\n  prestoCheckLogin: { endpoint: '/v1/presto/check-login', method: 'GET' },\n};\n\nexport default API;\n","import CardMenu from './CardMenu';\n\nexport default CardMenu;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Dropdown } from \"semantic-ui-react\";\n\nconst propTypes = {};\n\nfunction makeCardMenuData(cards) {\n  const options = cards.map((card, index) => ({\n    key: cards.length > 1 ? index + 2 : index + 1,\n    text: card,\n    value: card\n  }));\n\n  if (cards.length > 1) {\n    options.unshift({ key: 1, text: \"All Cards\", value: \"all\" });\n  }\n\n  return options;\n}\n\nexport default function CardMenu(props) {\n  const { cards, handleChange, currentSelection } = props;\n  const options = makeCardMenuData(cards);\n\n  return (\n    <Dropdown\n      item\n      options={options}\n      value={currentSelection}\n      onChange={(e, { value }) => {\n        handleChange(value);\n      }}\n    />\n  );\n}\n\nCardMenu.propTypes = propTypes;\n","import moment from \"moment\";\nimport React from \"react\";\nimport Fetch from \"react-fetch-component\";\nimport PropTypes from \"prop-types\";\nimport { Menu, Modal, Button, Icon, Header } from \"semantic-ui-react\";\nimport { YearInput, MonthInput } from \"semantic-ui-calendar-react\";\n\nimport API from \"../../../lib/api\";\nimport CardMenu from \"../CardMenu\";\n\nconst SEARCH_TYPE_RANGE = \"range\";\nconst SEARCH_TYPE_MONTH = \"month\";\nconst RANGE_LIMIT = 500;\n\nconst propTypes = {};\n\nconst defaultProps = {};\n\n// TODO: move to default props\nconst options = [\n  { name: \"last 30 days\", value: 30 },\n  { name: \"last 60 days\", value: 60 },\n  { name: \"last year\", value: 365 }\n  //{ name: \"all time\", value: \"all_time\" }\n];\n\nconst thisMonth = new Date().getMonth();\nconst thisYear = new Date().getFullYear();\nexport default class DataFilter extends React.Component {\n  cardsArray =\n    this.props.cards && this.props.cards.map(card => card.cardNumber);\n\n  state = {\n    activeSelection: options[0].name,\n    activeSelectionValue: options[0].value,\n    yearOrRange: \"\",\n    monthOrUnit: \"\",\n    searchType: \"\",\n    cardNumber: \"\",\n    modalOpen: false,\n    selectedMonth: thisMonth,\n    selectedYear: thisYear,\n    url: \"\"\n  };\n\n  optionsMap = {\n    [options[0].name]: options[0].value,\n    [options[1].name]: options[1].value,\n    [options[2].name]: options[2].value\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    /**\n     * This is kind of cool, actually.\n     * ---\n     * Takes care of all the state updating for the entire component by receiving props\n     * from the parent route component. So in order for any of the UI elements in this\n     * component to work correctly, all this is required is to history.push the correct route\n     */\n\n    const { cardNumber, yearOrRange, monthOrUnit, searchType } = nextProps;\n\n    // data validation:\n    console.log(\n      \"getderivedstatefromprops:\",\n      cardNumber,\n      yearOrRange,\n      monthOrUnit,\n      searchType\n    );\n\n    // NEED SOME KIND OF CARD VALIDATION HERE\n    // if (!this.cardsArray.includes(cardNumber) || cardNumber != \"all\") {\n    //   console.log(cardNumber, \"************* ERR\", nextProps.cards);\n    //   // TODO: error about invalid card number\n    //   return null;\n    // }\n\n    if (searchType === \"err\") {\n      // TODO: return error about invalid searchType\n      return null;\n    }\n\n    if (\n      (searchType === SEARCH_TYPE_RANGE &&\n        parseInt(yearOrRange, 10) > RANGE_LIMIT) ||\n      (searchType === SEARCH_TYPE_RANGE && parseInt(yearOrRange, 10) < 5)\n    ) {\n      // TODO: return error about range too high\n      return null;\n    }\n\n    if (searchType === SEARCH_TYPE_MONTH) {\n      if (\n        parseInt(yearOrRange, 10) > thisYear ||\n        (parseInt(yearOrRange, 10) === thisYear &&\n          parseInt(monthOrUnit, 10) > thisMonth + 1)\n      ) {\n        // TODO: return error message about date being in the future\n        return null;\n      }\n\n      if (\n        parseInt(yearOrRange, 10) < 2010 ||\n        (parseInt(yearOrRange, 10) < 2010 && parseInt(monthOrUnit, 10) < 5)\n      ) {\n        // TODO: return error message about date out of range: Presto phase 2 started May 5th, 2010.\n        return null;\n      }\n\n      if (parseInt(monthOrUnit) > 12 || parseInt(monthOrUnit) < 1) {\n        // TODO: month value out of range\n        return null;\n      }\n    }\n\n    console.log(\n      \"PASSED VALIDATION:\",\n      cardNumber,\n      yearOrRange,\n      monthOrUnit,\n      searchType\n    );\n\n    return cardNumber === prevState.cardNumber &&\n      yearOrRange === prevState.yearOrRange &&\n      monthOrUnit === prevState.monthOrUnit &&\n      searchType === prevState.searchType\n      ? null\n      : {\n          cardNumber,\n          yearOrRange,\n          monthOrUnit,\n          searchType,\n          url:\n            searchType === SEARCH_TYPE_MONTH\n              ? `${API.root}${API.monthlyTransactions(\n                  cardNumber,\n                  yearOrRange,\n                  monthOrUnit\n                )}`\n              : `${API.root}${API.transactionRange(cardNumber, yearOrRange)}`\n        };\n  }\n\n  handleItemClick = event => {\n    const { cardNumber } = this.state;\n    const { history } = this.props;\n\n    const activeSelection = event.target.textContent.toLowerCase();\n    console.log(\"itemclick:\", activeSelection);\n    const yearOrRange = this.optionsMap[activeSelection];\n    const monthOrUnit = \"days\";\n    const searchType = SEARCH_TYPE_RANGE;\n\n    const route = `/dashboard/${cardNumber}/${searchType}/${yearOrRange}/${monthOrUnit}`;\n    history.push(route);\n  };\n\n  handleCalChange = (event, { name, value }) => {\n    this.setState({ [name]: value });\n  };\n\n  FilterMenu = () => {\n    const { yearOrRange } = this.state;\n\n    const fullMenu = options.map(option => (\n      <Menu.Item\n        key={option.name}\n        name={option.name}\n        active={yearOrRange === option.value}\n        onClick={this.handleItemClick}\n      />\n    ));\n\n    return fullMenu;\n  };\n\n  render() {\n    const {\n      cardNumber,\n      yearOrRange,\n      searchType,\n      monthOrUnit,\n      modalOpen,\n      selectedYear,\n      selectedMonth,\n      url,\n      activeSelection\n    } = this.state;\n\n    const { children, match, history } = this.props;\n    console.log(\"datafilter:\", match);\n    return (\n      <Fetch url={url} options={API.send(\"GET\")}>\n        {({ data, error, loading }) => {\n          console.log({ data, error, loading });\n          return (\n            <>\n              <Menu size=\"large\" pointing secondary>\n                {!loading && !error && (\n                  <Menu.Item header>\n                    {data.data.transactions.length === 0\n                      ? \"No Transactions For This Period\"\n                      : `${moment(data.data.transactions[0].date).format(\n                          \"MMMM DD YYYY\"\n                        )} - ${moment(\n                          data.data.transactions[\n                            data.data.transactions.length - 1\n                          ].date\n                        ).format(\"MMMM DD YYYY\")}`}\n                  </Menu.Item>\n                )}\n\n                {loading && <Menu.Item header>Loading...</Menu.Item>}\n\n                <Menu.Menu position=\"right\">\n                  <CardMenu\n                    cards={this.cardsArray}\n                    currentSelection={cardNumber}\n                    handleChange={value => {\n                      const route = `/dashboard/${value}/${searchType}/${yearOrRange}/${monthOrUnit}`;\n                      history.push(route);\n                    }}\n                  />\n                  <this.FilterMenu />\n                  <Menu.Item\n                    name=\"month\"\n                    active={searchType === SEARCH_TYPE_MONTH}\n                    onClick={() => {\n                      this.setState({\n                        activeSelection: SEARCH_TYPE_MONTH,\n                        modalOpen: true\n                      });\n                    }}>\n                    <Icon name=\"calendar\" />\n                  </Menu.Item>\n                </Menu.Menu>\n              </Menu>\n\n              {children({ data, error, loading })}\n\n              <Modal size=\"tiny\" open={modalOpen} onClose={this.close}>\n                <Modal.Header>Choose Another Date</Modal.Header>\n                <Modal.Content>\n                  <MonthInput\n                    inline\n                    closable\n                    dateFormat=\"M\"\n                    name=\"selectedMonth\"\n                    maxDate={selectedYear == thisYear ? thisMonth + 1 : 12}\n                    value={selectedMonth || thisMonth + 1}\n                    onChange={this.handleCalChange}\n                  />\n                  <YearInput\n                    inline\n                    name=\"selectedYear\"\n                    closable\n                    dateFormat=\"YYYY\"\n                    maxDate={thisYear}\n                    minDate={2018}\n                    value={selectedYear || thisYear}\n                    onChange={this.handleCalChange}\n                  />\n                </Modal.Content>\n                <Modal.Actions>\n                  <Button\n                    negative\n                    content=\"No\"\n                    onclick={() => this.setState({ modalOpen: false })}>\n                    No\n                  </Button>\n                  <Button\n                    positive\n                    icon=\"checkmark\"\n                    labelPosition=\"right\"\n                    content=\"Yes\"\n                    onClick={() => {\n                      const route = `/dashboard/${cardNumber}/${activeSelection}/${selectedYear}/${selectedMonth}`;\n\n                      this.setState({\n                        modalOpen: false\n                      });\n\n                      history.push(route);\n                    }}\n                  />\n                </Modal.Actions>\n              </Modal>\n            </>\n          );\n        }}\n      </Fetch>\n    );\n  }\n}\n\nDataFilter.propTypes = propTypes;\nDataFilter.defaultProps = defaultProps;\n\nexport { SEARCH_TYPE_MONTH, SEARCH_TYPE_RANGE };\n","import DataFilter, { SEARCH_TYPE_MONTH, SEARCH_TYPE_RANGE } from \"./DataFilter\";\n\nexport { SEARCH_TYPE_MONTH, SEARCH_TYPE_RANGE };\nexport default DataFilter;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Icon, Grid } from \"semantic-ui-react\";\n\nexport default props => {\n  const {\n    label,\n    value,\n    extra,\n    extraIcon,\n    iconName,\n    iconColor,\n    isCustomIcon,\n    extraFooter,\n    extraFooterIcon\n  } = props;\n\n  return (\n    <Card\n      style={{\n        flex: \"1\",\n        minWidth: \"230px\",\n        maxWidth: \"250px\",\n        //border: \"none\",\n        borderRadius: \"6px\",\n        zIndex: \"0\"\n        //boxShadow: \"0 2px 2px hsla(38,16%,76%,.5)\"\n      }}>\n      <Card.Content style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\n        <Card.Description>\n          <Grid columns={1} verticalAlign=\"middle\">\n            <Grid.Row verticalAlign=\"center\" columns={2}>\n              <Grid.Column\n                style={{\n                  textAlign: \"left\",\n                  paddingLeft: \"1rem\",\n                  paddingRight: \"0\"\n                }}>\n                {isCustomIcon ? (\n                  <i\n                    style={{\n                      color: iconColor,\n                      fontSize: \"4rem\",\n                      minHeight: \"64px\"\n                    }}\n                    className={iconName}\n                  />\n                ) : (\n                  <Icon className={iconName} size=\"huge\" color={iconColor} />\n                )}\n              </Grid.Column>\n              <Grid.Column\n                style={{\n                  textAlign: \"right\",\n                  lineHeight: \"1.2\",\n                  paddingRight: \"1rem\",\n                  paddingLeft: \"0\"\n                }}>\n                <Grid.Row>\n                  <div style={{ fontSize: \"1rem\", fontWeight: \"300\" }}>\n                    {label}\n                  </div>\n                </Grid.Row>\n                <Grid.Row>\n                  <div style={{ fontWeight: \"600\", fontSize: \"2rem\" }}>\n                    {value}\n                  </div>\n                </Grid.Row>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Card.Description>\n      </Card.Content>\n      <Card.Content\n        extra\n        style={{\n          margin: \"0 15px\",\n          paddingLeft: \"0\",\n          fontWeight: \"200\",\n          fontSize: \"0.8rem\"\n        }}>\n        {extraIcon && <i className={extraIcon} />} {extra}\n        {extraFooter && (\n          <div>\n            {extraFooterIcon && <i className={extraFooterIcon} />} {extraFooter}\n          </div>\n        )}\n      </Card.Content>\n    </Card>\n  );\n};\n","import moment from 'moment';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from 'semantic-ui-react';\n\nimport Statistic from '../../styled/Statistic';\n\nconst propTypes = {};\n\nconst defaultProps = {};\n\nexport default function FilteredStats(props) {\n  const { data, loading, error } = props;\n\n  let totalAmount = 0;\n  let prevTotalAmount = 0;\n  let totalTaps = 0;\n  let prevTotalTaps = 0;\n  let totalFares = 0;\n  let prevTotalFares = 0;\n  let totalTransfers = 0;\n  let prevTotalTransfers = 0;\n  let prevLastDate = Date.now();\n  let prevFirstDate = Date.now();\n\n  let lastYearTotalAmount = 0;\n  let lastYearTotalTaps = 0;\n  let lastYearTotalFares = 0;\n  let lastYearTotalTransfers = 0;\n  let hasLastYear = false;\n\n  if (!loading && !error) {\n    totalAmount = data.data.totalAmount;\n    prevTotalAmount = data.data.prevInterval.totalAmount;\n\n    totalTaps = data.data.count.transfers + data.data.count.fares;\n    prevTotalTaps = data.data.prevInterval.count.transfers + data.data.prevInterval.count.fares;\n\n    totalFares = data.data.count.fares;\n    prevTotalFares = data.data.prevInterval.count.fares;\n\n    totalTransfers = data.data.count.transfers;\n    prevTotalTransfers = data.data.prevInterval.count.transfers;\n\n    prevLastDate = data.data.prevInterval.transactions.length\n      ? moment(\n        data.data.prevInterval.transactions[data.data.prevInterval.transactions.length - 1].date,\n      )\n        .utcOffset(0)\n        .format('DD MMM YY')\n      : null;\n    prevFirstDate = data.data.prevInterval.transactions.length\n      ? moment(data.data.prevInterval.transactions[0].date)\n        .utcOffset(0)\n        .format('MM/DD/YYYY')\n      : null;\n\n    console.log(data.data.prevInterval.transactions.length - 1);\n  }\n\n  if (!loading && !error && data.data.lastYear) {\n    hasLastYear = true;\n    lastYearTotalAmount = data.data.lastYear.totalAmount;\n    lastYearTotalFares = data.data.lastYear.count.fares;\n    lastYearTotalTransfers = data.data.lastYear.count.transfers;\n    lastYearTotalTaps = lastYearTotalFares + lastYearTotalTransfers;\n  }\n\n  return (\n    <Card.Group centered>\n      {!loading && !error && (\n        <>\n          <Statistic\n            label=\"Spent\"\n            value={`$${(totalAmount / 100).toFixed(2)}`}\n            extra={`$${Math.abs((totalAmount - prevTotalAmount) / 100).toFixed(2)} ${\n              prevLastDate ? `from period ending ${prevLastDate}` : ''\n            }`}\n            extraIcon={totalAmount - prevTotalAmount > 0 ? 'ti-arrow-up' : 'ti-arrow-down'}\n            iconName=\"ti-credit-card\"\n            isCustomIcon\n            extraFooter={\n              hasLastYear\n                ? `$${Math.abs((totalAmount - lastYearTotalAmount) / 100).toFixed(\n                  2,\n                )} from last year`\n                : null\n            }\n            extraFooterIcon={\n              hasLastYear\n                ? totalAmount - lastYearTotalAmount > 0\n                  ? 'ti-arrow-up'\n                  : 'ti-arrow-down'\n                : null\n            }\n          />\n\n          <Statistic\n            label=\"Taps\"\n            value={totalTaps}\n            extra={`${Math.abs(totalTaps - prevTotalTaps)} ${\n              prevLastDate ? `from period ending ${prevLastDate}` : ''\n            }`}\n            extraIcon={totalTaps - prevTotalTaps > 0 ? 'ti-arrow-up' : 'ti-arrow-down'}\n            iconName=\"ti-hand-drag\"\n            isCustomIcon\n            extraFooter={\n              hasLastYear ? `${Math.abs(totalTaps - lastYearTotalTaps)} from last year` : null\n            }\n            extraFooterIcon={\n              hasLastYear\n                ? totalTaps - lastYearTotalTaps > 0\n                  ? 'ti-arrow-up'\n                  : 'ti-arrow-down'\n                : null\n            }\n          />\n\n          <Statistic\n            label=\"Fares\"\n            value={totalFares}\n            extra={`${Math.abs(totalFares - prevTotalFares)} ${\n              prevLastDate ? `from period ending ${prevLastDate}` : ''\n            }`}\n            extraIcon={totalFares - prevTotalFares > 0 ? 'ti-arrow-up' : 'ti-arrow-down'}\n            iconName=\"ti-ticket\"\n            isCustomIcon\n            extraFooter={\n              hasLastYear ? `${Math.abs(totalFares - lastYearTotalFares)} from last year` : null\n            }\n            extraFooterIcon={\n              hasLastYear\n                ? totalFares - lastYearTotalFares > 0\n                  ? 'ti-arrow-up'\n                  : 'ti-arrow-down'\n                : null\n            }\n          />\n\n          <Statistic\n            label=\"Transfers\"\n            value={totalTransfers}\n            extra={`${Math.abs(totalTransfers - prevTotalTransfers)} ${\n              prevLastDate ? `from period ending ${prevLastDate}` : ''\n            }`}\n            extraIcon={totalTransfers - prevTotalTransfers > 0 ? 'ti-arrow-up' : 'ti-arrow-down'}\n            iconName=\"ti-vector\"\n            isCustomIcon\n            extraFooter={\n              hasLastYear\n                ? `${Math.abs(totalTransfers - lastYearTotalTransfers)} from last year`\n                : null\n            }\n            extraFooterIcon={\n              hasLastYear\n                ? totalTransfers - lastYearTotalTransfers > 0\n                  ? 'ti-arrow-up'\n                  : 'ti-arrow-down'\n                : null\n            }\n          />\n        </>\n      )}\n    </Card.Group>\n  );\n}\n\nFilteredStats.propTypes = propTypes;\nFilteredStats.defaultProps = defaultProps;\n","import FilteredStats from \"./FilteredStats\";\n\nexport default FilteredStats;\n","import moment from \"moment\";\nimport React from \"react\";\nimport { Segment, Header, Icon } from \"semantic-ui-react\";\nimport styled from \"styled-components\";\nimport {\n  ResponsiveContainer,\n  CartesianGrid,\n  Line,\n  LineChart,\n  XAxis,\n  YAxis,\n  Legend,\n  Tooltip\n} from \"recharts\";\n\nimport { totalDailyTransactionBreakdown } from \"../../lib/transactions\";\n\nconst TTContainer = styled.div`\n  position: relative;\n  background: rgba(40, 42, 48, 0.7);\n  color: lightgrey;\n  border: 1px solid lightgrey;\n  border-radius: 0.25rem;\n  min-width: 400px;\n  padding: 30px 50px 40px 50px;\n  box-shadow: 0px 1px 2px 0 rgba(34, 36, 38, 0.15);\n  z-index: 1000;\n\n  header {\n    background: rgba(40, 42, 48, 0.8);\n    bottom: 0;\n    left: 0;\n    margin: 0;\n    padding: 0;\n    position: absolute;\n    width: 100%;\n    border-radius: 0 0 0.25rem 0.25rem;\n\n    h2 {\n      font-size: 1.1rem;\n      text-align: center;\n      font-weight: bold;\n      padding: 10px 5px;\n    }\n  }\n\n  footer {\n    margin: 20px 0;\n  }\n\n  h3 {\n    font-size: 1rem;\n    font-weight: bold;\n    padding: 0;\n    margin: 0;\n    margin-bottom: 5px;\n    margin-top: 15px;\n  }\n`;\n\nconst TTItem = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-between;\n  align-items: center;\n  padding-bottom: 5px;\n\n  p {\n    font-weight: bold;\n  }\n\n  .count {\n    text-align: right;\n    padding: 0;\n    margin: 0;\n\n    .breakdown {\n      padding: 0;\n      margin: 0;\n      margin-top: -5px;\n      margin-bottom: -8px;\n      font-size: 0.7rem;\n    }\n  }\n\n  &.trip-count {\n    align-items: flex-start;\n  }\n`;\n\nconst TTLocationList = styled.ul`\n  display: block;\n  text-decoration: none;\n  list-style: none;\n  list-style-type: none;\n  list-style-position: outside;\n  margin: 0;\n  padding: 0;\n`;\n\nconst LegendDot = styled.div`\n  background: ${props => props.color};\n  max-height: 10px;\n  max-width: 10px;\n  min-height: 10px;\n  min-width: 10px;\n  margin-right: 15px;\n  border-radius: 100%;\n`;\n\nconst TTLocationItem = styled.li`\n  font-size: 0.8rem;\n  list-style: none;\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst CustomizedAxisTick = props => {\n  const { x, y, stroke, payload } = props;\n\n  return (\n    <g transform={`translate(${x},${y})`}>\n      <text\n        x={0}\n        y={0}\n        dy={16}\n        textAnchor=\"end\"\n        fill=\"#666\"\n        transform=\"rotate(-35)\">\n        {payload.value}\n      </text>\n    </g>\n  );\n};\n\nconst CustomTooltip = ({ payload, label, active }) => {\n  if (active) {\n    const XAxis = payload[0];\n    const YAxis = payload[1];\n\n    return (\n      <TTContainer>\n        <header>\n          <h2>{`${XAxis.payload.dayOfWeek}, ${XAxis.payload.month} ${\n            XAxis.payload.date\n          }, ${XAxis.payload.year}`}</h2>\n        </header>\n        <TTItem className=\"trip-count\">\n          <TTItem>\n            <LegendDot color={XAxis.color} />\n            <p>Taps</p>\n          </TTItem>\n          <div className=\"count\">\n            <div>{XAxis.payload.trips}</div>\n            <div className=\"breakdown\">\n              {`${\n                XAxis.payload.trips > 0\n                  ? `${XAxis.payload.fares.count} Fare${\n                      XAxis.payload.fares.count === 1 ? \"\" : \"s\"\n                    } | ${XAxis.payload.transfers.count} Transfer${\n                      XAxis.payload.transfers.count === 1 ? \"\" : \"s\"\n                    }`\n                  : \"\"\n              }`}\n            </div>\n          </div>\n        </TTItem>\n        <TTItem>\n          <TTItem>\n            <LegendDot color={YAxis.color} />\n            <p>Spent</p>\n          </TTItem>\n          <div>${XAxis.payload.amount}</div>\n        </TTItem>\n\n        <footer>\n          {XAxis.payload.fares.locations.length > 0 && (\n            <>\n              <h3 className=\"header\">Fares</h3>\n              <TTLocationList>\n                {XAxis.payload.fares.locations.map(item => (\n                  <TTItem>\n                    <TTLocationItem>{item.location}</TTLocationItem>\n                    <TTLocationItem>\n                      {moment(item.time)\n                        .utcOffset(0)\n                        .format(\"hh:mm A\")}\n                    </TTLocationItem>\n                  </TTItem>\n                ))}\n              </TTLocationList>\n            </>\n          )}\n\n          {XAxis.payload.transfers.locations.length > 0 && (\n            <>\n              <h3 className=\"header\">Transfers</h3>\n              <TTLocationList>\n                {XAxis.payload.transfers.locations.map(item => (\n                  <TTItem>\n                    <TTLocationItem>{item.location}</TTLocationItem>\n                    <TTLocationItem>\n                      {moment(item.time)\n                        .utcOffset(0)\n                        .format(\"hh:mm A\")}\n                    </TTLocationItem>\n                  </TTItem>\n                ))}\n              </TTLocationList>\n            </>\n          )}\n        </footer>\n      </TTContainer>\n    );\n  }\n\n  return null;\n};\n\nexport default props => {\n  const { data } = props;\n  const { transactions } = data;\n\n  const breakdown = totalDailyTransactionBreakdown(transactions, true);\n\n  if (!breakdown.dataset) {\n    return (\n      <Segment placeholder>\n        <Header icon>\n          <Icon name=\"calendar times outline\" />\n          No transactions for this period.\n        </Header>\n      </Segment>\n    );\n  }\n\n  return (\n    <div>\n      <ResponsiveContainer height={300} style={{ background: \"#444\" }}>\n        <LineChart\n          margin={{\n            top: 20,\n            right: 30,\n            left: 0,\n            bottom: 0\n          }}\n          data={breakdown.dataset}>\n          <CartesianGrid vertical={false} stroke=\"#EBEBEB\" />\n\n          <Line\n            dataKey=\"trips\"\n            type=\"monotone\"\n            stroke=\"#3333cc\"\n            strokeWidth={2}\n            dot={{\n              //   stroke: \"white\",\n              //   strokeWidth: 2,\n              //   fill: \"#3333cc\",\n              r: 0\n            }}\n          />\n          <Line\n            dataKey=\"amount\"\n            type=\"monotone\"\n            stroke=\"#3BB4E9\"\n            strokeWidth={2}\n            dot={{\n              //   stroke: \"white\",\n              //   strokeWidth: 2,\n              //   fill: \"#3BB4E9\",\n              r: 0\n            }}\n          />\n          <YAxis\n            allowDecimals={false}\n            type=\"number\"\n            domain={breakdown.domain}\n            padding={{ left: 50 }}\n            dataKey=\"amount\"\n            tickLine={false}\n            axisLine={false}\n            stroke=\"#C4C4C4\"\n          />\n          <XAxis\n            dataKey=\"label\"\n            //tickMargin={15}\n            tickLine={false}\n            axisLine={false}\n            tickSize={0}\n            minTickGap={0}\n            height={60}\n            interval={breakdown.dataset.length > 100 ? 10 : 1}\n            tick={<CustomizedAxisTick />}\n            stroke=\"#C4C4C4\"\n          />\n          <Tooltip\n            wrapperStyle={{ zIndex: \"1000\" }}\n            content={<CustomTooltip />}\n          />\n          <Legend iconType=\"circle\" />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n","import moment from \"moment\";\n\nfunction totalDailyTransactionBreakdown(\n  transactions,\n  includeAmountInDomain = false\n) {\n  function getDates(start, stop) {\n    const dateObj = {};\n    let currentDate = moment(start);\n    const stopDate = moment(stop);\n\n    while (currentDate <= stopDate) {\n      const formattedDate = currentDate.format(\"DD/MM/YYYY\");\n\n      dateObj[formattedDate] = {\n        amount: 0,\n        trips: 0,\n        transfers: 0,\n        fares: 0,\n        transferLocations: [],\n        fareLocations: []\n      };\n      currentDate = currentDate.add(1, \"days\");\n    }\n\n    return dateObj;\n  }\n\n  if (transactions.length === 0) {\n    const currDate = moment();\n\n    return {\n      date: currDate.format(\"DD\"),\n      dayOfWeek: currDate.format(\"dddd\"),\n      amount: \"0.00\",\n      trips: 0\n    };\n  }\n\n  const domain = [0, 0];\n  const startDate = moment(transactions[0].date)\n    .utcOffset(0)\n    .format(\"YYYY-MM-DD\");\n  const endDate = moment(transactions[transactions.length - 1].date)\n    .utcOffset(0)\n    .format(\"YYYY-MM-DD\");\n\n  const dataset = getDates(startDate, endDate);\n\n  transactions.forEach(item => {\n    const date = moment(item.date)\n      .utcOffset(0)\n      .format(\"DD/MM/YYYY\");\n\n    const amount = parseFloat(item.amount);\n\n    if (item.type === \"Transfer\") {\n      dataset[date].transferLocations.push({\n        location: item.location,\n        time: item.date\n      });\n    }\n\n    if (item.type === \"Fare Payment\" || item.type === \"Transit Pass Payment\") {\n      dataset[date].fareLocations.push({\n        location: item.location,\n        time: item.date\n      });\n    }\n\n    dataset[date].amount += amount;\n    dataset[date].trips += 1;\n    dataset[date].transfers += item.type === \"Transfer\" ? 1 : 0;\n    dataset[date].fares +=\n      item.type === \"Fare Payment\" || item.type === \"Transit Pass Payment\"\n        ? 1\n        : 0;\n  });\n\n  const breakdown = Object.keys(dataset).map(key => {\n    const currDate = moment(key, \"DD/MM/YYYY\");\n\n    if (includeAmountInDomain) {\n      domain[1] =\n        domain[1] < dataset[key].amount\n          ? (dataset[key].amount / 100).toFixed(2)\n          : domain[1];\n    }\n\n    domain[1] = domain[1] < dataset[key].trips ? dataset[key].trips : domain[1];\n\n    return {\n      label: `${currDate.format(\"MMM\")} ${currDate.format(\"DD\")}`,\n      date: currDate.format(\"DD\"),\n      dayOfWeek: currDate.format(\"dddd\"),\n      month: currDate.format(\"MMMM\"),\n      year: currDate.format(\"YYYY\"),\n      amount: (dataset[key].amount / 100).toFixed(2),\n      trips: dataset[key].trips,\n      transfers: {\n        count: dataset[key].transfers,\n        locations: dataset[key].transferLocations\n      },\n      fares: {\n        count: dataset[key].fares,\n        locations: dataset[key].fareLocations\n      }\n    };\n  });\n\n  return { dataset: breakdown, domain };\n}\n\nfunction groupByDate(transactions) {\n  const dataset = {};\n\n  transactions.forEach(transaction => {\n    const date = moment(transaction.date).format(\"MM-DD-YYYY\");\n\n    if (dataset[date]) {\n      dataset[date].push(transaction);\n    } else {\n      dataset[date] = [transaction];\n    }\n  });\n\n  return dataset;\n}\n\nexport { totalDailyTransactionBreakdown, groupByDate };\n","import React from \"react\";\nimport { Segment, Message } from \"semantic-ui-react\";\n\nimport MonthlyStats from \"./MonthlyStats\";\n\nimport { getMonthNameFromNum } from \"../../lib/date\";\nimport { NONAME } from \"dns\";\n\nconst panes = [\n  { menuItem: \"This Month\" },\n  { menuItem: \"Last Month\" },\n  { menuItem: { icon: \"calendar alternate outline\" } }\n];\n\nfunction getFareTypeCount(data) {\n  const fareTypeCount = Object.keys(data.count).map(key => {\n    const typeName = key;\n\n    return {\n      name: typeName[0].toUpperCase() + typeName.substring(1),\n      count: data.count[typeName]\n    };\n  });\n\n  return fareTypeCount;\n}\n\nexport default function MonthlyOverview(props) {\n  const { year, month, data, error, loading } = props;\n  console.log(\"MonthlyOverview:\", props);\n\n  return (\n    <>\n      <Segment\n        style={{\n          minHeight: \"250px\",\n          padding: 0,\n          boxShadow: \"none\",\n          border: \"none\"\n        }}\n        loading={loading}>\n        {!loading && !error && (\n          <MonthlyStats\n            month={getMonthNameFromNum(month)}\n            year={year}\n            data={data.data}\n          />\n        )}\n        {!loading && error && <Message error>{error.message}</Message>}\n      </Segment>\n    </>\n  );\n}\n","function getMonthNameFromNum(num) {\n  const months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  return months[num];\n}\n\nexport { getMonthNameFromNum };\n","import moment from \"moment\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Segment, Feed, Icon, Label } from \"semantic-ui-react\";\nimport { groupByDate } from \"../../../lib/transactions\";\n\nconst propTypes = {};\nconst defaultProps = {};\n\nconst Timeline = styled.li`\n  position: relative;\n\n  span.dot {\n    &::after {\n      content: \"\";\n      background: #fff;\n      width: 13px;\n      height: 13px;\n      border-radius: 50%;\n      border: 3px solid ${props => props.color || \"blue\"};\n      position: absolute;\n      top: 0;\n      left: -5px;\n    }\n  }\n\n  &:last-of-type {\n    section::before {\n      border-left: none;\n    }\n  }\n`;\n\nconst TimelineLine = styled.section`\n  &::before {\n    content: \"\";\n    width: 1px;\n    height: 100%;\n    position: absolute;\n    border-left: 3px solid ${props => props.color || \"blue\"};\n  }\n`;\n\nconst TimelineItem = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n\n  position: relative;\n  margin-left: 10px;\n  padding: 0 0 10px 10px;\n`;\n\nconst TimelineContainer = styled.ul`\n  list-style: none;\n  margin: 0;\n  margin-top: 15px;\n  margin-bottom: 40px;\n  list-style: none;\n  position: relative;\n  padding: 1px 100px;\n  color: #000;\n  font-size: 13px;\n`;\n\nconst TimelineTime = styled.div`\n  position: absolute;\n  left: ${props => (props.AM === true ? \"-70px\" : \"-69px\")};\n  font-weight: 900;\n  top: -2px;\n  color: ${props => props.color};\n`;\n\nconst TimelineHeader = styled.div`\n  margin-left: 120px;\n`;\n\nconst TimelineLocation = styled.div`\n  border-top: 1px solid lightgrey;\n  margin-top: 8px;\n  padding-top: 5px;\n  font-weight: bold;\n`;\n\nconst TimelineInfoContainer = styled.div`\n  /* position: absolute;\n  top: 0;\n  left: 100px; */\n`;\n\nconst TimelineInfo = styled.div`\n  position: relative;\n  border: 1px solid lightgrey;\n  width: 335px;\n  border-radius: 0.25rem;\n  padding: 10px;\n  margin-left: 15px;\n\n  &:hover {\n    box-shadow: 0px 1px 2px 0 rgba(34, 36, 38, 0.15);\n  }\n\n  &::before {\n    position: absolute;\n    content: \"\";\n\n    background: #fff;\n    top: 5px;\n    left: -1px;\n    width: 10px;\n    height: 10px;\n    border-left: 1px solid lightgrey;\n    border-bottom: 1px solid lightgrey;\n\n    transform: translateX(-50%) rotate(45deg);\n  }\n`;\n\nexport default function RecentActivity(props) {\n  const { data, loading, error } = props;\n  let dataset = [];\n\n  if (!loading && !error) {\n    dataset = groupByDate(data.data.transactions);\n  }\n\n  console.log(dataset);\n  const FeedItems = () => {\n    return Object.keys(dataset)\n      .sort((a, b) => (a < b ? 1 : -1))\n      .map(key => (\n        <>\n          <TimelineHeader>\n            <Label>\n              {moment(key)\n                .utcOffset(0)\n                .format(\"D MMM YYYY\")}\n            </Label>\n          </TimelineHeader>\n          <TimelineContainer>\n            {dataset[key].map(item => (\n              <Timeline color={item.type === \"Transfer\" ? \"orange\" : \"blue\"}>\n                <TimelineLine\n                  color={item.type === \"Transfer\" ? \"orange\" : \"blue\"}>\n                  <span className=\"dot\" />\n                  <TimelineTime\n                    AM={\n                      moment(item.date)\n                        .utcOffset(0)\n                        .format(\"A\") === \"AM\"\n                        ? true\n                        : false\n                    }\n                    color={item.type === \"Transfer\" ? \"orange\" : \"blue\"}>\n                    {moment(item.date)\n                      .utcOffset(0)\n                      .format(\"hh:mm A\")}\n                  </TimelineTime>\n                  <TimelineItem>\n                    <div>\n                      <Label\n                        color={item.type === \"Transfer\" ? \"orange\" : \"blue\"}>\n                        {item.type === \"Transfer\"\n                          ? \"Transfer\".toUpperCase()\n                          : \"Fare Paid\".toUpperCase()}\n                      </Label>\n                    </div>\n                    <TimelineInfoContainer>\n                      <TimelineInfo>\n                        <div\n                          style={{\n                            display: \"flex\",\n                            flexFlow: \"row nowrap\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-between\"\n                          }}>\n                          <Label color=\"green\">{item.cardNumber}</Label>\n                          <div>\n                            {item.type === \"Transfer\"\n                              ? \"\"\n                              : `$${(\n                                  Math.round(item.amount * 100) / 10000\n                                ).toFixed(2)}`}\n                          </div>\n                        </div>\n                        <TimelineLocation>{`${\n                          item.location\n                        }`}</TimelineLocation>\n                      </TimelineInfo>\n                    </TimelineInfoContainer>\n                  </TimelineItem>\n                </TimelineLine>\n              </Timeline>\n            ))}\n          </TimelineContainer>\n        </>\n      ));\n  };\n  return (\n    <Segment\n      //   style={{ minHeight: \"450px\", maxHeight: \"450px\", overflowY: \"auto\" }}\n      vertical>\n      {!loading && !error && FeedItems()}\n    </Segment>\n  );\n}\n\nRecentActivity.propTypes = propTypes;\nRecentActivity.defaultProps = defaultProps;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Menu, Icon, Rail, Segment } from \"semantic-ui-react\";\nimport styled from \"styled-components\";\n\nconst Nav = styled.nav`\n  height: 100%;\n  padding: 20px;\n`;\n\nconst handleClick = e => {\n  // console.dir(e.target);\n  // if (e.target.name === 'Home') {\n  //   Router.push('/dashboard');\n  // } else {\n  //   Router.push('/monthly');\n  // }\n};\n\n// background: 'rgb(38,39,43)', color: 'rgb(209,211,212)'\nexport default props => {\n  const { top } = props;\n\n  // fontVariant: 'all-small-caps',\n  return (\n    <>\n      <Menu\n        fixed=\"left\"\n        icon=\"labeled\"\n        size=\"small\"\n        compact\n        pointing\n        secondary\n        inverted\n        vertical\n        style={{\n          background: \"rgb(46,113,23)\",\n          color: \"#333845\",\n          fontSize: \"1rem\",\n\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignContent: \"center\"\n        }}>\n        <div style={{ margin: \"auto 0\" }}>\n          <Link href=\"/dashboard\">\n            <Menu.Item active onClick={handleClick}>\n              <Icon name=\"dashboard\" />\n              {/* Dashboard */}\n            </Menu.Item>\n          </Link>\n          <Link href=\"/monthly\">\n            <Menu.Item onClick={handleClick}>\n              <Icon name=\"usd\" />\n              {/* Taps */}\n            </Menu.Item>\n          </Link>\n          <Menu.Item>\n            <Icon name=\"credit card\" />\n            {/* Transactions */}\n          </Menu.Item>\n          <Menu.Item>\n            <Icon name=\"history\" />\n            {/* Budget */}\n          </Menu.Item>\n          <Menu.Item icon=\"list\">\n            <Icon name=\"list\" />\n            {/* Everything */}\n          </Menu.Item>\n        </div>\n      </Menu>\n    </>\n  );\n};\n","import moment from \"moment\";\nimport React from \"react\";\nimport { Table, Header } from \"semantic-ui-react\";\n\nimport PropTypes from \"prop-types\";\n\nconst propTypes = {};\n\nconst defaultProps = {};\n\nfunction notMutatedSort(array) {\n  const newArray = array.slice(0);\n\n  return newArray.sort((a, b) =>\n    Date.parse(a.date) > Date.parse(b.date) ? -1 : 1\n  );\n}\n\nexport default function TapList(props) {\n  const { data, loading, error } = props;\n  let tapRows = [];\n\n  if (loading) return <div>Loading...</div>;\n\n  if (!loading && !error && data.data) {\n    const sortedTapRows = notMutatedSort(data.data.transactions);\n    tapRows = sortedTapRows.map((item, index) => (\n      <Table.Row positive={item.type === \"Transfer\"} key={item.id}>\n        <Table.Cell>{index + 1}</Table.Cell>\n        <Table.Cell>\n          {moment(item.date)\n            .utcOffset(0)\n            .format(\"dddd, MMMM DD, YYYY\")}\n        </Table.Cell>\n        <Table.Cell>\n          {moment(item.date)\n            .utcOffset(0)\n            .format(\"hh:mm A\")}\n        </Table.Cell>\n        <Table.Cell>{item.location}</Table.Cell>\n        <Table.Cell>{item.agency}</Table.Cell>\n        <Table.Cell>{item.type}</Table.Cell>\n        <Table.Cell>\n          {(Math.round(item.amount * 100) / 10000).toFixed(2)}\n        </Table.Cell>\n      </Table.Row>\n    ));\n  }\n  return (\n    <>\n      <Header as=\"h2\">\n        Tap History\n        <Header.Subheader>Some kind of text will go here</Header.Subheader>\n      </Header>\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>#</Table.HeaderCell>\n            <Table.HeaderCell>Date</Table.HeaderCell>\n            <Table.HeaderCell>Time</Table.HeaderCell>\n            <Table.HeaderCell>Location</Table.HeaderCell>\n            <Table.HeaderCell>Agency</Table.HeaderCell>\n            <Table.HeaderCell>Type</Table.HeaderCell>\n            <Table.HeaderCell>Amount</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>{tapRows}</Table.Body>\n      </Table>\n    </>\n  );\n}\n\nTapList.propTypes = propTypes;\nTapList.defaultProps = defaultProps;\n","import TapList from \"./TapList\";\n\nexport default TapList;\n","import moment from 'moment';\nimport React from 'react';\nimport {\n  ResponsiveContainer, PieChart, Pie, Tooltip, Cell, Legend,\n} from 'recharts';\nimport PropTypes from 'prop-types';\nimport { Header, Divider } from 'semantic-ui-react';\n\nconst propTypes = {};\nconst defaultProps = {};\nconst COLORS = [\n  '#3F69AA',\n  '#006E6D',\n  '#E8B5CE',\n  '#FFD662',\n  '#8D9440',\n  '#C62168',\n  '#6B5B95',\n  '#FE840E',\n  '#BFD641',\n  '#6F9FD8',\n];\n\nfunction orderLocationByMostTaps(dataset) {\n  const result = {};\n\n  dataset.forEach(item => {\n    if (item.location === '0') return;\n\n    if (result[item.location]) {\n      const prevLastVisited = Date.parse(result[item.location].lastVisited);\n      const currLastVisited = item.date;\n\n      result[item.location].count += 1;\n      result[item.location].amount += item.amount;\n      result[item.location].transfers += item.type === 'Transfer' ? 1 : 0;\n      result[item.location].fares\n        += item.type === 'Fare Payment' || item.type === 'Transit Pass Payment' ? 1 : 0;\n\n      if (Date.parse(item.date) > prevLastVisited) {\n        result[item.location].lastVisited = currLastVisited;\n      }\n    } else {\n      result[item.location] = {\n        count: 1,\n        amount: item.amount,\n        lastVisited: item.date,\n        transfers: item.type === 'Transfer' ? 1 : 0,\n        fares: item.type === 'Fare Payment' || item.type === 'Transit Pass Payment' ? 1 : 0,\n      };\n    }\n  });\n\n  const resultArray = Object.keys(result)\n    .map(key => ({\n      location: key,\n      percent: Math.round((result[key].count / dataset.length) * 100),\n      ...result[key],\n    }))\n    .filter(item => item.count > 1);\n\n  const truncatedResults = resultArray.sort((a, b) => (a.count > b.count ? -1 : 1)).slice(0, 10);\n\n  return truncatedResults;\n}\n\nconst TopTapOrigins = props => {\n  const { data, error, loading } = props;\n  let dataset = [];\n  let range = '';\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!loading && !error) {\n    dataset = orderLocationByMostTaps(data.data.transactions);\n    range = data.data.transactions.length === 0\n      ? 'No Transactions For This Period'\n      : `${moment(data.data.transactions[0].date).format('MMMM DD YYYY')} - ${moment(\n        data.data.transactions[data.data.transactions.length - 1].date,\n      ).format('MMMM DD YYYY')}`;\n    console.log(dataset);\n  }\n\n  return (\n    <>\n      <Divider horizontal>\n        <Header as=\"h3\">\n          Most Active Locations\n          <Header.Subheader>{range}</Header.Subheader>\n        </Header>\n      </Divider>\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <PieChart>\n          <Pie data={dataset} fill=\"#8884d8\" dataKey=\"count\">\n            {dataset.map((entry, index) => (\n              <Cell key={`cell-${entry.id}`} fill={COLORS[index]} />\n            ))}\n          </Pie>\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"bottom\"\n            payload={dataset.map((item, index) => ({\n              value: item.location,\n              type: 'circle',\n              id: item.id,\n              color: COLORS[index],\n            }))}\n          />\n          <Tooltip />\n        </PieChart>\n      </ResponsiveContainer>\n    </>\n  );\n};\n\nTopTapOrigins.propTypes = propTypes;\nTopTapOrigins.defaultProps = defaultProps;\n\nexport default TopTapOrigins;\n","import TopTapOrigins from \"./TopTapOrigins\";\n\nexport default TopTapOrigins;\n","import API from \"../api\";\n\nasync function sendRequest(fetchHandler, path, method, opts = {}) {\n  const ROOT_URL = `${API.root}`;\n  const headers = Object.assign({}, opts.headers || {}, {\n    \"Content-Type\": \"application/json; charset=UTF-8\"\n  });\n\n  const response = await fetchHandler(\n    `${ROOT_URL}${path}`,\n    Object.assign({ method, credentials: \"include\" }, opts, {\n      headers,\n      body: JSON.stringify(opts.body)\n    })\n  );\n\n  const data = await response.json();\n\n  // commented this out because I don't know how necessary it is.\n  // the logic behind it was to detect errors such as not logged in, etc. and have special\n  // error handling for them on the FE, but it just causes crashes and I might\n  // be able to do this better without having it. Keeping it here for now as a TODO reminder.\n\n  // if (data.error) {\n  //   throw new Error(data.error);\n  // }\n\n  return data;\n}\n\nconst sendRequestWrapper = fetchHandler => (path, method, opts) =>\n  sendRequest(fetchHandler, path, method, opts);\n\nexport default sendRequestWrapper(fetch);\n","import API from '../api';\n\nasync function logout(requestHandler) {\n  const request = await requestHandler(API.logout.endpoint, API.logout.method);\n\n  return request;\n}\n\nexport { logout };\n","import API from '../api';\n\nasync function prestoLogin(requestHandler, username, password) {\n  const response = await requestHandler(API.prestoLogin.endpoint, API.prestoLogin.method, {\n    body: { username, password },\n  });\n\n  return response;\n}\n\nasync function prestoIsLoggedIn(requestHandler) {\n  const response = await requestHandler(API.prestoCheckLogin.endpoint, API.prestoCheckLogin.method);\n\n  return response;\n}\n\nexport { prestoLogin, prestoIsLoggedIn };\n","import API from '../api';\n\nasync function updateBudget(requestHandler, body) {\n  const request = await requestHandler(API.updateBudget.endpoint, API.updateBudget.method, {\n    body,\n  });\n\n  return request;\n}\n\nexport { updateBudget };\n","import API from '../api';\n\nasync function me(requestHandler) {\n  const request = await requestHandler(API.currentUser.endpoint, API.currentUser.method);\n\n  return request;\n}\n\nexport default me;\n","import sendRequest from './sendRequest';\nimport { logout } from './user';\nimport { prestoLogin, prestoIsLoggedIn } from './presto';\nimport { updateBudget } from './budget';\nimport me from './me';\n\nconst apiHandlerWrapper = requestHandler => ({\n  logout: () => logout(requestHandler),\n  prestoLogin: (username, password) => prestoLogin(requestHandler, username, password),\n  prestoIsLoggedIn: () => prestoIsLoggedIn(requestHandler),\n  updateBudget: body => updateBudget(requestHandler, body),\n  me: () => me(requestHandler),\n});\n\nexport default apiHandlerWrapper(sendRequest);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Button,\n  Header,\n  Icon,\n  Modal,\n  Form,\n  Segment,\n  Dropdown\n} from \"semantic-ui-react\";\n\nimport { timingSafeEqual } from \"crypto\";\nimport requestApi from \"../lib/requestApi\";\n\nclass AccountSettings extends Component {\n  static propTypes = {\n    budget: PropTypes.shape({\n      monthlyPassCost: PropTypes.string,\n      fareCost: PropTypes.string\n    }),\n    user: PropTypes.shape({\n      firstName: PropTypes.string.isRequired,\n      lastName: PropTypes.string.isRequired,\n      email: PropTypes.string.isRequired\n    }).isRequired\n  };\n\n  static defaultProps = {\n    budget: PropTypes.shape({\n      monthlyPassCost: \"146.25\",\n      fareCost: \"3.00\"\n    })\n  };\n\n  state = {\n    firstName: this.props.user.firstName,\n    lastName: this.props.user.lastName,\n    email: this.props.user.email,\n    monthlyPassCost: this.props.budget.monthlyPassCost,\n    fareCost: this.props.budget.fareCost\n  };\n\n  handleFieldChange = e => {\n    const { name, value } = e.target;\n    console.log(name, value);\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const {\n      firstName,\n      lastName,\n      email,\n      monthlyPassCost,\n      fareCost\n    } = this.state;\n    const { open, close } = this.props;\n\n    return (\n      <>\n        <Modal open={open}>\n          <Header icon=\"setting\" content=\"Account Settings\" />\n          <Modal.Content>\n            <Header as=\"h3\" attached=\"top\">\n              <Icon name=\"user\" />\n              Personal Information\n            </Header>\n            <Segment attached piled>\n              <Form>\n                <Form.Group widths=\"equal\">\n                  <Form.Field>\n                    <label htmlFor=\"firstName\">\n                      First Name\n                      <input\n                        id=\"firstName\"\n                        placeholder=\"First Name\"\n                        value={firstName}\n                        name=\"firstName\"\n                        onChange={this.handleFieldChange}\n                      />\n                    </label>\n                  </Form.Field>\n                  <Form.Field>\n                    <label htmlFor=\"lastName\">\n                      Last Name\n                      <input\n                        id=\"lastName\"\n                        placeholder=\"Last Name\"\n                        value={lastName}\n                        name=\"lastName\"\n                        onChange={this.handleFieldChange}\n                      />\n                    </label>\n                  </Form.Field>\n                </Form.Group>\n                <Form.Group widths=\"equal\">\n                  <Form.Field>\n                    <label htmlFor=\"email\">\n                      Email\n                      <input\n                        id=\"email\"\n                        placeholder=\"Email\"\n                        value={email}\n                        name=\"email\"\n                        onChange={this.handleFieldChange}\n                      />\n                    </label>\n                  </Form.Field>\n                  <Form.Field>\n                    <label htmlFor=\"password\">\n                      Password\n                      <input\n                        id=\"password\"\n                        placeholder=\"Password\"\n                        onChange={this.handleFieldChange}\n                      />\n                    </label>\n                  </Form.Field>\n                </Form.Group>\n              </Form>\n            </Segment>\n\n            <Header as=\"h3\" attached=\"top\">\n              <Icon name=\"bus\" />\n              Transit Costs\n            </Header>\n            <Segment attached piled>\n              <Form>\n                <Form.Group widths=\"equal\">\n                  <Form.Field>\n                    <label htmlFor=\"monthlyPassCost\">\n                      Monthly Pass Cost\n                      <input\n                        type=\"number\"\n                        id=\"monthlyPassCost\"\n                        placeholder=\"Monthly Pass Cost\"\n                        value={monthlyPassCost}\n                        name=\"monthlyPassCost\"\n                        onChange={this.handleFieldChange}\n                      />\n                    </label>\n                  </Form.Field>\n                  <Form.Field>\n                    <label htmlFor=\"fareCost\">\n                      Single Fare Cost\n                      <input\n                        type=\"number\"\n                        id=\"fareCost\"\n                        placeholder=\"Single Fare Cost\"\n                        value={fareCost}\n                        name=\"fareCost\"\n                        onChange={this.handleFieldChange}\n                      />\n                    </label>\n                  </Form.Field>\n                </Form.Group>\n              </Form>\n            </Segment>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              color=\"red\"\n              onClick={() => {\n                close();\n              }}>\n              <Icon name=\"remove\" /> Cancel\n            </Button>\n            <Button\n              color=\"green\"\n              onClick={async () => {\n                const response = await requestApi.updateBudget({\n                  monthlyPassCost,\n                  fareCost\n                });\n                console.log(response);\n                close();\n              }}>\n              <Icon name=\"checkmark\" /> Save\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default AccountSettings;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Icon, Grid } from \"semantic-ui-react\";\n\nexport default props => {\n  const { header, body, footer } = props;\n\n  return (\n    <Grid columns={1} style={{ marginTop: \"0\" }}>\n      <Grid.Row verticalAlign=\"center\" columns={1}>\n        <Grid.Column style={{ textAlign: \"right\", lineHeight: \"1.2\" }}>\n          <Grid.Row>\n            <div style={{ fontSize: \"1rem\", fontWeight: \"300\" }}>{header}</div>\n          </Grid.Row>\n          <Grid.Row>\n            <div\n              style={{ width: \"100%\", fontWeight: \"600\", fontSize: \"1.3rem\" }}>\n              {body}\n            </div>\n          </Grid.Row>\n          <Grid.Row>\n            <div\n              style={{\n                fontSize: \".9rem\",\n                fontWeight: \"200\",\n                color: \"#ababab\"\n              }}>\n              {footer}\n            </div>\n          </Grid.Row>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n","import React, { Component } from 'react';\nimport Fetch from 'react-fetch-component';\nimport {\n  Dimmer, Loader, Form, Message, Icon, Button, Segment,\n} from 'semantic-ui-react';\n\nimport API from '../lib/api';\nimport requestApi from '../lib/requestApi';\n\nexport default class PrestoSignin extends Component {\n  state = {\n    username: '',\n    password: '',\n    inProgress: false,\n    progressMessage: 'Fetching Data from Presto...',\n    cards: [],\n  };\n\n  handleTextEntry = e => {\n    const { name, value } = e.target;\n    // console.log(name, value);\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const {\n      username, password, cards, inProgress, progressMessage,\n    } = this.state;\n    const { incrementSteps, update, closeModal } = this.props;\n\n    if (cards) {\n      console.log(cards.map(card => card.cardNumber));\n    }\n    return (\n      <Fetch\n        manual\n        url={`${API.root}${API.prestoUsage}`}\n        options={API.send({ from: '01/01/2018', cards: cards.map(card => card.cardNumber) })}\n      >\n        {({\n          fetch, data, error, loading,\n        }) => {\n          console.log(data);\n          if (!loading && data) {\n            this.setState({ inProgress: false, progressMessage: 'Complete!' });\n\n            if (update) {\n              closeModal();\n            } else {\n              incrementSteps();\n            }\n          }\n\n          const showHeader = () => {\n            if (loading || inProgress) {\n              return (\n                <Message attached icon>\n                  <Icon name=\"circle notched\" loading />\n                  <Message.Content>\n                    <Message.Header>One moment</Message.Header>\n                    {progressMessage}\n                  </Message.Content>\n                </Message>\n              );\n            }\n\n            return (\n              <Message\n                attached\n                header=\"Sign in to Presto\"\n                content=\"Enter your username and password to gather your presto data\"\n              />\n            );\n          };\n\n          return (\n            <div>\n              {showHeader()}\n              <Form className=\"attached fluid segment\">\n                <Form.Group widths=\"equal\">\n                  <Form.Input\n                    fluid\n                    placeholder=\"Username\"\n                    label=\"Username\"\n                    disabled={loading || inProgress}\n                    type=\"text\"\n                    name=\"username\"\n                    onChange={this.handleTextEntry}\n                    value={username}\n                  />\n                  <Form.Input\n                    fluid\n                    placeholder=\"Password\"\n                    label=\"Password\"\n                    disabled={loading || inProgress}\n                    type=\"password\"\n                    name=\"password\"\n                    onChange={this.handleTextEntry}\n                    value={password}\n                  />\n                </Form.Group>\n                <div>\n                  <Button\n                    positive\n                    labelPosition=\"right\"\n                    icon=\"chevron circle right\"\n                    content=\"Next\"\n                    disabled={loading || inProgress || !username || !password}\n                    onClick={async () => {\n                      this.setState({\n                        inProgress: true,\n                        progressMessage: 'Logging into PRESTO...',\n                      });\n                      const isLoggedIn = await requestApi.prestoIsLoggedIn();\n                      console.log(isLoggedIn);\n                      if (\n                        isLoggedIn.status === 'error'\n                        && isLoggedIn.message === 'Not logged in to Presto'\n                      ) {\n                        this.setState({\n                          inProgress: true,\n                          progressMessage: 'Getting account data...',\n                        });\n                        const response = await requestApi.prestoLogin(username, password);\n                        console.log(response);\n                        if (response.cards) {\n                          this.setState({\n                            cards: response.cards,\n                            inProgress: true,\n                            progressMessage: 'Fetching PRESTO usage data...',\n                          });\n\n                          fetch();\n                        }\n                      } else if (isLoggedIn.status === 'success') {\n                        // fetch();\n                      }\n                    }}\n                  >\n                    <Icon name=\"checkmark\" />\n                    {`${\n                      update\n                        ? inProgress && progressMessage === 'Complete!'\n                          ? ' Close'\n                          : ' Update'\n                        : ' Next'\n                    }`}\n                  </Button>\n                  {update && (\n                    <Button\n                      negative\n                      content=\"Cancel\"\n                      disabled={inProgress}\n                      onClick={() => {\n                        closeModal();\n                      }}\n                    >\n                      {' Cancel'}\n                    </Button>\n                  )}\n                </div>\n              </Form>\n            </div>\n          );\n        }}\n      </Fetch>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Modal } from \"semantic-ui-react\";\n\nimport PrestoSignin from \"../PrestoSignin\";\n\nconst UpdatePresto = props => {\n  const { open, close } = props;\n\n  return (\n    <>\n      <Modal open={open} size=\"tiny\">\n        <PrestoSignin update closeModal={close} />\n      </Modal>\n    </>\n  );\n};\n\nexport default UpdatePresto;\n","import React from \"react\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { Header, Menu, Icon } from \"semantic-ui-react\";\n\nimport AccountSettings from \"../../AccountSettings\";\nimport requestApi from \"../../../lib/requestApi\";\nimport SmallStatistic from \"../../styled/SmallStatistic\";\nimport UpdatePresto from \"../../dashboard/UpdatePresto\";\n\nconst propTypes = {};\nconst defaultProps = {};\n\nclass User extends React.Component {\n  state = {\n    activeSelection: \"this month\",\n    accountModalOpen: false,\n    prestoModalOpen: false\n  };\n\n  handleItemClick = async (e, { name }) => {\n    if (name === \"update\") {\n      this.setState({ prestoModalOpen: true });\n    }\n\n    if (name === \"logout\") {\n      await requestApi.logout();\n      this.props.history.push(\"/login\");\n    }\n\n    if (name === \"settings\") {\n      this.setState({ accountModalOpen: true });\n    }\n  };\n\n  handleAccountModalClose = () => {\n    this.setState({ accountModalOpen: false });\n  };\n\n  handlePrestoModalClose = () => {\n    this.setState({ prestoModalOpen: false });\n  };\n\n  render() {\n    const {\n      firstName,\n      lastName,\n      cards,\n      balance,\n      budget,\n      lastActivity,\n      amount,\n      since\n    } = this.props;\n    const { activeItem, accountModalOpen, prestoModalOpen } = this.state;\n\n    return (\n      <div style={{ background: \"white\" }}>\n        <Menu icon secondary borderless>\n          <Menu.Item header>\n            {/* <Icon name=\"user circle outline\" size=\"large\" />{\" \"}\n            {`  ${firstName} ${lastName}`} */}\n          </Menu.Item>\n\n          <Menu.Menu position=\"right\">\n            <Menu.Item name=\"update\" onClick={this.handleItemClick}>\n              <Icon name=\"refresh\" size=\"large\" />\n            </Menu.Item>\n\n            <Menu.Item name=\"settings\" onClick={this.handleItemClick}>\n              <Icon name=\"setting\" size=\"large\" />\n            </Menu.Item>\n\n            <Menu.Item name=\"logout\" onClick={this.handleItemClick}>\n              <Icon name=\"log out\" size=\"large\" />\n            </Menu.Item>\n          </Menu.Menu>\n        </Menu>\n\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            width: \"100%\"\n          }}>\n          <SmallStatistic\n            header=\"Balance\"\n            body={`$${(Math.round(balance * 100) / 100).toFixed(2)}`}\n            footer={`over ${cards.length} card${cards.length !== 1 ? \"s\" : \"\"}`}\n          />\n          <SmallStatistic\n            header=\"Spent\"\n            body={`$${Math.round(amount / 100)}`}\n            footer={`since ${moment(since).format(\"MMM YYYY\")}`}\n          />\n          <SmallStatistic\n            header=\"Last Charge\"\n            body={`$${parseFloat(lastActivity.amount / 100).toFixed(2)}`}\n            footer={`${moment(lastActivity.date).fromNow()}`}\n          />\n          <SmallStatistic\n            header=\"Location\"\n            body={lastActivity.location}\n            footer={`${moment(lastActivity.date).fromNow()}`}\n          />\n          <SmallStatistic\n            header=\"Updated\"\n            body={moment(lastActivity.updated_at).fromNow()}\n          />\n        </div>\n\n        <UpdatePresto\n          open={prestoModalOpen}\n          close={this.handlePrestoModalClose}\n        />\n        <AccountSettings\n          open={accountModalOpen}\n          user={this.props}\n          budget={budget || {}}\n          close={this.handleAccountModalClose}\n        />\n      </div>\n    );\n  }\n}\n\nUser.propTypes = propTypes;\nUser.defaultProps = defaultProps;\n\nexport default withRouter(User);\n","import User from './User';\n\nexport default User;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Bar = styled.div`\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 40px;\n  z-index: 11;\n`;\n\nexport default props => <Bar>{props.children}</Bar>;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Header, Button, Icon } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nimport HeaderBar from './styled/HeaderBar';\nimport { FlexRow } from './Page';\n\nconst Flex = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  padding-top: 10px;\n  background: #ffffff;\n`;\n\nconst LinkDiv = styled.div`\n  padding: 0 10px;\n`;\n\nconst Index = props => (\n  <Container>\n    <div style={{ position: 'relative', maxHeight: '60px' }}>\n      <HeaderBar>\n        <FlexRow justify=\"space-around\" align=\"center\" padding=\"0 0 0 10px\">\n          <Header style={{ width: '100%', marginBottom: '0' }} as=\"h1\">\n            Presto Analytics\n          </Header>\n          <FlexRow justify=\"flex-end\" padding=\"0 10px 0 0\">\n            <LinkDiv>\n              <Link to=\"/login\">Log In</Link>\n            </LinkDiv>\n            {' | '}\n            <LinkDiv>\n              <Link to=\"/register\">Sign Up</Link>\n            </LinkDiv>\n          </FlexRow>\n        </FlexRow>\n      </HeaderBar>\n    </div>\n    <Flex>{props.children}</Flex>\n  </Container>\n);\n\nexport default Index;\n","import React from \"react\";\nimport Fetch from \"react-fetch-component\";\nimport PropTypes from \"prop-types\";\nimport { Loader, Dimmer } from \"semantic-ui-react\";\n\nimport API from \"../lib/api\";\n\nconst AuthUser = props => (\n  <Fetch\n    url={`${API.root}${API.currentUser.endpoint}`}\n    options={API.send(API.currentUser.method)}>\n    {payload => {\n      if (payload.loading) {\n        return (\n          <Dimmer active>\n            <Loader />\n          </Dimmer>\n        );\n      }\n\n      return props.children(payload);\n    }}\n  </Fetch>\n);\n\nAuthUser.propTypes = {\n  children: PropTypes.func.isRequired\n};\n\nexport default AuthUser;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Link, Redirect } from \"react-router-dom\";\nimport { Input, Icon, Button, Form, Message } from \"semantic-ui-react\";\nimport Fetch from \"react-fetch-component\";\n\nimport API from \"../lib/api\";\nimport { UserContext } from \"./Page\";\n\nexport default class Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  saveToState = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    const { email, password } = this.state;\n    return (\n      <UserContext.Consumer>\n        {ctx => {\n          return (\n            <Fetch\n              manual\n              url={`${API.root}${API.login}`}\n              options={API.send({ email, password })}>\n              {({ fetch, data, loading, error }) => {\n                if (\n                  (data && data.status === \"success\") ||\n                  (ctx.data && ctx.data.user)\n                ) {\n                  return <Redirect to=\"/dashboard\" />;\n                }\n\n                return (\n                  <div>\n                    {error && (\n                      <Message error>\n                        <Message.Header>An error occured</Message.Header>\n                        {error.message}\n                      </Message>\n                    )}\n                    <div style={{ minWidth: \"35%\" }}>\n                      <Message\n                        attached\n                        header=\"Log in\"\n                        content=\"Enter your email address and password to log in to your account\"\n                      />\n                      <Form className=\"attached fluid segment\">\n                        <Form.Input\n                          fluid\n                          iconPosition=\"left\"\n                          placeholder=\"Email\">\n                          <Icon name=\"at\" />\n                          <input\n                            disabled={loading}\n                            type=\"text\"\n                            name=\"email\"\n                            onChange={this.saveToState}\n                            value={email}\n                          />\n                        </Form.Input>\n                        <Form.Input\n                          fluid\n                          iconPosition=\"left\"\n                          placeholder=\"Password\">\n                          <Icon name=\"key\" />\n                          <input\n                            disabled={loading}\n                            type=\"password\"\n                            name=\"password\"\n                            onChange={this.saveToState}\n                            value={password}\n                          />\n                        </Form.Input>\n\n                        <div style={{ textAlign: \"right\" }}>\n                          <Button\n                            style={{ marginRight: 0 }}\n                            positive\n                            labelPosition=\"right\"\n                            icon=\"chevron circle right\"\n                            content=\"Login\"\n                            disabled={\n                              loading || (!email.length || !password.length)\n                            }\n                            loading={loading}\n                            onClick={() => {\n                              fetch();\n                              this.setState({ email: \"\", password: \"\" });\n                            }}\n                          />\n                        </div>\n                      </Form>\n                      <Message attached=\"bottom\" warning>\n                        <Icon name=\"help\" />\n                        Don't have an account?\n                        <Link to=\"/register\"> Register</Link>\n                        &nbsp;instead.\n                      </Message>\n                    </div>\n                  </div>\n                );\n              }}\n            </Fetch>\n          );\n        }}\n      </UserContext.Consumer>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Message, Container } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport Index from './Index';\nimport AuthUser from './AuthUser';\nimport Login from './Login';\n\nimport requestApi from '../lib/requestApi';\n\nconst UserContext = React.createContext();\n\nconst Content = styled.div`\n  position: relative;\n  width: 100%;\n  color: white;\n  z-index: 1;\n`;\n\nconst Main = styled.main`\n  border-radius: 0.7em;\n  margin-left: 30px;\n  min-height: 400px;\n  margin-right: 15px;\n  /* border: 1px solid lightgrey; */\n  /* background: white; */\n  margin-top: 10px;\n  box-shadow: 0 1px 6px rgba(32, 33, 36, 0.28);\n  padding: 10px;\n`;\n\nconst FlexRow = styled.div`\n  display: flex;\n  position: relative;\n  flex-wrap: nowrap;\n  width: ${props => props.width || '100%'};\n  flex-direction: row;\n  align-items: ${props => props.align || 'stretch'};\n  justify-content: ${props => props.justify || 'stretch'};\n  padding: ${props => props.padding || '0'};\n`;\n\nexport default class Page extends Component {\n  state = {\n    menuValue: '',\n    updatePrestoOpen: false,\n    accountSettingsOpen: false,\n    redirect: false,\n  };\n\n  render() {\n    const { children, loginRequired } = this.props;\n    const { menuValue, accountSettingsOpen } = this.state;\n\n    return (\n      <AuthUser>\n        {({ data, error, loading }) => {\n          if (!loading && error && loginRequired) {\n            return (\n              <Index>\n                {error && <Message error>{error.message}</Message>}\n                <UserContext.Provider\n                  value={{\n                    data,\n                    error,\n                  }}\n                >\n                  <Login />\n                </UserContext.Provider>\n              </Index>\n            );\n          }\n\n          if (!loading && error && !loginRequired) {\n            return (\n              <Index>\n                <UserContext.Provider\n                  value={{\n                    data,\n                    error,\n                  }}\n                >\n                  {children}\n                </UserContext.Provider>\n              </Index>\n            );\n          }\n\n          //   if (!loading && data && data.status === \"success\" && !loginRequired) {\n          //     return <Redirect to=\"/login\" />;\n          //   }\n\n          if (!loading && data && data.status === 'success') {\n            // rgb(244, 243, 239)\n            return (\n              <>\n                <UserContext.Provider\n                  value={{\n                    data: data.data,\n                  }}\n                >\n                  {children}\n                </UserContext.Provider>\n              </>\n            );\n          }\n        }}\n      </AuthUser>\n    );\n  }\n}\n\nexport {\n  UserContext, FlexRow, Content, Container,\n};\n","import React from \"react\";\nimport moment from \"moment\";\nimport {\n  ResponsiveContainer,\n  CartesianGrid,\n  Line,\n  LineChart,\n  XAxis,\n  YAxis,\n  ReferenceLine,\n  Tooltip\n} from \"recharts\";\n\nimport { FlexRow } from \"../Page\";\n\nexport default props => {\n  console.log(props);\n  const { dataset } = props;\n\n  return (\n    <div>\n      <FlexRow justify=\"space-between\" align=\"center\">\n        <h3\n          style={{\n            marginTop: \"0\",\n            marginBottom: \"0\",\n            marginLeft: \"25px\",\n            color: \"#11BB81\"\n          }}>\n          {\"Year to Month\"}\n        </h3>\n        <h3 style={{ marginTop: \"0\", marginRight: \"30px\", color: \"#3BB4E9\" }}>\n          {`$${(dataset.totalAmount / 100).toFixed(2)} Total`}\n        </h3>\n      </FlexRow>\n      <ResponsiveContainer height={200}>\n        <LineChart\n          margin={{\n            top: 20,\n            right: 30,\n            left: 0,\n            bottom: 0\n          }}\n          data={dataset.data}>\n          <CartesianGrid stroke=\"#EBEBEB\" vertical={false} />\n\n          <Line\n            dataKey=\"paymentTaps\"\n            type=\"monotone\"\n            stroke=\"#3333cc\"\n            strokeWidth={5}\n            dot={{\n              stroke: \"white\",\n              strokeWidth: 3,\n              fill: \"#3333cc\",\n              r: 7\n            }}\n          />\n          <Line\n            dataKey=\"transferTaps\"\n            type=\"monotone\"\n            stroke=\"#11BB81\"\n            strokeWidth={5}\n            dot={{\n              stroke: \"white\",\n              strokeWidth: 3,\n              fill: \"#11BB81\",\n              r: 7\n            }}\n          />\n          <Line\n            dataKey=\"amount\"\n            type=\"monotone\"\n            stroke=\"#3BB4E9\"\n            strokeWidth={5}\n            dot={{\n              stroke: \"white\",\n              strokeWidth: 3,\n              fill: \"#3BB4E9\",\n              r: 7\n            }}\n          />\n          <YAxis\n            type=\"number\"\n            tickMargin={20}\n            dataKey=\"amount\"\n            tickLine={false}\n            axisLine={false}\n            stroke=\"#C4C4C4\"\n          />\n          <XAxis\n            dataKey=\"date\"\n            tickMargin={5}\n            tickLine={false}\n            axisLine={false}\n            stroke=\"#C4C4C4\"\n          />\n\n          <ReferenceLine\n            y={\n              dataset.monthlyPassCost\n                ? parseFloat(dataset.monthlyPassCost / 100).toFixed(2)\n                : null\n            }\n            label=\"Transit Pass Cost\"\n            stroke=\"red\"\n          />\n          <ReferenceLine\n            y={(\n              parseFloat(dataset.monthlyPassCost) /\n              parseFloat(dataset.fareCost) /\n              100\n            ).toFixed(2)}\n            label=\"Transit Pass Break-even\"\n            stroke=\"red\"\n          />\n\n          <Tooltip />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  ResponsiveContainer,\n  CartesianGrid,\n  Line,\n  LineChart,\n  XAxis,\n  YAxis,\n  Tooltip\n} from \"recharts\";\n\nimport { FlexRow } from \"../Page\";\n\nexport default props => {\n  const { dataset, budget } = props;\n\n  dataset.data.forEach(item => {\n    let totalMonthlyPassCost = 0;\n\n    if (budget) {\n      totalMonthlyPassCost = budget.monthlyPassCost;\n    }\n\n    item.costPerTapIfPass = (\n      parseFloat(totalMonthlyPassCost) /\n      (item.paymentTaps + item.transferTaps)\n    ).toFixed(2);\n  });\n\n  console.log(dataset);\n\n  return (\n    <div>\n      <FlexRow justify=\"space-between\" align=\"center\">\n        <h3\n          style={{\n            marginTop: \"0\",\n            marginBottom: \"0\",\n            marginLeft: \"25px\",\n            color: \"#11BB81\"\n          }}>\n          {\"Cost Per Tap\"}\n        </h3>\n        <h3 style={{ marginTop: \"0\", marginRight: \"30px\", color: \"#3BB4E9\" }}>\n          {`$${dataset.costPerTap.toFixed(2)} / Tap`}\n        </h3>\n      </FlexRow>\n      <ResponsiveContainer height={200}>\n        <LineChart\n          margin={{\n            top: 20,\n            right: 30,\n            left: 0,\n            bottom: 0\n          }}\n          data={dataset.data}>\n          <CartesianGrid stroke=\"#EBEBEB\" vertical={false} />\n          <Line\n            dataKey=\"costPerTap\"\n            type=\"monotone\"\n            stroke=\"#3BB4E9\"\n            strokeWidth={5}\n            dot={{\n              stroke: \"white\",\n              strokeWidth: 3,\n              fill: \"#3BB4E9\",\n              r: 7\n            }}\n          />\n          {dataset.data[0] && dataset.data[0].costPerTapIfPass > 0 && (\n            <Line\n              dataKey=\"costPerTapIfPass\"\n              type=\"monotone\"\n              stroke=\"#3333cc\"\n              strokeWidth={5}\n              dot={{\n                stroke: \"white\",\n                strokeWidth: 3,\n                fill: \"#3333cc\",\n                r: 7\n              }}\n            />\n          )}\n          <YAxis\n            type=\"number\"\n            tickMargin={20}\n            dataKey=\"costPerTap\"\n            tickLine={false}\n            axisLine={false}\n            stroke=\"#C4C4C4\"\n          />\n          <XAxis\n            dataKey=\"date\"\n            tickMargin={5}\n            tickLine={false}\n            axisLine={false}\n            stroke=\"#C4C4C4\"\n          />\n          <Tooltip />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n","import React from \"react\";\nimport moment from \"moment\";\nimport {\n  ResponsiveContainer,\n  CartesianGrid,\n  Bar,\n  BarChart,\n  XAxis,\n  YAxis,\n  ReferenceLine,\n  Tooltip\n} from \"recharts\";\n\nimport { FlexRow } from \"../Page\";\n\nexport default props => {\n  const { dataset } = props;\n  const numOfMonths = dataset.data.length;\n\n  return (\n    <div>\n      <FlexRow justify=\"space-between\" align=\"center\">\n        <h3\n          style={{\n            marginTop: \"0\",\n            marginBottom: \"0\",\n            marginLeft: \"25px\",\n            color: \"#11BB81\"\n          }}>\n          {\"Tap Overview\"}\n        </h3>\n        <h3 style={{ marginTop: \"0\", marginRight: \"30px\", color: \"#3BB4E9\" }}>\n          {`${dataset.totalTaps} Taps Total`}\n        </h3>\n      </FlexRow>\n      <ResponsiveContainer height={200}>\n        <BarChart\n          margin={{\n            top: 20,\n            right: 30,\n            left: 0,\n            bottom: 0\n          }}\n          data={dataset.data}>\n          <CartesianGrid stroke=\"#EBEBEB\" vertical={false} />\n          <Tooltip />\n          <Bar stackId=\"a\" dataKey=\"paymentTaps\" fill=\"#3333cc\" />\n          <Bar stackId=\"a\" dataKey=\"transferTaps\" fill=\"#3BB4E9\" />\n          <ReferenceLine\n            y={dataset.totalTaps / numOfMonths}\n            label=\"Average Monthly Taps\"\n            stroke=\"red\"\n          />\n          <YAxis\n            allowDecimals={false}\n            type=\"number\"\n            dataKey=\"paymentTaps\"\n            tickLine={false}\n            axisLine={false}\n          />\n          <XAxis dataKey=\"date\" tickLine={false} axisLine={false} />\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport Fetch from \"react-fetch-component\";\nimport { Tab, Segment, Header, Message } from \"semantic-ui-react\";\n\nimport YearStats from \"./YearStats\";\nimport YearCostPerTap from \"./YearCostPerTap\";\nimport YearTransactionBreakdown from \"./YearTransactionBreakdown\";\n\nimport { FlexRow } from \"../Page\";\n\nimport API from \"../../lib/api\";\n\nfunction getMonthNumFromName(name) {\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ];\n\n  return months.indexOf(name) + 1;\n}\n\nfunction getDataset(obj) {\n  const dataset = {\n    data: [],\n    totalAmount: 0,\n    totalTaps: 0,\n    costPerTap: 0\n  };\n  const years = Object.keys(obj);\n\n  years.forEach(year => {\n    const months = Object.keys(obj[year]);\n    months.forEach(month => {\n      const { amount, transactions, transitPassAmount } = obj[year][month];\n\n      const monthYearString = `${getMonthNumFromName(month)}/${year}`;\n      const payments = transactions.filter(item =>\n        item.type.includes(\"Payment\")\n      );\n      const transfers = transactions.filter(item =>\n        item.type.includes(\"Transfer\")\n      );\n      let costPerTap = Math.round(\n        Math.round((amount + transitPassAmount) / transactions.length)\n      );\n\n      if (isNaN(costPerTap)) {\n        costPerTap = 0;\n      }\n\n      console.log(costPerTap);\n\n      dataset.totalAmount += amount + transitPassAmount;\n      dataset.totalTaps += transactions.length;\n\n      dataset.data.push({\n        date: monthYearString,\n        amount: Math.round(amount + transitPassAmount) / 100,\n        costPerTap: costPerTap / 100,\n        paymentTaps: payments.length,\n        transferTaps: transfers.length,\n        taps: transactions.length\n      });\n    });\n  });\n\n  let totalCostPerTap =\n    Math.round(dataset.totalAmount / dataset.totalTaps) / 100;\n\n  if (isNaN(totalCostPerTap)) {\n    totalCostPerTap = 0;\n  }\n  console.log(\"HEYHEY:\", totalCostPerTap);\n  dataset.costPerTap = totalCostPerTap;\n  dataset.totalAmount = Math.round(dataset.totalAmount).toFixed(2);\n  return dataset;\n}\n\nexport default class MonthlyOverview extends Component {\n  state = {\n    month: new Date().getMonth(),\n    year: new Date().getFullYear(),\n    activeIndex: 0,\n    selectedMonth: new Date().getMonth(),\n    selectedYear: new Date().getFullYear()\n  };\n\n  render() {\n    console.log(\"SUP?\", this.props);\n    const {\n      year,\n      month,\n      selectedYear,\n      selectedMonth,\n      activeIndex\n    } = this.state;\n    const { budget } = this.props;\n\n    const thisMonth = new Date().getMonth();\n    const thisYear = new Date().getFullYear();\n\n    return (\n      <Fetch\n        url={`${API.root}${API.yearToDateData.endpoint}`}\n        options={API.send(\"GET\")}>\n        {payload => {\n          let dataset = {};\n\n          if (!payload.loading && payload.error) {\n            return <Message error>{payload.error.message}</Message>;\n          }\n\n          if (!payload.loading) {\n            dataset = getDataset(payload.data.data);\n          }\n\n          return (\n            <>\n              <FlexRow padding=\"0 0 10px 0\">\n                <div style={{ width: \"50%\", marginRight: \"10px\" }}>\n                  <Segment\n                    style={{ minHeight: \"250px\" }}\n                    loading={payload.loading}>\n                    {!payload.loading && (\n                      <YearStats dataset={dataset} budget={budget} />\n                    )}\n                  </Segment>\n                </div>\n                <div style={{ width: \"50%\" }}>\n                  <Segment\n                    style={{ minHeight: \"250px\" }}\n                    loading={payload.loading}>\n                    {!payload.loading && (\n                      <YearCostPerTap dataset={dataset} budget={budget} />\n                    )}\n                  </Segment>\n                </div>\n              </FlexRow>\n              <div style={{ width: \"100%\" }}>\n                <Segment\n                  style={{ minHeight: \"250px\" }}\n                  loading={payload.loading}>\n                  {!payload.loading && (\n                    <YearTransactionBreakdown dataset={dataset} />\n                  )}\n                </Segment>\n              </div>\n            </>\n          );\n        }}\n      </Fetch>\n    );\n  }\n}\n","import moment from \"moment\";\nimport React, { createRef } from \"react\";\nimport { Grid, Container, Header, Sticky, Ref } from \"semantic-ui-react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport DataFilter, {\n  SEARCH_TYPE_RANGE,\n  SEARCH_TYPE_MONTH\n} from \"./dashboard/DataFilter\";\nimport FilteredStats from \"./dashboard/FilteredStats\";\nimport MonthlyOverview from \"./dashboard/MonthlyOverview\";\nimport RecentActivity from \"./dashboard/RecentActivity\";\nimport SideBar from \"./SideBar\";\nimport TapList from \"./dashboard/TapList\";\nimport TopTapOrigins from \"./dashboard/TopTapOrigins\";\nimport User from \"./dashboard/User\";\nimport YearOverview from \"./dashboard/YearOverview\";\n\nclass Dashboard extends React.Component {\n  contextRef = createRef();\n\n  render() {\n    const {\n      props: {\n        data: {\n          user,\n          balance,\n          budget,\n          lastActivity,\n          spent: { amount, since }\n        }\n      }\n    } = this.props;\n\n    return (\n      <>\n        <Ref innerRef={this.contextRef}>\n          <Grid columns=\"equal\">\n            <Grid.Row>\n              <Grid.Column>\n                <Sticky context={this.contextRef}>\n                  <User\n                    firstName={user.firstName}\n                    lastName={user.lastName}\n                    cards={user.cards}\n                    balance={balance}\n                    budget={budget}\n                    amount={since ? amount : \"N/A\"}\n                    since={since || \"Never\"}\n                    lastActivity={\n                      lastActivity.length === 0\n                        ? { amount: \"Never\", location: \"N/A\", date: \"Never\" }\n                        : lastActivity[0]\n                    }\n                  />\n                </Sticky>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row style={{ marginTop: \"20px\" }}>\n              <Grid.Column>\n                <Route path=\"/dashboard/:cardNumber/:searchType/:yearOrRange/:monthOrUnit\">\n                  {({ match, history }) => {\n                    console.log(match, history);\n                    let cardNumber;\n                    let searchType;\n                    let yearOrRange;\n                    let monthOrUnit;\n\n                    if (match) {\n                      cardNumber = match.params.cardNumber;\n                      searchType =\n                        match.params.searchType === SEARCH_TYPE_RANGE ||\n                        match.params.searchType === SEARCH_TYPE_MONTH\n                          ? match.params.searchType\n                          : \"err\";\n                      yearOrRange = Math.abs(\n                        parseInt(match.params.yearOrRange, 10)\n                      );\n                      monthOrUnit =\n                        match.params.monthOrUnit !== \"days\"\n                          ? Math.abs(parseInt(match.params.monthOrUnit, 10))\n                          : \"days\";\n                    } else {\n                      //defaults\n                      cardNumber = \"all\";\n                      searchType = SEARCH_TYPE_RANGE;\n                      yearOrRange = 30;\n                      monthOrUnit = \"days\";\n\n                      return (\n                        <Redirect\n                          to={`/dashboard/${cardNumber}/${searchType}/${yearOrRange}/${monthOrUnit}`}\n                        />\n                      );\n                    }\n\n                    return (\n                      <DataFilter\n                        cards={user.cards}\n                        history={history}\n                        match={match}\n                        cardNumber={cardNumber}\n                        searchType={searchType}\n                        yearOrRange={yearOrRange}\n                        monthOrUnit={monthOrUnit}>\n                        {({ data, error, loading }) => {\n                          console.log(data);\n                          return (\n                            <Grid columns=\"equal\">\n                              <Grid.Row>\n                                <Grid.Column>\n                                  <MonthlyOverview\n                                    data={data}\n                                    error={error}\n                                    loading={loading}\n                                    budget={budget || {}}\n                                  />\n                                </Grid.Column>\n                              </Grid.Row>\n                              <Grid.Row>\n                                <Grid.Column>\n                                  <FilteredStats\n                                    data={data}\n                                    error={error}\n                                    loading={loading}\n                                  />\n                                </Grid.Column>\n                              </Grid.Row>\n                              <Grid.Row>\n                                <Grid.Column>\n                                  <TopTapOrigins\n                                    data={data}\n                                    error={error}\n                                    loading={loading}\n                                  />\n                                </Grid.Column>\n                                <Grid.Column />\n                              </Grid.Row>\n                            </Grid>\n                          );\n                        }}\n                      </DataFilter>\n                    );\n                  }}\n                </Route>\n              </Grid.Column>\n            </Grid.Row>\n            {/*\n                 * May move these to a different route\n                 <Grid.Row style={{ marginTop: \"20px\" }}>\n                 <Header as=\"h2\">\n                 Year Overview\n                 <Header.Subheader>\n                 Some kind of text will go here\n                 </Header.Subheader>\n                 </Header>\n                 <YearOverview budget={budget} />\n                </Grid.Row> */}\n          </Grid>\n        </Ref>\n      </>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport MainDashboard from \"../components/Dashboard\";\nimport Page, { UserContext } from \"../components/Page\";\n\nconst propTypes = {};\n\nconst defaultProps = {};\n\nexport default function Dashboard(props) {\n  return (\n    <Page loginRequired>\n      <UserContext.Consumer>\n        {data => <MainDashboard props={data} />}\n      </UserContext.Consumer>\n    </Page>\n  );\n}\n\nDashboard.propTypes = propTypes;\nDashboard.defaultProps = defaultProps;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport LoginPage from \"../components/Login\";\nimport Page from \"../components/Page\";\n\nconst propTypes = {};\n\nconst defaultProps = {};\n\nexport default function Login(props) {\n  return (\n    <Page loginRequired={false}>\n      <LoginPage />\n    </Page>\n  );\n}\n\nLogin.propTypes = propTypes;\nLogin.defaultProps = defaultProps;\n","import React, { Component } from \"react\";\n\nimport NProgress from \"nprogress\";\nimport { Button, Message, Form, Icon } from \"semantic-ui-react\";\nimport Fetch from \"react-fetch-component\";\nimport { Link } from \"react-router-dom\";\n\nimport API from \"../lib/api\";\n\nexport default class Register extends Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    passwordAgain: \"\"\n  };\n\n  saveToState = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    const { firstName, lastName, email, password, passwordAgain } = this.state;\n    const { incrementSteps } = this.props;\n\n    return (\n      <Fetch\n        manual\n        url={`${API.root}${API.register}`}\n        options={API.send({\n          firstName,\n          lastName,\n          email,\n          password,\n          passwordAgain\n        })}>\n        {({ fetch, loading, data, error }) => {\n          if (data) {\n            NProgress.done();\n            if (incrementSteps) {\n              incrementSteps();\n            }\n          }\n\n          const handleError = () => {\n            NProgress.done();\n            return (\n              <div>\n                ERROR:\n                {error.message}\n              </div>\n            );\n          };\n\n          return (\n            <div style={{ minWidth: \"50%\" }}>\n              <Message\n                attached\n                header=\"Register\"\n                content=\"Fill out the form below to sign-up for a new account\"\n              />\n\n              {error && handleError()}\n\n              <Form className=\"attached fluid segment\">\n                <Form.Group widths=\"equal\">\n                  <Form.Input\n                    fluid\n                    label=\"First Name\"\n                    type=\"text\"\n                    placeholder=\"First Name\"\n                    value={firstName}\n                    onChange={this.saveToState}\n                    name=\"firstName\"\n                    disabled={loading}\n                  />\n                  <Form.Input\n                    fluid\n                    label=\"Last Name\"\n                    placeholder=\"Last Name\"\n                    type=\"text\"\n                    name=\"lastName\"\n                    onChange={this.saveToState}\n                    value={lastName}\n                    disabled={loading}\n                  />\n                </Form.Group>\n\n                <Form.Input\n                  fluid\n                  placeholder=\"Email\"\n                  label=\"Email\"\n                  disabled={loading}\n                  type=\"text\"\n                  name=\"email\"\n                  onChange={this.saveToState}\n                  value={email}\n                />\n\n                <Form.Group widths=\"equal\">\n                  <Form.Input\n                    fluid\n                    placeholder=\"Password\"\n                    label=\"Password\"\n                    disabled={loading}\n                    type=\"password\"\n                    name=\"password\"\n                    onChange={this.saveToState}\n                    value={password}\n                  />\n                  <Form.Input\n                    fluid\n                    placeholder=\"Password Again\"\n                    disabled={loading}\n                    label=\"Password Again\"\n                    type=\"password\"\n                    name=\"passwordAgain\"\n                    onChange={this.saveToState}\n                    value={passwordAgain}\n                  />\n                </Form.Group>\n\n                <Button\n                  positive\n                  labelPosition=\"right\"\n                  icon=\"chevron circle right\"\n                  content=\"Next\"\n                  disabled={\n                    loading ||\n                    (!firstName ||\n                      !lastName ||\n                      !email ||\n                      !password ||\n                      !passwordAgain ||\n                      password !== passwordAgain)\n                  }\n                  loading={loading}\n                  onClick={() => {\n                    NProgress.start();\n                    fetch();\n\n                    this.setState({\n                      firstName: \"\",\n                      lastName: \"\",\n                      email: \"\",\n                      password: \"\",\n                      passwordAgain: \"\"\n                    });\n                  }}\n                />\n              </Form>\n              <Message attached=\"bottom\" warning>\n                <Icon name=\"help\" />\n                Already signed up?&nbsp;\n                <Link to=\"/login\">Login</Link>\n                &nbsp;instead.\n              </Message>\n            </div>\n          );\n        }}\n      </Fetch>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Container, Header, Icon, Step, Segment,\n} from 'semantic-ui-react';\n\nimport RegisterAccount from './RegisterAccount';\nimport PrestoSignin from './PrestoSignin';\n\nclass Register extends Component {\n  state = {\n    activeStep: 1,\n    completedSteps: 0,\n  };\n\n  incrementSteps = () => {\n    const { activeStep, completedSteps } = this.state;\n\n    this.setState({ activeStep: activeStep + 1, completedSteps: completedSteps + 1 });\n  };\n\n  render() {\n    const { activeStep, completedSteps } = this.state;\n    console.log(completedSteps > 0, activeStep);\n    return (\n      <Container>\n        <Segment basic textAlign=\"center\">\n          <Step.Group ordered>\n            <Step active={activeStep === 1} completed={completedSteps > 0}>\n              <Step.Content>\n                <Step.Title>Sign Up</Step.Title>\n                <Step.Description>Sign up for your account</Step.Description>\n              </Step.Content>\n            </Step>\n\n            <Step active={activeStep === 2} completed={completedSteps > 1}>\n              <Step.Content>\n                <Step.Title>Presto</Step.Title>\n                <Step.Description>Sign in to Presto</Step.Description>\n              </Step.Content>\n            </Step>\n\n            <Step active={activeStep === 3} completed={completedSteps > 2}>\n              <Step.Content>\n                <Step.Title>Finalize</Step.Title>\n              </Step.Content>\n            </Step>\n          </Step.Group>\n        </Segment>\n\n        <Segment basic>\n          {activeStep === 1 && <RegisterAccount incrementSteps={this.incrementSteps} />}\n          {activeStep === 2 && <PrestoSignin incrementSteps={this.incrementSteps} />}\n          {activeStep === 3 && <div>ALL DONE</div>}\n        </Segment>\n      </Container>\n    );\n  }\n}\n\nexport default Register;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Page from \"../components/Page\";\nimport RegisterPage from \"../components/Register\";\n\nconst propTypes = {};\nconst defaultProps = {};\n\nexport default function Register(props) {\n  return (\n    <Page>\n      <RegisterPage />\n    </Page>\n  );\n}\n\nRegister.propTypes = propTypes;\nRegister.defaultProps = defaultProps;\n","import 'semantic-ui-less/semantic.less';\n\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nimport Dashboard from './routes/Dashboard';\nimport Login from './routes/Login';\nimport Register from './routes/Register';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Route exact path=\"/\" component={Login} />\n        <Route path=\"/dashboard\" component={Dashboard} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}