{"version":3,"sources":["lib/api.js","components/dashboard/CardMenu/index.js","components/dashboard/CardMenu/CardMenu.jsx","components/dashboard/DataFilter/DataFilter.jsx","components/dashboard/DataFilter/index.js","components/styled/Statistic.js","components/dashboard/FilteredStats/FilteredStats.jsx","components/dashboard/FilteredStats/index.js","components/dashboard/MonthlyStats.js","lib/transactions.js","components/dashboard/MonthlyOverview.js","lib/date.js","components/dashboard/RecentActivity/RecentActivity.jsx","components/dashboard/RecentActivity/index.js","components/dashboard/TapList/TapList.jsx","components/dashboard/TapList/index.js","components/dashboard/TopTapOrigins/TopTapOrigins.jsx","components/dashboard/TopTapOrigins/index.js","components/styled/HeaderBar.js","components/Index.js","components/AuthUser.js","components/Login.js","lib/requestApi/sendRequest.js","lib/requestApi/user.js","lib/requestApi/presto.js","lib/requestApi/budget.js","lib/requestApi/me.js","lib/requestApi/index.js","components/AccountSettings.js","components/PrestoSignin.js","components/dashboard/UpdatePresto.js","components/SideBar.js","components/styled/SmallStatistic.js","components/dashboard/User/User.jsx","components/dashboard/User/index.js","components/Page.js","components/dashboard/YearStats.js","components/dashboard/YearCostPerTap.js","components/dashboard/YearTransactionBreakdown.js","components/dashboard/YearOverview.js","components/Dashboard.js","routes/Dashboard.js","routes/Login.js","components/RegisterAccount.js","components/Register.js","routes/Register.js","routes/Settings.js","App.js","index.js"],"names":["require","config","path","API","root","concat","send","body","reqMethod","arguments","length","undefined","sendData","method","credentials","headers","Content-Type","toLowerCase","JSON","stringify","currentUser","endpoint","deleteAccount","updateAccountDetails","userId","login","logout","register","monthlyTransactions","cardNumber","year","month","searchMonth","searchYear","Date","getFullYear","toString","transactionRange","days","allTransactions","yearToDate","yearToDateData","updateBudget","prestoUsage","prestoLogin","prestoCheckLogin","CardMenu","props","cards","handleChange","currentSelection","options","map","card","index","key","text","value","unshift","makeCardMenuData","react_default","a","createElement","Dropdown","item","onChange","e","_ref","SEARCH_TYPE_RANGE","name","thisMonth","getMonth","thisYear","DataFilter","cardsArray","_this","state","activeSelection","activeSelectionValue","yearOrRange","monthOrUnit","searchType","modalOpen","selectedMonth","selectedYear","url","optionsMap","handleItemClick","event","history","target","textContent","console","log","route","push","handleCalChange","setState","Object","defineProperty","FilterMenu","option","Menu","Item","active","onClick","_this2","this","_this$state","_this$props","children","match","dist_default","_ref2","data","error","loading","Fragment","size","pointing","secondary","header","transactions","moment","date","format","position","dashboard_CardMenu","Icon","Modal","open","onClose","close","Header","Content","commonjs","inline","closable","dateFormat","maxDate","minDate","Actions","Button","negative","content","positive","icon","labelPosition","nextProps","prevState","parseInt","React","Component","defaultProps","Statistic","label","extra","extraIcon","iconName","iconColor","isCustomIcon","extraFooter","extraFooterIcon","Card","style","flex","minWidth","maxWidth","borderRadius","zIndex","paddingLeft","paddingRight","Description","Grid","columns","verticalAlign","Row","Column","textAlign","color","fontSize","minHeight","className","lineHeight","fontWeight","margin","FilteredStats","totalAmount","prevTotalAmount","totalTaps","prevTotalTaps","totalFares","prevTotalFares","totalTransfers","prevTotalTransfers","prevLastDate","now","lastYearTotalAmount","lastYearTotalTaps","lastYearTotalFares","lastYearTotalTransfers","hasLastYear","prevInterval","count","transfers","fares","utcOffset","lastYear","Group","centered","toFixed","Math","abs","TTContainer","styled","div","_templateObject","TTItem","_templateObject2","TTLocationList","ul","_templateObject3","LegendDot","_templateObject4","TTLocationItem","li","_templateObject5","CustomizedAxisTick","x","y","payload","stroke","transform","dy","textAnchor","fill","CustomTooltip","XAxis","YAxis","dayOfWeek","trips","amount","locations","location","time","MonthlyStats","breakdown","includeAmountInDomain","currDate","domain","dataset","start","stop","dateObj","currentDate","stopDate","transferLocations","fareLocations","add","getDates","forEach","parseFloat","type","keys","totalDailyTransactionBreakdown","es6","height","background","top","right","left","bottom","vertical","dataKey","strokeWidth","dot","r","allowDecimals","padding","tickLine","axisLine","tickSize","minTickGap","interval","tick","MonthlyStats_CustomizedAxisTick","wrapperStyle","MonthlyStats_CustomTooltip","iconType","Segment","placeholder","MonthlyOverview","num","boxShadow","border","Message","message","Timeline","RecentActivity_templateObject","TimelineLine","section","RecentActivity_templateObject2","TimelineItem","RecentActivity_templateObject3","TimelineContainer","RecentActivity_templateObject4","TimelineTime","RecentActivity_templateObject5","AM","TimelineHeader","_templateObject6","TimelineLocation","_templateObject7","TimelineInfoContainer","_templateObject8","TimelineInfo","_templateObject9","RecentActivity","transaction","groupByDate","sort","b","Label","toUpperCase","display","flexFlow","alignItems","justifyContent","round","TapList","tapRows","slice","parse","Table","id","Cell","agency","as","Subheader","celled","HeaderCell","Body","COLORS","TopTapOrigins","range","result","prevLastVisited","lastVisited","currLastVisited","objectSpread","percent","filter","orderLocationByMostTaps","Divider","horizontal","width","entry","Bar","HeaderBar_templateObject","HeaderBar","Flex","Index_templateObject","Container","Index_templateObject2","LinkDiv","Index_templateObject3","Index","maxHeight","FlexRow","justify","align","marginBottom","react_router_dom","to","AuthUser","Dimmer","Loader","Login","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","saveToState","email","password","UserContext","Consumer","ctx","manual","fetch","status","user","react_router","attached","Form","Input","fluid","iconPosition","disabled","marginRight","warning","_callee","fetchHandler","opts","ROOT_URL","response","_args","regenerator_default","wrap","_context","prev","next","assign","sent","json","abrupt","sendRequestWrapper","sendRequest","requestHandler","request","_callee2","_context2","verify","_callee3","details","_args3","_context3","username","me","apiHandlerWrapper","prestoIsLoggedIn","updateUserDetails","AccountSettings","firstName","lastName","monthlyPassCost","budget","fareCost","updateMessage","handleFieldChange","_e$target","handleDeleteAccount","requestApi","handleUpdateUserDetails","userDetails","handleUpdateBudgetDetails","_this$state2","budgetDetails","_this$state3","widths","Field","htmlFor","Popup","trigger","on","PropTypes","shape","withRouter","PrestoSignin","inProgress","progressMessage","isError","handleTextEntry","incrementSteps","update","closeModal","from","asyncToGenerator","mark","UpdatePresto","PrestoSignin_PrestoSignin","nav","SideBar_templateObject","SideBar","accountModalOpen","prestoModalOpen","handleAccountModalClose","handlePrestoModalClose","fixed","compact","inverted","flexDirection","alignContent","dashboard_UpdatePresto","SmallStatistic","footer","marginTop","User","balance","lastActivity","since","marginLeft","borderBottom","fromNow","updated_at","createContext","Page_templateObject","main","Page_templateObject2","Page_templateObject3","Page","menuValue","updatePrestoOpen","accountSettingsOpen","redirect","contextRef","createRef","loginRequired","components_AuthUser","components_Index","Provider","Login_Login","_data$data","_data$data$spent","spent","components_SideBar","Ref","innerRef","paddingTop","Sticky","context","dashboard_User","YearStats","tickMargin","YearCostPerTap","totalMonthlyPassCost","costPerTapIfPass","paymentTaps","transferTaps","costPerTap","YearTransactionBreakdown","numOfMonths","stackId","activeIndex","obj","_obj$year$month","transitPassAmount","monthYearString","indexOf","payments","includes","isNaN","taps","totalCostPerTap","getDataset","Dashboard","_props$props$data","_props$props$data$spe","params","dashboard_DataFilter","MonthlyOverview_MonthlyOverview","dashboard_FilteredStats","dashboard_TopTapOrigins","YearOverview_MonthlyOverview","Page_Page","components_Dashboard","Register","passwordAgain","NProgress","done","activeStep","completedSteps","Container_Container","basic","Step","ordered","completed","Title","RegisterAccount_Register","components_Register","Settings","components_AccountSettings","App","exact","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2a695b45.chunk.js","sourcesContent":["require('dotenv').config({ path: '../../../.env' });\n\nconst API = {\n  root: `${process.env.NODE_ENV === 'development' ? 'http://localhost:3333' : ''}/api`,\n  send: (body, method = 'POST') => {\n    let reqMethod = method;\n\n    if (typeof body === 'string') {\n      reqMethod = body;\n    }\n\n    const sendData = {\n      method: reqMethod,\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    if (reqMethod.toLowerCase() !== 'get') {\n      sendData.body = JSON.stringify(body);\n    }\n\n    return sendData;\n  },\n\n  currentUser: {\n    method: 'GET',\n    endpoint: '/v1/user/me',\n  },\n  deleteAccount: {\n    method: 'DELETE',\n    endpoint: '/v1/user/me/delete',\n  },\n  updateAccountDetails: {\n    method: 'POST',\n    endpoint: userId => `/v1/user/details/${userId}`,\n  },\n  login: '/login',\n  logout: {\n    endpoint: '/logout',\n    method: 'GET',\n  },\n  register: '/signup',\n\n  monthlyTransactions: (cardNumber, year, month) => {\n    let searchMonth = month;\n    let searchYear = year;\n\n    if (year.length <= 2) {\n      searchYear = new Date().getFullYear().toString();\n      searchMonth = year;\n    }\n\n    return `/v1/transaction/${cardNumber}/monthly/${searchYear}/${searchMonth}`;\n  },\n  transactionRange: (cardNumber, days) => `/v1/transaction/${cardNumber}/range?days=${days}`,\n  allTransactions: {\n    method: 'GET',\n    endpoint: '/v1/transaction',\n  },\n  yearToDate: {\n    method: 'GET',\n    endpoint: '/v1/transaction/ytd',\n  },\n  yearToDateData: {\n    method: 'GET',\n    endpoint: '/v1/transaction/ytd/data',\n  },\n  updateBudget: {\n    method: 'POST',\n    endpoint: '/v1/budget',\n  },\n  prestoUsage: '/v1/presto/usage',\n  prestoLogin: { endpoint: '/v1/presto/login', method: 'POST' },\n  prestoCheckLogin: { endpoint: '/v1/presto/check-login', method: 'GET' },\n};\n\nexport default API;\n","import CardMenu from './CardMenu';\n\nexport default CardMenu;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Dropdown } from \"semantic-ui-react\";\n\nconst propTypes = {};\n\nfunction makeCardMenuData(cards) {\n  const options = cards.map((card, index) => ({\n    key: cards.length > 1 ? index + 2 : index + 1,\n    text: card,\n    value: card\n  }));\n\n  if (cards.length > 1) {\n    options.unshift({ key: 1, text: \"All Cards\", value: \"all\" });\n  }\n\n  return options;\n}\n\nexport default function CardMenu(props) {\n  const { cards, handleChange, currentSelection } = props;\n  const options = makeCardMenuData(cards);\n\n  return (\n    <Dropdown\n      item\n      options={options}\n      value={currentSelection}\n      onChange={(e, { value }) => {\n        handleChange(value);\n      }}\n    />\n  );\n}\n\nCardMenu.propTypes = propTypes;\n","import moment from 'moment';\nimport React from 'react';\nimport Fetch from 'react-fetch-component';\nimport PropTypes from 'prop-types';\nimport {\n  Menu, Modal, Button, Icon, Header,\n} from 'semantic-ui-react';\nimport { YearInput, MonthInput } from 'semantic-ui-calendar-react';\n\nimport API from '../../../lib/api';\nimport CardMenu from '../CardMenu';\n\nconst SEARCH_TYPE_RANGE = 'range';\nconst SEARCH_TYPE_MONTH = 'month';\nconst RANGE_LIMIT = 500;\n\nconst propTypes = {};\n\nconst defaultProps = {};\n\n// TODO: move to default props\nconst options = [\n  { name: 'last 30 days', value: 30 },\n  { name: 'last 60 days', value: 60 },\n  { name: 'last year', value: 365 },\n  // { name: \"all time\", value: \"all_time\" }\n];\n\nconst thisMonth = new Date().getMonth();\nconst thisYear = new Date().getFullYear();\nexport default class DataFilter extends React.Component {\n  cardsArray = this.props.cards && this.props.cards.map(card => card.cardNumber);\n\n  state = {\n    activeSelection: options[0].name,\n    activeSelectionValue: options[0].value,\n    yearOrRange: '',\n    monthOrUnit: '',\n    searchType: '',\n    cardNumber: '',\n    modalOpen: false,\n    selectedMonth: thisMonth,\n    selectedYear: thisYear,\n    url: '',\n  };\n\n  optionsMap = {\n    [options[0].name]: options[0].value,\n    [options[1].name]: options[1].value,\n    [options[2].name]: options[2].value,\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    /**\n     * This is kind of cool, actually.\n     * ---\n     * Takes care of all the state updating for the entire component by receiving props\n     * from the parent route component. So in order for any of the UI elements in this\n     * component to work correctly, all this is required is to history.push the correct route\n     */\n\n    const {\n      cardNumber, yearOrRange, monthOrUnit, searchType,\n    } = nextProps;\n\n    // data validation:\n    console.log('getderivedstatefromprops:', cardNumber, yearOrRange, monthOrUnit, searchType);\n\n    // NEED SOME KIND OF CARD VALIDATION HERE\n    // if (!this.cardsArray.includes(cardNumber) || cardNumber != \"all\") {\n    //   console.log(cardNumber, \"************* ERR\", nextProps.cards);\n    //   // TODO: error about invalid card number\n    //   return null;\n    // }\n\n    if (searchType === 'err') {\n      // TODO: return error about invalid searchType\n      return null;\n    }\n\n    if (\n      (searchType === SEARCH_TYPE_RANGE && parseInt(yearOrRange, 10) > RANGE_LIMIT)\n      || (searchType === SEARCH_TYPE_RANGE && parseInt(yearOrRange, 10) < 5)\n    ) {\n      // TODO: return error about range too high\n      return null;\n    }\n\n    if (searchType === SEARCH_TYPE_MONTH) {\n      if (\n        parseInt(yearOrRange, 10) > thisYear\n        || (parseInt(yearOrRange, 10) === thisYear && parseInt(monthOrUnit, 10) > thisMonth + 1)\n      ) {\n        // TODO: return error message about date being in the future\n        return null;\n      }\n\n      if (\n        parseInt(yearOrRange, 10) < 2010\n        || (parseInt(yearOrRange, 10) < 2010 && parseInt(monthOrUnit, 10) < 5)\n      ) {\n        // TODO: return error message about date out of range: Presto phase 2 started May 5th, 2010.\n        return null;\n      }\n\n      if (parseInt(monthOrUnit) > 12 || parseInt(monthOrUnit) < 1) {\n        // TODO: month value out of range\n        return null;\n      }\n    }\n\n    console.log('PASSED VALIDATION:', cardNumber, yearOrRange, monthOrUnit, searchType);\n\n    return cardNumber === prevState.cardNumber\n      && yearOrRange === prevState.yearOrRange\n      && monthOrUnit === prevState.monthOrUnit\n      && searchType === prevState.searchType\n      ? null\n      : {\n        cardNumber,\n        yearOrRange,\n        monthOrUnit,\n        searchType,\n        url:\n            searchType === SEARCH_TYPE_MONTH\n              ? `${API.root}${API.monthlyTransactions(cardNumber, yearOrRange, monthOrUnit)}`\n              : `${API.root}${API.transactionRange(cardNumber, yearOrRange)}`,\n      };\n  }\n\n  handleItemClick = event => {\n    const { cardNumber } = this.state;\n    const { history } = this.props;\n\n    const activeSelection = event.target.textContent.toLowerCase();\n    console.log('itemclick:', activeSelection);\n    const yearOrRange = this.optionsMap[activeSelection];\n    const monthOrUnit = 'days';\n    const searchType = SEARCH_TYPE_RANGE;\n\n    const route = `/dashboard/${cardNumber}/${searchType}/${yearOrRange}/${monthOrUnit}`;\n    history.push(route);\n  };\n\n  handleCalChange = (event, { name, value }) => {\n    this.setState({ [name]: value });\n  };\n\n  FilterMenu = () => {\n    const { yearOrRange } = this.state;\n\n    const fullMenu = options.map(option => (\n      <Menu.Item\n        key={option.name}\n        name={option.name}\n        active={yearOrRange === option.value}\n        onClick={this.handleItemClick}\n      />\n    ));\n\n    return fullMenu;\n  };\n\n  render() {\n    const {\n      cardNumber,\n      yearOrRange,\n      searchType,\n      monthOrUnit,\n      modalOpen,\n      selectedYear,\n      selectedMonth,\n      url,\n      activeSelection,\n    } = this.state;\n\n    const { children, match, history } = this.props;\n    console.log('datafilter:', match);\n    return (\n      <Fetch url={url} options={API.send('GET')}>\n        {({ data, error, loading }) => {\n          console.log({ data, error, loading });\n          return (\n            <>\n              <Menu size=\"large\" pointing secondary>\n                {!loading && !error && (\n                  <Menu.Item header>\n                    {data.data.transactions.length === 0\n                      ? 'No Transactions For This Period'\n                      : `${moment(data.data.transactions[0].date).format(\n                        'MMMM DD YYYY',\n                      )} - ${moment(\n                        data.data.transactions[data.data.transactions.length - 1].date,\n                      ).format('MMMM DD YYYY')}`}\n                  </Menu.Item>\n                )}\n\n                {loading && <Menu.Item header>Loading...</Menu.Item>}\n\n                <Menu.Menu position=\"right\">\n                  <CardMenu\n                    cards={this.cardsArray}\n                    currentSelection={cardNumber}\n                    handleChange={value => {\n                      const route = `/dashboard/${value}/${searchType}/${yearOrRange}/${monthOrUnit}`;\n                      history.push(route);\n                    }}\n                  />\n                  <this.FilterMenu />\n                  <Menu.Item\n                    name=\"month\"\n                    active={searchType === SEARCH_TYPE_MONTH}\n                    onClick={() => {\n                      this.setState({\n                        activeSelection: SEARCH_TYPE_MONTH,\n                        modalOpen: true,\n                      });\n                    }}\n                  >\n                    <Icon name=\"calendar\" />\n                  </Menu.Item>\n                </Menu.Menu>\n              </Menu>\n\n              {children({ data, error, loading })}\n\n              <Modal size=\"tiny\" open={modalOpen} onClose={this.close}>\n                <Modal.Header>Choose Another Date</Modal.Header>\n                <Modal.Content>\n                  <MonthInput\n                    inline\n                    closable\n                    dateFormat=\"M\"\n                    name=\"selectedMonth\"\n                    maxDate={selectedYear == thisYear ? thisMonth + 1 : 12}\n                    value={selectedMonth || thisMonth + 1}\n                    onChange={this.handleCalChange}\n                  />\n                  <YearInput\n                    inline\n                    name=\"selectedYear\"\n                    closable\n                    dateFormat=\"YYYY\"\n                    maxDate={thisYear}\n                    minDate={2018}\n                    value={selectedYear || thisYear}\n                    onChange={this.handleCalChange}\n                  />\n                </Modal.Content>\n                <Modal.Actions>\n                  <Button\n                    negative\n                    content=\"Cancel\"\n                    onClick={() => this.setState({ modalOpen: false })}\n                  />\n                  <Button\n                    positive\n                    icon=\"checkmark\"\n                    labelPosition=\"right\"\n                    content=\"OK\"\n                    onClick={() => {\n                      const route = `/dashboard/${cardNumber}/${activeSelection}/${selectedYear}/${selectedMonth}`;\n\n                      this.setState({\n                        modalOpen: false,\n                      });\n\n                      history.push(route);\n                    }}\n                  />\n                </Modal.Actions>\n              </Modal>\n            </>\n          );\n        }}\n      </Fetch>\n    );\n  }\n}\n\nDataFilter.propTypes = propTypes;\nDataFilter.defaultProps = defaultProps;\n\nexport { SEARCH_TYPE_MONTH, SEARCH_TYPE_RANGE };\n","import DataFilter, { SEARCH_TYPE_MONTH, SEARCH_TYPE_RANGE } from \"./DataFilter\";\n\nexport { SEARCH_TYPE_MONTH, SEARCH_TYPE_RANGE };\nexport default DataFilter;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Icon, Grid } from \"semantic-ui-react\";\n\nexport default props => {\n  const {\n    label,\n    value,\n    extra,\n    extraIcon,\n    iconName,\n    iconColor,\n    isCustomIcon,\n    extraFooter,\n    extraFooterIcon\n  } = props;\n\n  return (\n    <Card\n      style={{\n        flex: \"1\",\n        minWidth: \"230px\",\n        maxWidth: \"250px\",\n        //border: \"none\",\n        borderRadius: \"6px\",\n        zIndex: \"0\"\n        //boxShadow: \"0 2px 2px hsla(38,16%,76%,.5)\"\n      }}>\n      <Card.Content style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\n        <Card.Description>\n          <Grid columns={1} verticalAlign=\"middle\">\n            <Grid.Row verticalAlign=\"center\" columns={2}>\n              <Grid.Column\n                style={{\n                  textAlign: \"left\",\n                  paddingLeft: \"1rem\",\n                  paddingRight: \"0\"\n                }}>\n                {isCustomIcon ? (\n                  <i\n                    style={{\n                      color: iconColor,\n                      fontSize: \"4rem\",\n                      minHeight: \"64px\"\n                    }}\n                    className={iconName}\n                  />\n                ) : (\n                  <Icon className={iconName} size=\"huge\" color={iconColor} />\n                )}\n              </Grid.Column>\n              <Grid.Column\n                style={{\n                  textAlign: \"right\",\n                  lineHeight: \"1.2\",\n                  paddingRight: \"1rem\",\n                  paddingLeft: \"0\"\n                }}>\n                <Grid.Row>\n                  <div style={{ fontSize: \"1rem\", fontWeight: \"300\" }}>\n                    {label}\n                  </div>\n                </Grid.Row>\n                <Grid.Row>\n                  <div style={{ fontWeight: \"600\", fontSize: \"2rem\" }}>\n                    {value}\n                  </div>\n                </Grid.Row>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Card.Description>\n      </Card.Content>\n      <Card.Content\n        extra\n        style={{\n          margin: \"0 15px\",\n          paddingLeft: \"0\",\n          fontWeight: \"200\",\n          fontSize: \"0.8rem\"\n        }}>\n        {extraIcon && <i className={extraIcon} />} {extra}\n        {extraFooter && (\n          <div>\n            {extraFooterIcon && <i className={extraFooterIcon} />} {extraFooter}\n          </div>\n        )}\n      </Card.Content>\n    </Card>\n  );\n};\n","import moment from 'moment';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from 'semantic-ui-react';\n\nimport Statistic from '../../styled/Statistic';\n\nconst propTypes = {};\n\nconst defaultProps = {};\n\nexport default function FilteredStats(props) {\n  const { data, loading, error } = props;\n\n  let totalAmount = 0;\n  let prevTotalAmount = 0;\n  let totalTaps = 0;\n  let prevTotalTaps = 0;\n  let totalFares = 0;\n  let prevTotalFares = 0;\n  let totalTransfers = 0;\n  let prevTotalTransfers = 0;\n  let prevLastDate = Date.now();\n  let prevFirstDate = Date.now();\n\n  let lastYearTotalAmount = 0;\n  let lastYearTotalTaps = 0;\n  let lastYearTotalFares = 0;\n  let lastYearTotalTransfers = 0;\n  let hasLastYear = false;\n\n  if (!loading && !error) {\n    totalAmount = data.data.totalAmount;\n    prevTotalAmount = data.data.prevInterval.totalAmount;\n\n    totalTaps = data.data.count.transfers + data.data.count.fares;\n    prevTotalTaps = data.data.prevInterval.count.transfers + data.data.prevInterval.count.fares;\n\n    totalFares = data.data.count.fares;\n    prevTotalFares = data.data.prevInterval.count.fares;\n\n    totalTransfers = data.data.count.transfers;\n    prevTotalTransfers = data.data.prevInterval.count.transfers;\n\n    prevLastDate = data.data.prevInterval.transactions.length\n      ? moment(\n        data.data.prevInterval.transactions[data.data.prevInterval.transactions.length - 1].date,\n      )\n        .utcOffset(0)\n        .format('DD MMM YY')\n      : null;\n    prevFirstDate = data.data.prevInterval.transactions.length\n      ? moment(data.data.prevInterval.transactions[0].date)\n        .utcOffset(0)\n        .format('MM/DD/YYYY')\n      : null;\n\n    console.log(data.data.prevInterval.transactions.length - 1);\n  }\n\n  if (!loading && !error && data.data.lastYear) {\n    hasLastYear = true;\n    lastYearTotalAmount = data.data.lastYear.totalAmount;\n    lastYearTotalFares = data.data.lastYear.count.fares;\n    lastYearTotalTransfers = data.data.lastYear.count.transfers;\n    lastYearTotalTaps = lastYearTotalFares + lastYearTotalTransfers;\n  }\n\n  return (\n    <Card.Group centered>\n      {!loading && !error && (\n        <>\n          <Statistic\n            label=\"Spent\"\n            value={`$${(totalAmount / 100).toFixed(2)}`}\n            extra={`$${Math.abs((totalAmount - prevTotalAmount) / 100).toFixed(2)} ${\n              prevLastDate ? `from period ending ${prevLastDate}` : ''\n            }`}\n            extraIcon={totalAmount - prevTotalAmount > 0 ? 'ti-arrow-up' : 'ti-arrow-down'}\n            iconName=\"ti-credit-card\"\n            isCustomIcon\n            extraFooter={\n              hasLastYear\n                ? `$${Math.abs((totalAmount - lastYearTotalAmount) / 100).toFixed(\n                  2,\n                )} from last year`\n                : null\n            }\n            extraFooterIcon={\n              hasLastYear\n                ? totalAmount - lastYearTotalAmount > 0\n                  ? 'ti-arrow-up'\n                  : 'ti-arrow-down'\n                : null\n            }\n          />\n\n          <Statistic\n            label=\"Taps\"\n            value={totalTaps}\n            extra={`${Math.abs(totalTaps - prevTotalTaps)} ${\n              prevLastDate ? `from period ending ${prevLastDate}` : ''\n            }`}\n            extraIcon={totalTaps - prevTotalTaps > 0 ? 'ti-arrow-up' : 'ti-arrow-down'}\n            iconName=\"ti-hand-drag\"\n            isCustomIcon\n            extraFooter={\n              hasLastYear ? `${Math.abs(totalTaps - lastYearTotalTaps)} from last year` : null\n            }\n            extraFooterIcon={\n              hasLastYear\n                ? totalTaps - lastYearTotalTaps > 0\n                  ? 'ti-arrow-up'\n                  : 'ti-arrow-down'\n                : null\n            }\n          />\n\n          <Statistic\n            label=\"Fares\"\n            value={totalFares}\n            extra={`${Math.abs(totalFares - prevTotalFares)} ${\n              prevLastDate ? `from period ending ${prevLastDate}` : ''\n            }`}\n            extraIcon={totalFares - prevTotalFares > 0 ? 'ti-arrow-up' : 'ti-arrow-down'}\n            iconName=\"ti-ticket\"\n            isCustomIcon\n            extraFooter={\n              hasLastYear ? `${Math.abs(totalFares - lastYearTotalFares)} from last year` : null\n            }\n            extraFooterIcon={\n              hasLastYear\n                ? totalFares - lastYearTotalFares > 0\n                  ? 'ti-arrow-up'\n                  : 'ti-arrow-down'\n                : null\n            }\n          />\n\n          <Statistic\n            label=\"Transfers\"\n            value={totalTransfers}\n            extra={`${Math.abs(totalTransfers - prevTotalTransfers)} ${\n              prevLastDate ? `from period ending ${prevLastDate}` : ''\n            }`}\n            extraIcon={totalTransfers - prevTotalTransfers > 0 ? 'ti-arrow-up' : 'ti-arrow-down'}\n            iconName=\"ti-vector\"\n            isCustomIcon\n            extraFooter={\n              hasLastYear\n                ? `${Math.abs(totalTransfers - lastYearTotalTransfers)} from last year`\n                : null\n            }\n            extraFooterIcon={\n              hasLastYear\n                ? totalTransfers - lastYearTotalTransfers > 0\n                  ? 'ti-arrow-up'\n                  : 'ti-arrow-down'\n                : null\n            }\n          />\n        </>\n      )}\n    </Card.Group>\n  );\n}\n\nFilteredStats.propTypes = propTypes;\nFilteredStats.defaultProps = defaultProps;\n","import FilteredStats from \"./FilteredStats\";\n\nexport default FilteredStats;\n","import moment from \"moment\";\nimport React from \"react\";\nimport { Segment, Header, Icon } from \"semantic-ui-react\";\nimport styled from \"styled-components\";\nimport {\n  ResponsiveContainer,\n  CartesianGrid,\n  Line,\n  LineChart,\n  XAxis,\n  YAxis,\n  Legend,\n  Tooltip\n} from \"recharts\";\n\nimport { totalDailyTransactionBreakdown } from \"../../lib/transactions\";\n\nconst TTContainer = styled.div`\n  position: relative;\n  background: rgba(40, 42, 48, 0.7);\n  color: lightgrey;\n  border: 1px solid lightgrey;\n  border-radius: 0.25rem;\n  min-width: 400px;\n  padding: 30px 50px 40px 50px;\n  box-shadow: 0px 1px 2px 0 rgba(34, 36, 38, 0.15);\n  z-index: 1000;\n\n  header {\n    background: rgba(40, 42, 48, 0.8);\n    bottom: 0;\n    left: 0;\n    margin: 0;\n    padding: 0;\n    position: absolute;\n    width: 100%;\n    border-radius: 0 0 0.25rem 0.25rem;\n\n    h2 {\n      font-size: 1.1rem;\n      text-align: center;\n      font-weight: bold;\n      padding: 10px 5px;\n    }\n  }\n\n  footer {\n    margin: 20px 0;\n  }\n\n  h3 {\n    font-size: 1rem;\n    font-weight: bold;\n    padding: 0;\n    margin: 0;\n    margin-bottom: 5px;\n    margin-top: 15px;\n  }\n`;\n\nconst TTItem = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-between;\n  align-items: center;\n  padding-bottom: 5px;\n\n  p {\n    font-weight: bold;\n  }\n\n  .count {\n    text-align: right;\n    padding: 0;\n    margin: 0;\n\n    .breakdown {\n      padding: 0;\n      margin: 0;\n      margin-top: -5px;\n      margin-bottom: -8px;\n      font-size: 0.7rem;\n    }\n  }\n\n  &.trip-count {\n    align-items: flex-start;\n  }\n`;\n\nconst TTLocationList = styled.ul`\n  display: block;\n  text-decoration: none;\n  list-style: none;\n  list-style-type: none;\n  list-style-position: outside;\n  margin: 0;\n  padding: 0;\n`;\n\nconst LegendDot = styled.div`\n  background: ${props => props.color};\n  max-height: 10px;\n  max-width: 10px;\n  min-height: 10px;\n  min-width: 10px;\n  margin-right: 15px;\n  border-radius: 100%;\n`;\n\nconst TTLocationItem = styled.li`\n  font-size: 0.8rem;\n  list-style: none;\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst CustomizedAxisTick = props => {\n  const { x, y, stroke, payload } = props;\n\n  return (\n    <g transform={`translate(${x},${y})`}>\n      <text\n        x={0}\n        y={0}\n        dy={16}\n        textAnchor=\"end\"\n        fill=\"#666\"\n        transform=\"rotate(-35)\">\n        {payload.value}\n      </text>\n    </g>\n  );\n};\n\nconst CustomTooltip = ({ payload, label, active }) => {\n  if (active) {\n    const XAxis = payload[0];\n    const YAxis = payload[1];\n\n    return (\n      <TTContainer>\n        <header>\n          <h2>{`${XAxis.payload.dayOfWeek}, ${XAxis.payload.month} ${\n            XAxis.payload.date\n          }, ${XAxis.payload.year}`}</h2>\n        </header>\n        <TTItem className=\"trip-count\">\n          <TTItem>\n            <LegendDot color={XAxis.color} />\n            <p>Taps</p>\n          </TTItem>\n          <div className=\"count\">\n            <div>{XAxis.payload.trips}</div>\n            <div className=\"breakdown\">\n              {`${\n                XAxis.payload.trips > 0\n                  ? `${XAxis.payload.fares.count} Fare${\n                      XAxis.payload.fares.count === 1 ? \"\" : \"s\"\n                    } | ${XAxis.payload.transfers.count} Transfer${\n                      XAxis.payload.transfers.count === 1 ? \"\" : \"s\"\n                    }`\n                  : \"\"\n              }`}\n            </div>\n          </div>\n        </TTItem>\n        <TTItem>\n          <TTItem>\n            <LegendDot color={YAxis.color} />\n            <p>Spent</p>\n          </TTItem>\n          <div>${XAxis.payload.amount}</div>\n        </TTItem>\n\n        <footer>\n          {XAxis.payload.fares.locations.length > 0 && (\n            <>\n              <h3 className=\"header\">Fares</h3>\n              <TTLocationList>\n                {XAxis.payload.fares.locations.map(item => (\n                  <TTItem>\n                    <TTLocationItem>{item.location}</TTLocationItem>\n                    <TTLocationItem>\n                      {moment(item.time)\n                        .utcOffset(0)\n                        .format(\"hh:mm A\")}\n                    </TTLocationItem>\n                  </TTItem>\n                ))}\n              </TTLocationList>\n            </>\n          )}\n\n          {XAxis.payload.transfers.locations.length > 0 && (\n            <>\n              <h3 className=\"header\">Transfers</h3>\n              <TTLocationList>\n                {XAxis.payload.transfers.locations.map(item => (\n                  <TTItem>\n                    <TTLocationItem>{item.location}</TTLocationItem>\n                    <TTLocationItem>\n                      {moment(item.time)\n                        .utcOffset(0)\n                        .format(\"hh:mm A\")}\n                    </TTLocationItem>\n                  </TTItem>\n                ))}\n              </TTLocationList>\n            </>\n          )}\n        </footer>\n      </TTContainer>\n    );\n  }\n\n  return null;\n};\n\nexport default props => {\n  const { data } = props;\n  const { transactions } = data;\n\n  const breakdown = totalDailyTransactionBreakdown(transactions, true);\n\n  if (!breakdown.dataset) {\n    return (\n      <Segment placeholder>\n        <Header icon>\n          <Icon name=\"calendar times outline\" />\n          No transactions for this period.\n        </Header>\n      </Segment>\n    );\n  }\n\n  return (\n    <div>\n      <ResponsiveContainer height={300} style={{ background: \"#444\" }}>\n        <LineChart\n          margin={{\n            top: 20,\n            right: 30,\n            left: 0,\n            bottom: 0\n          }}\n          data={breakdown.dataset}>\n          <CartesianGrid vertical={false} stroke=\"#EBEBEB\" />\n\n          <Line\n            dataKey=\"trips\"\n            type=\"monotone\"\n            stroke=\"#3333cc\"\n            strokeWidth={2}\n            dot={{\n              //   stroke: \"white\",\n              //   strokeWidth: 2,\n              //   fill: \"#3333cc\",\n              r: 0\n            }}\n          />\n          <Line\n            dataKey=\"amount\"\n            type=\"monotone\"\n            stroke=\"#3BB4E9\"\n            strokeWidth={2}\n            dot={{\n              //   stroke: \"white\",\n              //   strokeWidth: 2,\n              //   fill: \"#3BB4E9\",\n              r: 0\n            }}\n          />\n          <YAxis\n            allowDecimals={false}\n            type=\"number\"\n            domain={breakdown.domain}\n            padding={{ left: 50 }}\n            dataKey=\"amount\"\n            tickLine={false}\n            axisLine={false}\n            stroke=\"#C4C4C4\"\n          />\n          <XAxis\n            dataKey=\"label\"\n            //tickMargin={15}\n            tickLine={false}\n            axisLine={false}\n            tickSize={0}\n            minTickGap={0}\n            height={60}\n            interval={breakdown.dataset.length > 100 ? 10 : 1}\n            tick={<CustomizedAxisTick />}\n            stroke=\"#C4C4C4\"\n          />\n          <Tooltip\n            wrapperStyle={{ zIndex: \"1000\" }}\n            content={<CustomTooltip />}\n          />\n          <Legend iconType=\"circle\" />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n","import moment from \"moment\";\n\nfunction totalDailyTransactionBreakdown(\n  transactions,\n  includeAmountInDomain = false\n) {\n  function getDates(start, stop) {\n    const dateObj = {};\n    let currentDate = moment(start);\n    const stopDate = moment(stop);\n\n    while (currentDate <= stopDate) {\n      const formattedDate = currentDate.format(\"DD/MM/YYYY\");\n\n      dateObj[formattedDate] = {\n        amount: 0,\n        trips: 0,\n        transfers: 0,\n        fares: 0,\n        transferLocations: [],\n        fareLocations: []\n      };\n      currentDate = currentDate.add(1, \"days\");\n    }\n\n    return dateObj;\n  }\n\n  if (transactions.length === 0) {\n    const currDate = moment();\n\n    return {\n      date: currDate.format(\"DD\"),\n      dayOfWeek: currDate.format(\"dddd\"),\n      amount: \"0.00\",\n      trips: 0\n    };\n  }\n\n  const domain = [0, 0];\n  const startDate = moment(transactions[0].date)\n    .utcOffset(0)\n    .format(\"YYYY-MM-DD\");\n  const endDate = moment(transactions[transactions.length - 1].date)\n    .utcOffset(0)\n    .format(\"YYYY-MM-DD\");\n\n  const dataset = getDates(startDate, endDate);\n\n  transactions.forEach(item => {\n    const date = moment(item.date)\n      .utcOffset(0)\n      .format(\"DD/MM/YYYY\");\n\n    const amount = parseFloat(item.amount);\n\n    if (item.type === \"Transfer\") {\n      dataset[date].transferLocations.push({\n        location: item.location,\n        time: item.date\n      });\n    }\n\n    if (item.type === \"Fare Payment\" || item.type === \"Transit Pass Payment\") {\n      dataset[date].fareLocations.push({\n        location: item.location,\n        time: item.date\n      });\n    }\n\n    dataset[date].amount += amount;\n    dataset[date].trips += 1;\n    dataset[date].transfers += item.type === \"Transfer\" ? 1 : 0;\n    dataset[date].fares +=\n      item.type === \"Fare Payment\" || item.type === \"Transit Pass Payment\"\n        ? 1\n        : 0;\n  });\n\n  const breakdown = Object.keys(dataset).map(key => {\n    const currDate = moment(key, \"DD/MM/YYYY\");\n\n    if (includeAmountInDomain) {\n      domain[1] =\n        domain[1] < dataset[key].amount\n          ? (dataset[key].amount / 100).toFixed(2)\n          : domain[1];\n    }\n\n    domain[1] = domain[1] < dataset[key].trips ? dataset[key].trips : domain[1];\n\n    return {\n      label: `${currDate.format(\"MMM\")} ${currDate.format(\"DD\")}`,\n      date: currDate.format(\"DD\"),\n      dayOfWeek: currDate.format(\"dddd\"),\n      month: currDate.format(\"MMMM\"),\n      year: currDate.format(\"YYYY\"),\n      amount: (dataset[key].amount / 100).toFixed(2),\n      trips: dataset[key].trips,\n      transfers: {\n        count: dataset[key].transfers,\n        locations: dataset[key].transferLocations\n      },\n      fares: {\n        count: dataset[key].fares,\n        locations: dataset[key].fareLocations\n      }\n    };\n  });\n\n  return { dataset: breakdown, domain };\n}\n\nfunction groupByDate(transactions) {\n  const dataset = {};\n\n  transactions.forEach(transaction => {\n    const date = moment(transaction.date).format(\"MM-DD-YYYY\");\n\n    if (dataset[date]) {\n      dataset[date].push(transaction);\n    } else {\n      dataset[date] = [transaction];\n    }\n  });\n\n  return dataset;\n}\n\nexport { totalDailyTransactionBreakdown, groupByDate };\n","import React from \"react\";\nimport { Segment, Message } from \"semantic-ui-react\";\n\nimport MonthlyStats from \"./MonthlyStats\";\n\nimport { getMonthNameFromNum } from \"../../lib/date\";\nimport { NONAME } from \"dns\";\n\nconst panes = [\n  { menuItem: \"This Month\" },\n  { menuItem: \"Last Month\" },\n  { menuItem: { icon: \"calendar alternate outline\" } }\n];\n\nfunction getFareTypeCount(data) {\n  const fareTypeCount = Object.keys(data.count).map(key => {\n    const typeName = key;\n\n    return {\n      name: typeName[0].toUpperCase() + typeName.substring(1),\n      count: data.count[typeName]\n    };\n  });\n\n  return fareTypeCount;\n}\n\nexport default function MonthlyOverview(props) {\n  const { year, month, data, error, loading } = props;\n  console.log(\"MonthlyOverview:\", props);\n\n  return (\n    <>\n      <Segment\n        style={{\n          minHeight: \"250px\",\n          padding: 0,\n          boxShadow: \"none\",\n          border: \"none\"\n        }}\n        loading={loading}>\n        {!loading && !error && (\n          <MonthlyStats\n            month={getMonthNameFromNum(month)}\n            year={year}\n            data={data.data}\n          />\n        )}\n        {!loading && error && <Message error>{error.message}</Message>}\n      </Segment>\n    </>\n  );\n}\n","function getMonthNameFromNum(num) {\n  const months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  return months[num];\n}\n\nexport { getMonthNameFromNum };\n","import moment from \"moment\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Segment, Feed, Icon, Label } from \"semantic-ui-react\";\nimport { groupByDate } from \"../../../lib/transactions\";\n\nconst propTypes = {};\nconst defaultProps = {};\n\nconst Timeline = styled.li`\n  position: relative;\n\n  span.dot {\n    &::after {\n      content: \"\";\n      background: #fff;\n      width: 13px;\n      height: 13px;\n      border-radius: 50%;\n      border: 3px solid ${props => props.color || \"blue\"};\n      position: absolute;\n      top: 0;\n      left: -5px;\n    }\n  }\n\n  &:last-of-type {\n    section::before {\n      border-left: none;\n    }\n  }\n`;\n\nconst TimelineLine = styled.section`\n  &::before {\n    content: \"\";\n    width: 1px;\n    height: 100%;\n    position: absolute;\n    border-left: 3px solid ${props => props.color || \"blue\"};\n  }\n`;\n\nconst TimelineItem = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n\n  position: relative;\n  margin-left: 10px;\n  padding: 0 0 10px 10px;\n`;\n\nconst TimelineContainer = styled.ul`\n  list-style: none;\n  margin: 0;\n  margin-top: 15px;\n  margin-bottom: 40px;\n  list-style: none;\n  position: relative;\n  padding: 1px 100px;\n  color: #000;\n  font-size: 13px;\n`;\n\nconst TimelineTime = styled.div`\n  position: absolute;\n  left: ${props => (props.AM === true ? \"-70px\" : \"-69px\")};\n  font-weight: 900;\n  top: -2px;\n  color: ${props => props.color};\n`;\n\nconst TimelineHeader = styled.div`\n  margin-left: 120px;\n`;\n\nconst TimelineLocation = styled.div`\n  border-top: 1px solid lightgrey;\n  margin-top: 8px;\n  padding-top: 5px;\n  font-weight: bold;\n`;\n\nconst TimelineInfoContainer = styled.div`\n  /* position: absolute;\n  top: 0;\n  left: 100px; */\n`;\n\nconst TimelineInfo = styled.div`\n  position: relative;\n  border: 1px solid lightgrey;\n  width: 335px;\n  border-radius: 0.25rem;\n  padding: 10px;\n  margin-left: 15px;\n\n  &:hover {\n    box-shadow: 0px 1px 2px 0 rgba(34, 36, 38, 0.15);\n  }\n\n  &::before {\n    position: absolute;\n    content: \"\";\n\n    background: #fff;\n    top: 5px;\n    left: -1px;\n    width: 10px;\n    height: 10px;\n    border-left: 1px solid lightgrey;\n    border-bottom: 1px solid lightgrey;\n\n    transform: translateX(-50%) rotate(45deg);\n  }\n`;\n\nexport default function RecentActivity(props) {\n  const { data, loading, error } = props;\n  let dataset = [];\n\n  if (!loading && !error) {\n    dataset = groupByDate(data.data.transactions);\n  }\n\n  console.log(dataset);\n  const FeedItems = () => {\n    return Object.keys(dataset)\n      .sort((a, b) => (a < b ? 1 : -1))\n      .map(key => (\n        <>\n          <TimelineHeader>\n            <Label>\n              {moment(key)\n                .utcOffset(0)\n                .format(\"D MMM YYYY\")}\n            </Label>\n          </TimelineHeader>\n          <TimelineContainer>\n            {dataset[key].map(item => (\n              <Timeline color={item.type === \"Transfer\" ? \"orange\" : \"blue\"}>\n                <TimelineLine\n                  color={item.type === \"Transfer\" ? \"orange\" : \"blue\"}>\n                  <span className=\"dot\" />\n                  <TimelineTime\n                    AM={\n                      moment(item.date)\n                        .utcOffset(0)\n                        .format(\"A\") === \"AM\"\n                        ? true\n                        : false\n                    }\n                    color={item.type === \"Transfer\" ? \"orange\" : \"blue\"}>\n                    {moment(item.date)\n                      .utcOffset(0)\n                      .format(\"hh:mm A\")}\n                  </TimelineTime>\n                  <TimelineItem>\n                    <div>\n                      <Label\n                        color={item.type === \"Transfer\" ? \"orange\" : \"blue\"}>\n                        {item.type === \"Transfer\"\n                          ? \"Transfer\".toUpperCase()\n                          : \"Fare Paid\".toUpperCase()}\n                      </Label>\n                    </div>\n                    <TimelineInfoContainer>\n                      <TimelineInfo>\n                        <div\n                          style={{\n                            display: \"flex\",\n                            flexFlow: \"row nowrap\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-between\"\n                          }}>\n                          <Label color=\"green\">{item.cardNumber}</Label>\n                          <div>\n                            {item.type === \"Transfer\"\n                              ? \"\"\n                              : `$${(\n                                  Math.round(item.amount * 100) / 10000\n                                ).toFixed(2)}`}\n                          </div>\n                        </div>\n                        <TimelineLocation>{`${\n                          item.location\n                        }`}</TimelineLocation>\n                      </TimelineInfo>\n                    </TimelineInfoContainer>\n                  </TimelineItem>\n                </TimelineLine>\n              </Timeline>\n            ))}\n          </TimelineContainer>\n        </>\n      ));\n  };\n  return (\n    <Segment\n      //   style={{ minHeight: \"450px\", maxHeight: \"450px\", overflowY: \"auto\" }}\n      vertical>\n      {!loading && !error && FeedItems()}\n    </Segment>\n  );\n}\n\nRecentActivity.propTypes = propTypes;\nRecentActivity.defaultProps = defaultProps;\n","import RecentActivity from \"./RecentActivity\";\n\nexport default RecentActivity;\n","import moment from \"moment\";\nimport React from \"react\";\nimport { Table, Header } from \"semantic-ui-react\";\n\nimport PropTypes from \"prop-types\";\n\nconst propTypes = {};\n\nconst defaultProps = {};\n\nfunction notMutatedSort(array) {\n  const newArray = array.slice(0);\n\n  return newArray.sort((a, b) =>\n    Date.parse(a.date) > Date.parse(b.date) ? -1 : 1\n  );\n}\n\nexport default function TapList(props) {\n  const { data, loading, error } = props;\n  let tapRows = [];\n\n  if (loading) return <div>Loading...</div>;\n\n  if (!loading && !error && data.data) {\n    const sortedTapRows = notMutatedSort(data.data.transactions);\n    tapRows = sortedTapRows.map((item, index) => (\n      <Table.Row positive={item.type === \"Transfer\"} key={item.id}>\n        <Table.Cell>{index + 1}</Table.Cell>\n        <Table.Cell>\n          {moment(item.date)\n            .utcOffset(0)\n            .format(\"dddd, MMMM DD, YYYY\")}\n        </Table.Cell>\n        <Table.Cell>\n          {moment(item.date)\n            .utcOffset(0)\n            .format(\"hh:mm A\")}\n        </Table.Cell>\n        <Table.Cell>{item.location}</Table.Cell>\n        <Table.Cell>{item.agency}</Table.Cell>\n        <Table.Cell>{item.type}</Table.Cell>\n        <Table.Cell>\n          {(Math.round(item.amount * 100) / 10000).toFixed(2)}\n        </Table.Cell>\n      </Table.Row>\n    ));\n  }\n  return (\n    <>\n      <Header as=\"h2\">\n        Tap History\n        <Header.Subheader>Some kind of text will go here</Header.Subheader>\n      </Header>\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>#</Table.HeaderCell>\n            <Table.HeaderCell>Date</Table.HeaderCell>\n            <Table.HeaderCell>Time</Table.HeaderCell>\n            <Table.HeaderCell>Location</Table.HeaderCell>\n            <Table.HeaderCell>Agency</Table.HeaderCell>\n            <Table.HeaderCell>Type</Table.HeaderCell>\n            <Table.HeaderCell>Amount</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>{tapRows}</Table.Body>\n      </Table>\n    </>\n  );\n}\n\nTapList.propTypes = propTypes;\nTapList.defaultProps = defaultProps;\n","import TapList from \"./TapList\";\n\nexport default TapList;\n","import moment from 'moment';\nimport React from 'react';\nimport {\n  ResponsiveContainer, PieChart, Pie, Tooltip, Cell, Legend,\n} from 'recharts';\nimport PropTypes from 'prop-types';\nimport { Header, Divider } from 'semantic-ui-react';\n\nconst propTypes = {};\nconst defaultProps = {};\nconst COLORS = [\n  '#3F69AA',\n  '#006E6D',\n  '#E8B5CE',\n  '#FFD662',\n  '#8D9440',\n  '#C62168',\n  '#6B5B95',\n  '#FE840E',\n  '#BFD641',\n  '#6F9FD8',\n];\n\nfunction orderLocationByMostTaps(dataset) {\n  const result = {};\n\n  dataset.forEach(item => {\n    if (item.location === '0') return;\n\n    if (result[item.location]) {\n      const prevLastVisited = Date.parse(result[item.location].lastVisited);\n      const currLastVisited = item.date;\n\n      result[item.location].count += 1;\n      result[item.location].amount += item.amount;\n      result[item.location].transfers += item.type === 'Transfer' ? 1 : 0;\n      result[item.location].fares\n        += item.type === 'Fare Payment' || item.type === 'Transit Pass Payment' ? 1 : 0;\n\n      if (Date.parse(item.date) > prevLastVisited) {\n        result[item.location].lastVisited = currLastVisited;\n      }\n    } else {\n      result[item.location] = {\n        count: 1,\n        amount: item.amount,\n        lastVisited: item.date,\n        transfers: item.type === 'Transfer' ? 1 : 0,\n        fares: item.type === 'Fare Payment' || item.type === 'Transit Pass Payment' ? 1 : 0,\n      };\n    }\n  });\n\n  const resultArray = Object.keys(result)\n    .map(key => ({\n      location: key,\n      percent: Math.round((result[key].count / dataset.length) * 100),\n      ...result[key],\n    }))\n    .filter(item => item.count > 1);\n\n  const truncatedResults = resultArray.sort((a, b) => (a.count > b.count ? -1 : 1)).slice(0, 10);\n\n  return truncatedResults;\n}\n\nconst TopTapOrigins = props => {\n  const { data, error, loading } = props;\n  let dataset = [];\n  let range = '';\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!loading && !error) {\n    dataset = orderLocationByMostTaps(data.data.transactions);\n    range = data.data.transactions.length === 0\n      ? 'No Transactions For This Period'\n      : `${moment(data.data.transactions[0].date).format('MMMM DD YYYY')} - ${moment(\n        data.data.transactions[data.data.transactions.length - 1].date,\n      ).format('MMMM DD YYYY')}`;\n    console.log(dataset);\n  }\n\n  return (\n    <>\n      <Divider horizontal>\n        <Header as=\"h3\">\n          Most Active Locations\n          <Header.Subheader>{range}</Header.Subheader>\n        </Header>\n      </Divider>\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <PieChart>\n          <Pie data={dataset} fill=\"#8884d8\" dataKey=\"count\">\n            {dataset.map((entry, index) => (\n              <Cell key={`cell-${entry.id}`} fill={COLORS[index]} />\n            ))}\n          </Pie>\n          <Legend\n            iconType=\"circle\"\n            verticalAlign=\"bottom\"\n            payload={dataset.map((item, index) => ({\n              value: item.location,\n              type: 'circle',\n              id: item.id,\n              color: COLORS[index],\n            }))}\n          />\n          <Tooltip />\n        </PieChart>\n      </ResponsiveContainer>\n    </>\n  );\n};\n\nTopTapOrigins.propTypes = propTypes;\nTopTapOrigins.defaultProps = defaultProps;\n\nexport default TopTapOrigins;\n","import TopTapOrigins from \"./TopTapOrigins\";\n\nexport default TopTapOrigins;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Bar = styled.div`\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 40px;\n  z-index: 11;\n`;\n\nexport default props => <Bar>{props.children}</Bar>;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Header, Button, Icon } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nimport HeaderBar from './styled/HeaderBar';\nimport { FlexRow } from './Page';\n\nconst Flex = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  padding-top: 10px;\n  background: #ffffff;\n`;\n\nconst LinkDiv = styled.div`\n  padding: 0 10px;\n`;\n\nconst Index = props => (\n  <Container>\n    <div style={{ position: 'relative', maxHeight: '60px' }}>\n      <HeaderBar>\n        <FlexRow justify=\"space-around\" align=\"center\" padding=\"0 0 0 10px\">\n          <Header style={{ width: '100%', marginBottom: '0' }} as=\"h1\">\n            Presto Analytics\n          </Header>\n          <FlexRow justify=\"flex-end\" padding=\"0 10px 0 0\">\n            <LinkDiv>\n              <Link to=\"/login\">Log In</Link>\n            </LinkDiv>\n            {' | '}\n            <LinkDiv>\n              <Link to=\"/register\">Sign Up</Link>\n            </LinkDiv>\n          </FlexRow>\n        </FlexRow>\n      </HeaderBar>\n    </div>\n    <Flex>{props.children}</Flex>\n  </Container>\n);\n\nexport default Index;\n","import React from \"react\";\nimport Fetch from \"react-fetch-component\";\nimport PropTypes from \"prop-types\";\nimport { Loader, Dimmer } from \"semantic-ui-react\";\n\nimport API from \"../lib/api\";\n\nconst AuthUser = props => (\n  <Fetch\n    url={`${API.root}${API.currentUser.endpoint}`}\n    options={API.send(API.currentUser.method)}>\n    {payload => {\n      if (payload.loading) {\n        return (\n          <Dimmer active>\n            <Loader />\n          </Dimmer>\n        );\n      }\n\n      return props.children(payload);\n    }}\n  </Fetch>\n);\n\nAuthUser.propTypes = {\n  children: PropTypes.func.isRequired\n};\n\nexport default AuthUser;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Link, Redirect } from \"react-router-dom\";\nimport { Input, Icon, Button, Form, Message } from \"semantic-ui-react\";\nimport Fetch from \"react-fetch-component\";\n\nimport API from \"../lib/api\";\nimport { UserContext } from \"./Page\";\n\nexport default class Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  saveToState = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    const { email, password } = this.state;\n    return (\n      <UserContext.Consumer>\n        {ctx => {\n          return (\n            <Fetch\n              manual\n              url={`${API.root}${API.login}`}\n              options={API.send({ email, password })}>\n              {({ fetch, data, loading, error }) => {\n                if (\n                  (data && data.status === \"success\") ||\n                  (ctx.data && ctx.data.user)\n                ) {\n                  return <Redirect to=\"/dashboard\" />;\n                }\n\n                return (\n                  <div>\n                    {error && (\n                      <Message error>\n                        <Message.Header>An error occured</Message.Header>\n                        {error.message}\n                      </Message>\n                    )}\n                    <div style={{ minWidth: \"35%\" }}>\n                      <Message\n                        attached\n                        header=\"Log in\"\n                        content=\"Enter your email address and password to log in to your account\"\n                      />\n                      <Form className=\"attached fluid segment\">\n                        <Form.Input\n                          fluid\n                          iconPosition=\"left\"\n                          placeholder=\"Email\">\n                          <Icon name=\"at\" />\n                          <input\n                            disabled={loading}\n                            type=\"text\"\n                            name=\"email\"\n                            onChange={this.saveToState}\n                            value={email}\n                          />\n                        </Form.Input>\n                        <Form.Input\n                          fluid\n                          iconPosition=\"left\"\n                          placeholder=\"Password\">\n                          <Icon name=\"key\" />\n                          <input\n                            disabled={loading}\n                            type=\"password\"\n                            name=\"password\"\n                            onChange={this.saveToState}\n                            value={password}\n                          />\n                        </Form.Input>\n\n                        <div style={{ textAlign: \"right\" }}>\n                          <Button\n                            style={{ marginRight: 0 }}\n                            positive\n                            labelPosition=\"right\"\n                            icon=\"chevron circle right\"\n                            content=\"Login\"\n                            disabled={\n                              loading || (!email.length || !password.length)\n                            }\n                            loading={loading}\n                            onClick={() => {\n                              fetch();\n                              this.setState({ email: \"\", password: \"\" });\n                            }}\n                          />\n                        </div>\n                      </Form>\n                      <Message attached=\"bottom\" warning>\n                        <Icon name=\"help\" />\n                        Don't have an account?\n                        <Link to=\"/register\"> Register</Link>\n                        &nbsp;instead.\n                      </Message>\n                    </div>\n                  </div>\n                );\n              }}\n            </Fetch>\n          );\n        }}\n      </UserContext.Consumer>\n    );\n  }\n}\n","import API from \"../api\";\n\nasync function sendRequest(fetchHandler, path, method, opts = {}) {\n  const ROOT_URL = `${API.root}`;\n  const headers = Object.assign({}, opts.headers || {}, {\n    \"Content-Type\": \"application/json; charset=UTF-8\"\n  });\n\n  const response = await fetchHandler(\n    `${ROOT_URL}${path}`,\n    Object.assign({ method, credentials: \"include\" }, opts, {\n      headers,\n      body: JSON.stringify(opts.body)\n    })\n  );\n\n  const data = await response.json();\n\n  // commented this out because I don't know how necessary it is.\n  // the logic behind it was to detect errors such as not logged in, etc. and have special\n  // error handling for them on the FE, but it just causes crashes and I might\n  // be able to do this better without having it. Keeping it here for now as a TODO reminder.\n\n  // if (data.error) {\n  //   throw new Error(data.error);\n  // }\n\n  return data;\n}\n\nconst sendRequestWrapper = fetchHandler => (path, method, opts) =>\n  sendRequest(fetchHandler, path, method, opts);\n\nexport default sendRequestWrapper(fetch);\n","import API from '../api';\n\nasync function logout(requestHandler) {\n  const request = await requestHandler(API.logout.endpoint, API.logout.method);\n\n  return request;\n}\n\nasync function deleteAccount(requestHandler) {\n  const request = await requestHandler(API.deleteAccount.endpoint, API.deleteAccount.method, {\n    body: { verify: 'yes' },\n  });\n\n  return request;\n}\n\nasync function updateUserDetails(requestHandler, userId, details = {}) {\n  const request = await requestHandler(\n    API.updateAccountDetails.endpoint(userId),\n    API.updateAccountDetails.method,\n    {\n      body: {\n        ...details,\n      },\n    },\n  );\n\n  return request;\n}\n\nexport { logout, deleteAccount, updateUserDetails };\n","import API from '../api';\n\nasync function prestoLogin(requestHandler, username, password) {\n  const response = await requestHandler(API.prestoLogin.endpoint, API.prestoLogin.method, {\n    body: { username, password },\n  });\n\n  return response;\n}\n\nasync function prestoIsLoggedIn(requestHandler) {\n  const response = await requestHandler(API.prestoCheckLogin.endpoint, API.prestoCheckLogin.method);\n\n  return response;\n}\n\nexport { prestoLogin, prestoIsLoggedIn };\n","import API from '../api';\n\nasync function updateBudget(requestHandler, body = {}) {\n  const request = await requestHandler(API.updateBudget.endpoint, API.updateBudget.method, {\n    body: {\n      ...body,\n    },\n  });\n\n  return request;\n}\n\nexport { updateBudget };\n","import API from '../api';\n\nasync function me(requestHandler) {\n  const request = await requestHandler(API.currentUser.endpoint, API.currentUser.method);\n\n  return request;\n}\n\nexport default me;\n","import sendRequest from './sendRequest';\nimport { logout, deleteAccount, updateUserDetails } from './user';\nimport { prestoLogin, prestoIsLoggedIn } from './presto';\nimport { updateBudget } from './budget';\nimport me from './me';\n\nconst apiHandlerWrapper = requestHandler => ({\n  logout: () => logout(requestHandler),\n  deleteAccount: () => deleteAccount(requestHandler),\n  prestoLogin: (username, password) => prestoLogin(requestHandler, username, password),\n  prestoIsLoggedIn: () => prestoIsLoggedIn(requestHandler),\n  updateBudget: body => updateBudget(requestHandler, body),\n  updateUserDetails: (userId, details) => updateUserDetails(requestHandler, userId, details),\n  me: () => me(requestHandler),\n});\n\nexport default apiHandlerWrapper(sendRequest);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport {\n  Button, Header, Icon, Popup, Form, Segment, Grid, Message,\n} from 'semantic-ui-react';\n\nimport requestApi from '../lib/requestApi';\n\nclass AccountSettings extends Component {\n  static propTypes = {\n    budget: PropTypes.shape({\n      monthlyPassCost: PropTypes.string,\n      fareCost: PropTypes.string,\n    }),\n    user: PropTypes.shape({\n      firstName: PropTypes.string.isRequired,\n      lastName: PropTypes.string.isRequired,\n      email: PropTypes.string.isRequired,\n    }).isRequired,\n  };\n\n  static defaultProps = {\n    budget: PropTypes.shape({\n      monthlyPassCost: '146.25',\n      fareCost: '3.00',\n    }),\n  };\n\n  state = {\n    firstName: this.props.props.data.user.firstName,\n    lastName: this.props.props.data.user.lastName,\n    email: this.props.props.data.user.email,\n    monthlyPassCost: this.props.props.data.budget\n      ? this.props.props.data.budget.monthlyPassCost\n      : 0,\n    fareCost: this.props.props.data.budget ? this.props.props.data.budget.fareCost : 0,\n    updateMessage: '',\n  };\n\n  handleFieldChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleDeleteAccount = async () => {\n    const response = await requestApi.deleteAccount();\n    if (response.status === 'success') {\n      this.props.history.push('/login');\n    }\n  };\n\n  handleUpdateUserDetails = async userId => {\n    const { firstName, lastName, email } = this.state;\n\n    const userDetails = {\n      firstName,\n      lastName,\n      email,\n    };\n\n    const response = await requestApi.updateUserDetails(userId, userDetails);\n\n    if (response.status === 'success') {\n      this.setState({ updateMessage: 'Account details successfully updated.' });\n    }\n  };\n\n  handleUpdateBudgetDetails = async () => {\n    const { monthlyPassCost, fareCost } = this.state;\n\n    const budgetDetails = {\n      monthlyPassCost,\n      fareCost,\n    };\n\n    const response = await requestApi.updateBudget(budgetDetails);\n\n    if (response.status === 'success') {\n      this.setState({ updateMessage: 'Budget details successfully updated.' });\n    }\n  };\n\n  render() {\n    const {\n      firstName, lastName, email, monthlyPassCost, fareCost, updateMessage,\n    } = this.state;\n\n    const { id } = this.props.props.data.user;\n\n    return (\n      <div>\n        <Header as=\"h2\">\n          Account Settings\n          <Header.Subheader>Manage your account settings</Header.Subheader>\n        </Header>\n\n        {updateMessage && (\n          <Message positive header=\"Account Details Updated\" content={updateMessage} />\n        )}\n\n        <Header as=\"h3\" attached=\"top\">\n          <Icon name=\"user\" />\n          Personal Information\n        </Header>\n\n        <Segment attached>\n          <Form>\n            <Form.Group widths=\"equal\">\n              <Form.Field>\n                <label htmlFor=\"firstName\">\n                  First Name\n                  <input\n                    id=\"firstName\"\n                    placeholder=\"First Name\"\n                    value={firstName}\n                    name=\"firstName\"\n                    onChange={this.handleFieldChange}\n                  />\n                </label>\n              </Form.Field>\n              <Form.Field>\n                <label htmlFor=\"lastName\">\n                  Last Name\n                  <input\n                    id=\"lastName\"\n                    placeholder=\"Last Name\"\n                    value={lastName}\n                    name=\"lastName\"\n                    onChange={this.handleFieldChange}\n                  />\n                </label>\n              </Form.Field>\n            </Form.Group>\n            <Form.Group widths=\"equal\">\n              <Form.Field>\n                <label htmlFor=\"email\">\n                  Email\n                  <input\n                    id=\"email\"\n                    placeholder=\"Email\"\n                    value={email}\n                    name=\"email\"\n                    onChange={this.handleFieldChange}\n                  />\n                </label>\n              </Form.Field>\n              <Form.Field>\n                <label htmlFor=\"password\">\n                  Password\n                  <input id=\"password\" placeholder=\"Password\" onChange={this.handleFieldChange} />\n                </label>\n              </Form.Field>\n            </Form.Group>\n            <Button positive onClick={() => this.handleUpdateUserDetails(id)}>\n              Save\n            </Button>\n          </Form>\n        </Segment>\n\n        <Header as=\"h3\" attached=\"top\">\n          <Icon name=\"bus\" />\n          Transit Costs\n        </Header>\n        <Segment attached>\n          <Form>\n            <Form.Group widths=\"equal\">\n              <Form.Field>\n                <label htmlFor=\"monthlyPassCost\">\n                  Monthly Pass Cost\n                  <input\n                    type=\"number\"\n                    id=\"monthlyPassCost\"\n                    placeholder=\"Monthly Pass Cost\"\n                    value={monthlyPassCost}\n                    name=\"monthlyPassCost\"\n                    onChange={this.handleFieldChange}\n                  />\n                </label>\n              </Form.Field>\n              <Form.Field>\n                <label htmlFor=\"fareCost\">\n                  Single Fare Cost\n                  <input\n                    type=\"number\"\n                    id=\"fareCost\"\n                    placeholder=\"Single Fare Cost\"\n                    value={fareCost}\n                    name=\"fareCost\"\n                    onChange={this.handleFieldChange}\n                  />\n                </label>\n              </Form.Field>\n            </Form.Group>\n            <Button positive onClick={() => this.handleUpdateBudgetDetails()}>\n              Save\n            </Button>\n          </Form>\n        </Segment>\n\n        <Header as=\"h3\" attached=\"top\" color=\"red\">\n          <Icon name=\"delete\" />\n          Delete Account\n        </Header>\n\n        <Segment attached color=\"red\" textAlign=\"center\">\n          <Popup\n            trigger={<Button color=\"red\" icon=\"cancel\" content=\"Delete My Account\" />}\n            on=\"click\"\n            position=\"top right\"\n          >\n            <Grid centered>\n              <Grid.Column textAlign=\"center\">\n                <p>This action cannot be undone</p>\n                <Button\n                  color=\"green\"\n                  content=\"Confirm Delete\"\n                  onClick={() => this.handleDeleteAccount()}\n                />\n              </Grid.Column>\n            </Grid>\n          </Popup>\n        </Segment>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(AccountSettings);\n","import React, { Component } from 'react';\nimport Fetch from 'react-fetch-component';\nimport {\n  Dimmer, Loader, Form, Message, Icon, Button, Segment,\n} from 'semantic-ui-react';\n\nimport API from '../lib/api';\nimport requestApi from '../lib/requestApi';\n\nexport default class PrestoSignin extends Component {\n  state = {\n    username: '',\n    password: '',\n    inProgress: false,\n    progressMessage: 'Fetching Data from Presto...',\n    isError: false,\n    cards: [],\n  };\n\n  handleTextEntry = e => {\n    const { name, value } = e.target;\n    // console.log(name, value);\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const {\n      username, password, cards, inProgress, progressMessage, isError,\n    } = this.state;\n    const { incrementSteps, update, closeModal } = this.props;\n\n    if (cards) {\n      console.log(cards.map(card => card.cardNumber));\n    }\n    return (\n      <Fetch\n        manual\n        url={`${API.root}${API.prestoUsage}`}\n        options={API.send({ from: '01/01/2018', cards: cards.map(card => card.cardNumber) })}\n      >\n        {({\n          fetch, data, error, loading,\n        }) => {\n          console.log(data);\n          if (!loading && data) {\n            this.setState({ inProgress: false, progressMessage: 'Complete!' });\n\n            if (update) {\n              closeModal();\n            } else {\n              incrementSteps();\n            }\n          }\n\n          const showHeader = () => {\n            if (loading || inProgress) {\n              return (\n                <Message attached icon>\n                  <Icon name=\"circle notched\" loading />\n                  <Message.Content>\n                    <Message.Header>One Moment</Message.Header>\n                    {progressMessage}\n                  </Message.Content>\n                </Message>\n              );\n            }\n\n            if (isError) {\n              return (\n                <Message attached icon negative>\n                  <Icon name=\"delete\" />\n\n                  <Message.Content>\n                    <Message.Header>An Error Occurred</Message.Header>\n                    {progressMessage}\n                  </Message.Content>\n                </Message>\n              );\n            }\n\n            return (\n              <Message\n                attached\n                header=\"Sign in to Presto\"\n                content=\"Enter your username and password to gather your presto data\"\n              />\n            );\n          };\n\n          return (\n            <div>\n              {showHeader()}\n              <Form className=\"attached fluid segment\">\n                <Form.Group widths=\"equal\">\n                  <Form.Input\n                    fluid\n                    placeholder=\"Username\"\n                    label=\"Username\"\n                    disabled={loading || inProgress}\n                    type=\"text\"\n                    name=\"username\"\n                    onChange={this.handleTextEntry}\n                    value={username}\n                  />\n                  <Form.Input\n                    fluid\n                    placeholder=\"Password\"\n                    label=\"Password\"\n                    disabled={loading || inProgress}\n                    type=\"password\"\n                    name=\"password\"\n                    onChange={this.handleTextEntry}\n                    value={password}\n                  />\n                </Form.Group>\n                <div>\n                  <Button\n                    positive\n                    labelPosition=\"right\"\n                    icon=\"chevron circle right\"\n                    content=\"Next\"\n                    disabled={loading || inProgress || !username || !password}\n                    onClick={async () => {\n                      this.setState({\n                        inProgress: true,\n                        progressMessage: 'Logging into PRESTO...',\n                      });\n\n                      this.setState({\n                        inProgress: true,\n                        progressMessage: 'Getting account data...',\n                      });\n                      const response = await requestApi.prestoLogin(username, password);\n                      console.log(response);\n                      if (response.cards) {\n                        this.setState({\n                          cards: response.cards,\n                          inProgress: true,\n                          progressMessage: 'Fetching PRESTO usage data...',\n                        });\n\n                        fetch();\n                      } else if (response.error && response.message === 'INVALID_LOGIN') {\n                        this.setState({\n                          inProgress: false,\n                          isError: true,\n                          progressMessage:\n                            \"You've entered an incorrect Presto username or password.\",\n                        });\n                      } else if (response.error && response.message !== 'INVALID_LOGIN') {\n                        this.setState({\n                          inProgress: false,\n                          isError: true,\n                          progressMessage: response.error,\n                        });\n                      }\n                    }}\n                  >\n                    <Icon name=\"checkmark\" />\n                    {`${\n                      update\n                        ? inProgress && progressMessage === 'Complete!'\n                          ? ' Close'\n                          : ' Update'\n                        : ' Next'\n                    }`}\n                  </Button>\n                  {update && (\n                    <Button\n                      negative\n                      content=\"Cancel\"\n                      disabled={inProgress}\n                      onClick={() => {\n                        closeModal();\n                      }}\n                    >\n                      {' Cancel'}\n                    </Button>\n                  )}\n                </div>\n              </Form>\n            </div>\n          );\n        }}\n      </Fetch>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Modal } from \"semantic-ui-react\";\n\nimport PrestoSignin from \"../PrestoSignin\";\n\nconst UpdatePresto = props => {\n  const { open, close } = props;\n\n  return (\n    <>\n      <Modal open={open} size=\"tiny\">\n        <PrestoSignin update closeModal={close} />\n      </Modal>\n    </>\n  );\n};\n\nexport default UpdatePresto;\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport {\n  Menu, Icon, Rail, Segment,\n} from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nimport AccountSettings from './AccountSettings';\nimport UpdatePresto from './dashboard/UpdatePresto';\n\nimport requestApi from '../lib/requestApi';\n\nconst Nav = styled.nav`\n  height: 100%;\n  padding: 20px;\n`;\n\nconst handleClick = e => {\n  // console.dir(e.target);\n  // if (e.target.name === 'Home') {\n  //   Router.push('/dashboard');\n  // } else {\n  //   Router.push('/monthly');\n  // }\n};\n\n// background: 'rgb(38,39,43)', color: 'rgb(209,211,212)'\nclass SideBar extends Component {\n  state = {\n    activeSelection: 'this month',\n    accountModalOpen: false,\n    prestoModalOpen: false,\n  };\n\n  handleItemClick = async (e, { name }) => {\n    if (name === 'update') {\n      this.setState({ prestoModalOpen: true });\n    }\n\n    if (name === 'logout') {\n      await requestApi.logout();\n      this.props.history.push('/login');\n    }\n\n    if (name === 'dashboard') {\n      this.props.history.push('/dashboard');\n    }\n\n    if (name === 'settings') {\n      this.props.history.push('/settings');\n    }\n  };\n\n  handleAccountModalClose = () => {\n    this.setState({ accountModalOpen: false });\n  };\n\n  handlePrestoModalClose = () => {\n    this.setState({ prestoModalOpen: false });\n  };\n\n  render() {\n    const { top, budget, user } = this.props;\n    const { prestoModalOpen } = this.state;\n\n    // fontVariant: 'all-small-caps',\n    return (\n      <>\n        <Menu\n          fixed=\"left\"\n          icon=\"labeled\"\n          size=\"small\"\n          compact\n          pointing\n          secondary\n          inverted\n          vertical\n          style={{\n            background: 'rgb(36,41,46)',\n            color: '#333845',\n            fontSize: '1rem',\n\n            display: 'flex',\n            flexDirection: 'column',\n            alignContent: 'center',\n          }}\n        >\n          <div style={{ margin: 'auto 0', width: '65px' }}>\n            <Menu.Item header>\n              {/* <Icon name=\"user circle outline\" size=\"large\" />{\" \"}\n            {`  ${firstName} ${lastName}`} */}\n            </Menu.Item>\n\n            <Menu.Menu position=\"right\">\n              <Menu.Item name=\"dashboard\" onClick={this.handleItemClick}>\n                <Icon name=\"dashboard\" size=\"large\" />\n              </Menu.Item>\n\n              <Menu.Item name=\"update\" onClick={this.handleItemClick}>\n                <Icon name=\"refresh\" size=\"large\" />\n              </Menu.Item>\n\n              <Menu.Item name=\"settings\" onClick={this.handleItemClick}>\n                <Icon name=\"setting\" size=\"large\" />\n              </Menu.Item>\n\n              <Menu.Item name=\"logout\" onClick={this.handleItemClick}>\n                <Icon name=\"log out\" size=\"large\" />\n              </Menu.Item>\n            </Menu.Menu>\n          </div>\n        </Menu>\n\n        <UpdatePresto open={prestoModalOpen} close={this.handlePrestoModalClose} />\n      </>\n    );\n  }\n}\n\nexport default withRouter(SideBar);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Icon, Grid } from \"semantic-ui-react\";\n\nexport default props => {\n  const { header, body, footer } = props;\n\n  return (\n    <Grid columns={1} style={{ marginTop: \"0\" }}>\n      <Grid.Row verticalAlign=\"center\" columns={1}>\n        <Grid.Column style={{ textAlign: \"right\", lineHeight: \"1.2\" }}>\n          <Grid.Row>\n            <div style={{ fontSize: \"1rem\", fontWeight: \"300\" }}>{header}</div>\n          </Grid.Row>\n          <Grid.Row>\n            <div\n              style={{ width: \"100%\", fontWeight: \"600\", fontSize: \"1.3rem\" }}>\n              {body}\n            </div>\n          </Grid.Row>\n          <Grid.Row>\n            <div\n              style={{\n                fontSize: \".9rem\",\n                fontWeight: \"200\",\n                color: \"#ababab\"\n              }}>\n              {footer}\n            </div>\n          </Grid.Row>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n","import React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport SmallStatistic from '../../styled/SmallStatistic';\n\nconst propTypes = {};\nconst defaultProps = {};\n\nconst User = props => {\n  const {\n    firstName, lastName, cards, balance, lastActivity, amount, since,\n  } = props;\n\n  return (\n    <div\n      style={{\n        background: 'white',\n        marginLeft: '67px',\n        padding: '10px',\n        borderBottom: '1px solid lightgrey',\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          width: '100%',\n        }}\n      >\n        <SmallStatistic\n          header=\"Balance\"\n          body={`$${(Math.round(balance * 100) / 100).toFixed(2)}`}\n          footer={`over ${cards.length} card${cards.length !== 1 ? 's' : ''}`}\n        />\n        <SmallStatistic\n          header=\"Spent\"\n          body={`$${Math.round(amount / 100)}`}\n          footer={`since ${moment(since).format('MMM YYYY')}`}\n        />\n        <SmallStatistic\n          header=\"Last Charge\"\n          body={`$${parseFloat(lastActivity.amount / 100).toFixed(2)}`}\n          footer={`${moment(lastActivity.date).fromNow()}`}\n        />\n        <SmallStatistic\n          header=\"Location\"\n          body={lastActivity.location}\n          footer={`${moment(lastActivity.date).fromNow()}`}\n        />\n        <SmallStatistic header=\"Updated\" body={moment(lastActivity.updated_at).fromNow()} />\n      </div>\n    </div>\n  );\n};\n\nUser.propTypes = propTypes;\nUser.defaultProps = defaultProps;\n\nexport default User;\n","import User from './User';\n\nexport default User;\n","import React, { Component, createRef } from 'react';\nimport {\n  Message, Container, Grid, Sticky, Ref,\n} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport Index from './Index';\nimport AuthUser from './AuthUser';\nimport Login from './Login';\nimport SideBar from './SideBar';\nimport User from './dashboard/User';\n\nimport requestApi from '../lib/requestApi';\n\nconst UserContext = React.createContext();\n\nconst Content = styled.div`\n  position: relative;\n  width: 100%;\n  color: white;\n  z-index: 1;\n`;\n\nconst Main = styled.main`\n  border-radius: 0.7em;\n  margin-left: 30px;\n  min-height: 400px;\n  margin-right: 15px;\n  /* border: 1px solid lightgrey; */\n  /* background: white; */\n  margin-top: 10px;\n  box-shadow: 0 1px 6px rgba(32, 33, 36, 0.28);\n  padding: 10px;\n`;\n\nconst FlexRow = styled.div`\n  display: flex;\n  position: relative;\n  flex-wrap: nowrap;\n  width: ${props => props.width || '100%'};\n  flex-direction: row;\n  align-items: ${props => props.align || 'stretch'};\n  justify-content: ${props => props.justify || 'stretch'};\n  padding: ${props => props.padding || '0'};\n`;\n\nexport default class Page extends Component {\n  state = {\n    menuValue: '',\n    updatePrestoOpen: false,\n    accountSettingsOpen: false,\n    redirect: false,\n  };\n\n  contextRef = createRef();\n\n  render() {\n    const { children, loginRequired } = this.props;\n    const { menuValue, accountSettingsOpen } = this.state;\n\n    return (\n      <AuthUser>\n        {({ data, error, loading }) => {\n          if (!loading && error && loginRequired) {\n            return (\n              <Index>\n                {error && <Message error>{error.message}</Message>}\n                <UserContext.Provider\n                  value={{\n                    data,\n                    error,\n                  }}\n                >\n                  <Login />\n                </UserContext.Provider>\n              </Index>\n            );\n          }\n\n          if (!loading && error && !loginRequired) {\n            return (\n              <Index>\n                <UserContext.Provider\n                  value={{\n                    data,\n                    error,\n                  }}\n                >\n                  {children}\n                </UserContext.Provider>\n              </Index>\n            );\n          }\n\n          if (!loading && data && data.status === 'success') {\n            const {\n              data: {\n                user,\n                budget,\n                balance,\n                lastActivity,\n                spent: { amount, since },\n              },\n            } = data;\n            console.log(data);\n            return (\n              <>\n                <SideBar />\n                <Ref innerRef={this.contextRef}>\n                  <Grid style={{ paddingTop: 0 }}>\n                    <Grid.Row>\n                      <Grid.Column>\n                        <Sticky context={this.contextRef}>\n                          <User\n                            firstName={user.firstName}\n                            lastName={user.lastName}\n                            cards={user.cards}\n                            balance={balance}\n                            budget={budget}\n                            amount={since ? amount : 'N/A'}\n                            since={since || 'Never'}\n                            lastActivity={\n                              lastActivity.length === 0\n                                ? { amount: 'Never', location: 'N/A', date: 'Never' }\n                                : lastActivity[0]\n                            }\n                          />\n                        </Sticky>\n                      </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                      <Grid.Column style={{ marginLeft: '80px', marginRight: '10px' }}>\n                        <UserContext.Provider\n                          value={{\n                            data: data.data,\n                          }}\n                        >\n                          {children}\n                        </UserContext.Provider>\n                      </Grid.Column>\n                    </Grid.Row>\n                    {/*\n                 * May move these to a different route\n                 <Grid.Row style={{ marginTop: \"20px\" }}>\n                 <Header as=\"h2\">\n                 Year Overview\n                 <Header.Subheader>\n                 Some kind of text will go here\n                 </Header.Subheader>\n                 </Header>\n                 <YearOverview budget={budget} />\n                </Grid.Row> */}\n                  </Grid>\n                </Ref>\n              </>\n            );\n          }\n        }}\n      </AuthUser>\n    );\n  }\n}\n\nexport {\n  UserContext, FlexRow, Content, Container,\n};\n","import React from \"react\";\nimport moment from \"moment\";\nimport {\n  ResponsiveContainer,\n  CartesianGrid,\n  Line,\n  LineChart,\n  XAxis,\n  YAxis,\n  ReferenceLine,\n  Tooltip\n} from \"recharts\";\n\nimport { FlexRow } from \"../Page\";\n\nexport default props => {\n  console.log(props);\n  const { dataset } = props;\n\n  return (\n    <div>\n      <FlexRow justify=\"space-between\" align=\"center\">\n        <h3\n          style={{\n            marginTop: \"0\",\n            marginBottom: \"0\",\n            marginLeft: \"25px\",\n            color: \"#11BB81\"\n          }}>\n          {\"Year to Month\"}\n        </h3>\n        <h3 style={{ marginTop: \"0\", marginRight: \"30px\", color: \"#3BB4E9\" }}>\n          {`$${(dataset.totalAmount / 100).toFixed(2)} Total`}\n        </h3>\n      </FlexRow>\n      <ResponsiveContainer height={200}>\n        <LineChart\n          margin={{\n            top: 20,\n            right: 30,\n            left: 0,\n            bottom: 0\n          }}\n          data={dataset.data}>\n          <CartesianGrid stroke=\"#EBEBEB\" vertical={false} />\n\n          <Line\n            dataKey=\"paymentTaps\"\n            type=\"monotone\"\n            stroke=\"#3333cc\"\n            strokeWidth={5}\n            dot={{\n              stroke: \"white\",\n              strokeWidth: 3,\n              fill: \"#3333cc\",\n              r: 7\n            }}\n          />\n          <Line\n            dataKey=\"transferTaps\"\n            type=\"monotone\"\n            stroke=\"#11BB81\"\n            strokeWidth={5}\n            dot={{\n              stroke: \"white\",\n              strokeWidth: 3,\n              fill: \"#11BB81\",\n              r: 7\n            }}\n          />\n          <Line\n            dataKey=\"amount\"\n            type=\"monotone\"\n            stroke=\"#3BB4E9\"\n            strokeWidth={5}\n            dot={{\n              stroke: \"white\",\n              strokeWidth: 3,\n              fill: \"#3BB4E9\",\n              r: 7\n            }}\n          />\n          <YAxis\n            type=\"number\"\n            tickMargin={20}\n            dataKey=\"amount\"\n            tickLine={false}\n            axisLine={false}\n            stroke=\"#C4C4C4\"\n          />\n          <XAxis\n            dataKey=\"date\"\n            tickMargin={5}\n            tickLine={false}\n            axisLine={false}\n            stroke=\"#C4C4C4\"\n          />\n\n          <ReferenceLine\n            y={\n              dataset.monthlyPassCost\n                ? parseFloat(dataset.monthlyPassCost / 100).toFixed(2)\n                : null\n            }\n            label=\"Transit Pass Cost\"\n            stroke=\"red\"\n          />\n          <ReferenceLine\n            y={(\n              parseFloat(dataset.monthlyPassCost) /\n              parseFloat(dataset.fareCost) /\n              100\n            ).toFixed(2)}\n            label=\"Transit Pass Break-even\"\n            stroke=\"red\"\n          />\n\n          <Tooltip />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  ResponsiveContainer,\n  CartesianGrid,\n  Line,\n  LineChart,\n  XAxis,\n  YAxis,\n  Tooltip\n} from \"recharts\";\n\nimport { FlexRow } from \"../Page\";\n\nexport default props => {\n  const { dataset, budget } = props;\n\n  dataset.data.forEach(item => {\n    let totalMonthlyPassCost = 0;\n\n    if (budget) {\n      totalMonthlyPassCost = budget.monthlyPassCost;\n    }\n\n    item.costPerTapIfPass = (\n      parseFloat(totalMonthlyPassCost) /\n      (item.paymentTaps + item.transferTaps)\n    ).toFixed(2);\n  });\n\n  console.log(dataset);\n\n  return (\n    <div>\n      <FlexRow justify=\"space-between\" align=\"center\">\n        <h3\n          style={{\n            marginTop: \"0\",\n            marginBottom: \"0\",\n            marginLeft: \"25px\",\n            color: \"#11BB81\"\n          }}>\n          {\"Cost Per Tap\"}\n        </h3>\n        <h3 style={{ marginTop: \"0\", marginRight: \"30px\", color: \"#3BB4E9\" }}>\n          {`$${dataset.costPerTap.toFixed(2)} / Tap`}\n        </h3>\n      </FlexRow>\n      <ResponsiveContainer height={200}>\n        <LineChart\n          margin={{\n            top: 20,\n            right: 30,\n            left: 0,\n            bottom: 0\n          }}\n          data={dataset.data}>\n          <CartesianGrid stroke=\"#EBEBEB\" vertical={false} />\n          <Line\n            dataKey=\"costPerTap\"\n            type=\"monotone\"\n            stroke=\"#3BB4E9\"\n            strokeWidth={5}\n            dot={{\n              stroke: \"white\",\n              strokeWidth: 3,\n              fill: \"#3BB4E9\",\n              r: 7\n            }}\n          />\n          {dataset.data[0] && dataset.data[0].costPerTapIfPass > 0 && (\n            <Line\n              dataKey=\"costPerTapIfPass\"\n              type=\"monotone\"\n              stroke=\"#3333cc\"\n              strokeWidth={5}\n              dot={{\n                stroke: \"white\",\n                strokeWidth: 3,\n                fill: \"#3333cc\",\n                r: 7\n              }}\n            />\n          )}\n          <YAxis\n            type=\"number\"\n            tickMargin={20}\n            dataKey=\"costPerTap\"\n            tickLine={false}\n            axisLine={false}\n            stroke=\"#C4C4C4\"\n          />\n          <XAxis\n            dataKey=\"date\"\n            tickMargin={5}\n            tickLine={false}\n            axisLine={false}\n            stroke=\"#C4C4C4\"\n          />\n          <Tooltip />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n","import React from \"react\";\nimport moment from \"moment\";\nimport {\n  ResponsiveContainer,\n  CartesianGrid,\n  Bar,\n  BarChart,\n  XAxis,\n  YAxis,\n  ReferenceLine,\n  Tooltip\n} from \"recharts\";\n\nimport { FlexRow } from \"../Page\";\n\nexport default props => {\n  const { dataset } = props;\n  const numOfMonths = dataset.data.length;\n\n  return (\n    <div>\n      <FlexRow justify=\"space-between\" align=\"center\">\n        <h3\n          style={{\n            marginTop: \"0\",\n            marginBottom: \"0\",\n            marginLeft: \"25px\",\n            color: \"#11BB81\"\n          }}>\n          {\"Tap Overview\"}\n        </h3>\n        <h3 style={{ marginTop: \"0\", marginRight: \"30px\", color: \"#3BB4E9\" }}>\n          {`${dataset.totalTaps} Taps Total`}\n        </h3>\n      </FlexRow>\n      <ResponsiveContainer height={200}>\n        <BarChart\n          margin={{\n            top: 20,\n            right: 30,\n            left: 0,\n            bottom: 0\n          }}\n          data={dataset.data}>\n          <CartesianGrid stroke=\"#EBEBEB\" vertical={false} />\n          <Tooltip />\n          <Bar stackId=\"a\" dataKey=\"paymentTaps\" fill=\"#3333cc\" />\n          <Bar stackId=\"a\" dataKey=\"transferTaps\" fill=\"#3BB4E9\" />\n          <ReferenceLine\n            y={dataset.totalTaps / numOfMonths}\n            label=\"Average Monthly Taps\"\n            stroke=\"red\"\n          />\n          <YAxis\n            allowDecimals={false}\n            type=\"number\"\n            dataKey=\"paymentTaps\"\n            tickLine={false}\n            axisLine={false}\n          />\n          <XAxis dataKey=\"date\" tickLine={false} axisLine={false} />\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n","import React, { Component } from 'react';\nimport Fetch from 'react-fetch-component';\nimport {\n  Tab, Segment, Header, Message,\n} from 'semantic-ui-react';\n\nimport YearStats from './YearStats';\nimport YearCostPerTap from './YearCostPerTap';\nimport YearTransactionBreakdown from './YearTransactionBreakdown';\n\nimport { FlexRow } from '../Page';\n\nimport API from '../../lib/api';\n\nfunction getMonthNumFromName(name) {\n  const months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  return months.indexOf(name) + 1;\n}\n\nfunction getDataset(obj) {\n  const dataset = {\n    data: [],\n    totalAmount: 0,\n    totalTaps: 0,\n    costPerTap: 0,\n  };\n  const years = Object.keys(obj);\n\n  years.forEach(year => {\n    const months = Object.keys(obj[year]);\n    months.forEach(month => {\n      const { amount, transactions, transitPassAmount } = obj[year][month];\n\n      const monthYearString = `${getMonthNumFromName(month)}/${year}`;\n      const payments = transactions.filter(item => item.type.includes('Payment'));\n      const transfers = transactions.filter(item => item.type.includes('Transfer'));\n      let costPerTap = Math.round(Math.round((amount + transitPassAmount) / transactions.length));\n\n      if (isNaN(costPerTap)) {\n        costPerTap = 0;\n      }\n\n      console.log(costPerTap);\n\n      dataset.totalAmount += amount + transitPassAmount;\n      dataset.totalTaps += transactions.length;\n\n      dataset.data.push({\n        date: monthYearString,\n        amount: Math.round(amount + transitPassAmount) / 100,\n        costPerTap: costPerTap / 100,\n        paymentTaps: payments.length,\n        transferTaps: transfers.length,\n        taps: transactions.length,\n      });\n    });\n  });\n\n  let totalCostPerTap = Math.round(dataset.totalAmount / dataset.totalTaps) / 100;\n\n  if (isNaN(totalCostPerTap)) {\n    totalCostPerTap = 0;\n  }\n  console.log('HEYHEY:', totalCostPerTap);\n  dataset.costPerTap = totalCostPerTap;\n  dataset.totalAmount = Math.round(dataset.totalAmount).toFixed(2);\n  return dataset;\n}\n\nexport default class MonthlyOverview extends Component {\n  state = {\n    month: new Date().getMonth(),\n    year: new Date().getFullYear(),\n    activeIndex: 0,\n    selectedMonth: new Date().getMonth(),\n    selectedYear: new Date().getFullYear(),\n  };\n\n  render() {\n    console.log('SUP?', this.props);\n    const {\n      year, month, selectedYear, selectedMonth, activeIndex,\n    } = this.state;\n    const { budget } = this.props;\n\n    const thisMonth = new Date().getMonth();\n    const thisYear = new Date().getFullYear();\n\n    return (\n      <Fetch url={`${API.root}${API.yearToDateData.endpoint}`} options={API.send('GET')}>\n        {payload => {\n          let dataset = {};\n\n          if (!payload.loading && payload.error) {\n            return <Message error>{payload.error.message}</Message>;\n          }\n\n          if (!payload.loading) {\n            dataset = getDataset(payload.data.data);\n          }\n\n          return (\n            <>\n              <FlexRow padding=\"0 0 10px 0\">\n                <div style={{ width: '50%', marginRight: '10px' }}>\n                  <Segment vertical style={{ minHeight: '250px' }} loading={payload.loading}>\n                    {!payload.loading && <YearStats dataset={dataset} budget={budget} />}\n                  </Segment>\n                </div>\n                <div style={{ width: '50%' }}>\n                  <Segment vertical style={{ minHeight: '250px' }} loading={payload.loading}>\n                    {!payload.loading && <YearCostPerTap dataset={dataset} budget={budget} />}\n                  </Segment>\n                </div>\n              </FlexRow>\n              <div style={{ width: '100%' }}>\n                <Segment vertical style={{ minHeight: '250px' }} loading={payload.loading}>\n                  {!payload.loading && <YearTransactionBreakdown dataset={dataset} />}\n                </Segment>\n              </div>\n            </>\n          );\n        }}\n      </Fetch>\n    );\n  }\n}\n","import moment from 'moment';\nimport React from 'react';\nimport { Grid, Header, Divider } from 'semantic-ui-react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport DataFilter, { SEARCH_TYPE_RANGE, SEARCH_TYPE_MONTH } from './dashboard/DataFilter';\nimport FilteredStats from './dashboard/FilteredStats';\nimport MonthlyOverview from './dashboard/MonthlyOverview';\nimport RecentActivity from './dashboard/RecentActivity';\nimport TapList from './dashboard/TapList';\nimport TopTapOrigins from './dashboard/TopTapOrigins';\nimport YearOverview from './dashboard/YearOverview';\n\nconst Dashboard = props => {\n  const {\n    props: {\n      data: {\n        user,\n        balance,\n        budget,\n        lastActivity,\n        spent: { amount, since },\n      },\n    },\n  } = props;\n\n  return (\n    <>\n      <Route path=\"/dashboard/:cardNumber/:searchType/:yearOrRange/:monthOrUnit\">\n        {({ match, history }) => {\n          console.log(match, history);\n          let cardNumber;\n          let searchType;\n          let yearOrRange;\n          let monthOrUnit;\n\n          if (match) {\n            cardNumber = match.params.cardNumber;\n            searchType = match.params.searchType === SEARCH_TYPE_RANGE\n              || match.params.searchType === SEARCH_TYPE_MONTH\n              ? match.params.searchType\n              : 'err';\n            yearOrRange = Math.abs(parseInt(match.params.yearOrRange, 10));\n            monthOrUnit = match.params.monthOrUnit !== 'days'\n              ? Math.abs(parseInt(match.params.monthOrUnit, 10))\n              : 'days';\n          } else {\n            // defaults\n            cardNumber = 'all';\n            searchType = SEARCH_TYPE_RANGE;\n            yearOrRange = 30;\n            monthOrUnit = 'days';\n\n            return (\n              <Redirect\n                to={`/dashboard/${cardNumber}/${searchType}/${yearOrRange}/${monthOrUnit}`}\n              />\n            );\n          }\n\n          return (\n            <DataFilter\n              cards={user.cards}\n              history={history}\n              match={match}\n              cardNumber={cardNumber}\n              searchType={searchType}\n              yearOrRange={yearOrRange}\n              monthOrUnit={monthOrUnit}\n            >\n              {({ data, error, loading }) => {\n                console.log(data);\n                return (\n                  <Grid columns=\"equal\">\n                    <Grid.Row>\n                      <Grid.Column>\n                        <MonthlyOverview\n                          data={data}\n                          error={error}\n                          loading={loading}\n                          budget={budget || {}}\n                        />\n                      </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                      <Grid.Column>\n                        <FilteredStats data={data} error={error} loading={loading} />\n                      </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                      <Grid.Column>\n                        <TopTapOrigins data={data} error={error} loading={loading} />\n                      </Grid.Column>\n                      <Grid.Column />\n                    </Grid.Row>\n                    <Divider horizontal>\n                      <Header as=\"h3\">\n                        Year Overview\n                        <Header.Subheader>Year To Month Overview</Header.Subheader>\n                      </Header>\n                    </Divider>\n                    <Grid.Row>\n                      <Grid.Column>\n                        <YearOverview />\n                      </Grid.Column>\n                    </Grid.Row>\n                  </Grid>\n                );\n              }}\n            </DataFilter>\n          );\n        }}\n      </Route>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport MainDashboard from \"../components/Dashboard\";\nimport Page, { UserContext } from \"../components/Page\";\n\nconst propTypes = {};\n\nconst defaultProps = {};\n\nexport default function Dashboard(props) {\n  return (\n    <Page loginRequired>\n      <UserContext.Consumer>\n        {data => <MainDashboard props={data} />}\n      </UserContext.Consumer>\n    </Page>\n  );\n}\n\nDashboard.propTypes = propTypes;\nDashboard.defaultProps = defaultProps;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport LoginPage from \"../components/Login\";\nimport Page from \"../components/Page\";\n\nconst propTypes = {};\n\nconst defaultProps = {};\n\nexport default function Login(props) {\n  return (\n    <Page loginRequired={false}>\n      <LoginPage />\n    </Page>\n  );\n}\n\nLogin.propTypes = propTypes;\nLogin.defaultProps = defaultProps;\n","import React, { Component } from \"react\";\n\nimport NProgress from \"nprogress\";\nimport { Button, Message, Form, Icon } from \"semantic-ui-react\";\nimport Fetch from \"react-fetch-component\";\nimport { Link } from \"react-router-dom\";\n\nimport API from \"../lib/api\";\n\nexport default class Register extends Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    passwordAgain: \"\"\n  };\n\n  saveToState = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    const { firstName, lastName, email, password, passwordAgain } = this.state;\n    const { incrementSteps } = this.props;\n\n    return (\n      <Fetch\n        manual\n        url={`${API.root}${API.register}`}\n        options={API.send({\n          firstName,\n          lastName,\n          email,\n          password,\n          passwordAgain\n        })}>\n        {({ fetch, loading, data, error }) => {\n          if (data) {\n            NProgress.done();\n            if (incrementSteps) {\n              incrementSteps();\n            }\n          }\n\n          const handleError = () => {\n            NProgress.done();\n            return (\n              <div>\n                ERROR:\n                {error.message}\n              </div>\n            );\n          };\n\n          return (\n            <div style={{ minWidth: \"50%\" }}>\n              <Message\n                attached\n                header=\"Register\"\n                content=\"Fill out the form below to sign-up for a new account\"\n              />\n\n              {error && handleError()}\n\n              <Form className=\"attached fluid segment\">\n                <Form.Group widths=\"equal\">\n                  <Form.Input\n                    fluid\n                    label=\"First Name\"\n                    type=\"text\"\n                    placeholder=\"First Name\"\n                    value={firstName}\n                    onChange={this.saveToState}\n                    name=\"firstName\"\n                    disabled={loading}\n                  />\n                  <Form.Input\n                    fluid\n                    label=\"Last Name\"\n                    placeholder=\"Last Name\"\n                    type=\"text\"\n                    name=\"lastName\"\n                    onChange={this.saveToState}\n                    value={lastName}\n                    disabled={loading}\n                  />\n                </Form.Group>\n\n                <Form.Input\n                  fluid\n                  placeholder=\"Email\"\n                  label=\"Email\"\n                  disabled={loading}\n                  type=\"text\"\n                  name=\"email\"\n                  onChange={this.saveToState}\n                  value={email}\n                />\n\n                <Form.Group widths=\"equal\">\n                  <Form.Input\n                    fluid\n                    placeholder=\"Password\"\n                    label=\"Password\"\n                    disabled={loading}\n                    type=\"password\"\n                    name=\"password\"\n                    onChange={this.saveToState}\n                    value={password}\n                  />\n                  <Form.Input\n                    fluid\n                    placeholder=\"Password Again\"\n                    disabled={loading}\n                    label=\"Password Again\"\n                    type=\"password\"\n                    name=\"passwordAgain\"\n                    onChange={this.saveToState}\n                    value={passwordAgain}\n                  />\n                </Form.Group>\n\n                <Button\n                  positive\n                  labelPosition=\"right\"\n                  icon=\"chevron circle right\"\n                  content=\"Next\"\n                  disabled={\n                    loading ||\n                    (!firstName ||\n                      !lastName ||\n                      !email ||\n                      !password ||\n                      !passwordAgain ||\n                      password !== passwordAgain)\n                  }\n                  loading={loading}\n                  onClick={() => {\n                    NProgress.start();\n                    fetch();\n\n                    this.setState({\n                      firstName: \"\",\n                      lastName: \"\",\n                      email: \"\",\n                      password: \"\",\n                      passwordAgain: \"\"\n                    });\n                  }}\n                />\n              </Form>\n              <Message attached=\"bottom\" warning>\n                <Icon name=\"help\" />\n                Already signed up?&nbsp;\n                <Link to=\"/login\">Login</Link>\n                &nbsp;instead.\n              </Message>\n            </div>\n          );\n        }}\n      </Fetch>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Container, Header, Icon, Step, Segment,\n} from 'semantic-ui-react';\n\nimport RegisterAccount from './RegisterAccount';\nimport PrestoSignin from './PrestoSignin';\n\nclass Register extends Component {\n  state = {\n    activeStep: 1,\n    completedSteps: 0,\n  };\n\n  incrementSteps = () => {\n    const { activeStep, completedSteps } = this.state;\n\n    this.setState({ activeStep: activeStep + 1, completedSteps: completedSteps + 1 });\n  };\n\n  render() {\n    const { activeStep, completedSteps } = this.state;\n    console.log(completedSteps > 0, activeStep);\n    return (\n      <Container>\n        <Segment basic textAlign=\"center\">\n          <Step.Group ordered>\n            <Step active={activeStep === 1} completed={completedSteps > 0}>\n              <Step.Content>\n                <Step.Title>Sign Up</Step.Title>\n                <Step.Description>Sign up for your account</Step.Description>\n              </Step.Content>\n            </Step>\n\n            <Step active={activeStep === 2} completed={completedSteps > 1}>\n              <Step.Content>\n                <Step.Title>Presto</Step.Title>\n                <Step.Description>Sign in to Presto</Step.Description>\n              </Step.Content>\n            </Step>\n\n            <Step active={activeStep === 3} completed={completedSteps > 2}>\n              <Step.Content>\n                <Step.Title>Finalize</Step.Title>\n              </Step.Content>\n            </Step>\n          </Step.Group>\n        </Segment>\n\n        <Segment basic>\n          {activeStep === 1 && <RegisterAccount incrementSteps={this.incrementSteps} />}\n          {activeStep === 2 && <PrestoSignin incrementSteps={this.incrementSteps} />}\n          {activeStep === 3 && <div>ALL DONE</div>}\n        </Segment>\n      </Container>\n    );\n  }\n}\n\nexport default Register;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Page from \"../components/Page\";\nimport RegisterPage from \"../components/Register\";\n\nconst propTypes = {};\nconst defaultProps = {};\n\nexport default function Register(props) {\n  return (\n    <Page>\n      <RegisterPage />\n    </Page>\n  );\n}\n\nRegister.propTypes = propTypes;\nRegister.defaultProps = defaultProps;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport AccountSettings from '../components/AccountSettings';\nimport Page, { UserContext } from '../components/Page';\n\nconst propTypes = {};\n\nconst defaultProps = {};\n\nexport default function Settings() {\n  return (\n    <Page loginRequired>\n      <UserContext.Consumer>\n        {data => {\n          console.log(data);\n          return <AccountSettings props={data} />;\n        }}\n      </UserContext.Consumer>\n    </Page>\n  );\n}\n\nSettings.propTypes = propTypes;\nSettings.defaultProps = defaultProps;\n","import 'semantic-ui-less/semantic.less';\n\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nimport Dashboard from './routes/Dashboard';\nimport Login from './routes/Login';\nimport Register from './routes/Register';\nimport Settings from './routes/Settings';\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={Login} />\n      <Route path=\"/settings\" component={Settings} />\n      <Route path=\"/dashboard\" component={Dashboard} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/register\" component={Register} />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}